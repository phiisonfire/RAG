DEBUG:llama_index.node_parser.node_utils:> Adding chunk: What I Worked On

February 2021

Before college...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: The only form of input to programs was data sto...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: This was when I really started programming. I w...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I haven't tried rereading The Moon is a Harsh M...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I had gotten into a program at Cornell that did...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: It was not, in fact, simply a matter of teachin...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: The problem with systems work, though, was that...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: And moreover this was something you could make ...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I didn't want to drop out of grad school, but h...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: RISD accepted me, and I never heard back from t...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I remember that I answered the essay question b...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: She'd copy an obscure old painting out of a boo...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: [4]

I liked painting still lives because I was...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I wanted to go back to RISD, but I was now brok...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: That seemed unnatural to me, and on this point ...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: But the most important thing I learned, and whi...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: At least not the painting department. The texti...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I was not one of the kids who could draw in hig...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: So with my unerring nose for financial opportun...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: It seemed to me that the web would be a big dea...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: This impressive-sounding thing called an "inter...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: Users wouldn't need anything more than a browse...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: (Had I diligently set aside the proper proporti...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: But I decided it might be prudent to recruit mo...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I kept the code tight and didn't have to integr...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: The most common of which was building stores fo...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: Our growth rate was fine. We had about 70 store...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: In principle our Viaweb stock was valuable. It ...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I hung on till the first chunk of options veste...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: Now when I talk to founders who are leaving aft...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: It was exciting for a while. Painting started t...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I hoped to lure Robert into working on it with ...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: But about halfway through the summer I realized...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I was invited to give a talk at a Lisp conferen...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: Except for a few officially anointed thinkers w...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: It's not that unprestigious types of work are g...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: So for every guest, two thirds of the other gue...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: Maybe they'd be able to avoid the worst of the ...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: We had no idea how to be angel investors, and i...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: That went right by 99% of readers, but professi...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: We knew undergrads were deciding then about sum...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: We invested $6k per founder, which in the typic...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: As YC grew, and I grew more excited about it, i...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: [17]

As well as HN, I wrote all of YC's intern...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: I wanted YC to be good, so if how hard I worked...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: And it wasn't, so I would.

In the summer of 20...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: We decided he'd take over starting with the win...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: Up till that point I'd always been curious to s...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: Russell translated McCarthy's interpreter into ...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: So I decided to take a shot at it. It took 4 ye...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: Occasionally after wrestling for hours with som...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: How should I choose what to do? Well, how had I...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: [4] You can of course paint people like still l...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: [9] We'd had a code editor in Viaweb for users ...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: Startups had once been much more expensive to s...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: [14] YC did become a fund for a couple years st...
DEBUG:llama_index.node_parser.node_utils:> Adding chunk: But that in turn encourages more; anyone who wa...
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWhat I Worked On\n\nFebruary 2021\n\nBefore college the two main things I worked on, outside of school, were writing and programming. I didn\'t write essays. I wrote what beginning writers were supposed to write then, and probably still are: short stories. My stories were awful. They had hardly any plot, just characters with strong feelings, which I imagined made them deep.\n\nThe first programs I tried writing were on the IBM 1401 that our school district used for what was then called "data processing." This was in 9th grade, so I was 13 or 14. The school district\'s 1401 happened to be in the basement of our junior high school, and my friend Rich Draves and I got permission to use it. It was like a mini Bond villain\'s lair down there, with all these alien-looking machines — CPU, disk drives, printer, card reader — sitting up on a raised floor under bright fluorescent lights.\n\nThe language we used was an early version of Fortran. You had to type programs on punch cards, then stack them in the card reader and press a button to load the program into memory and run it. The result would ordinarily be to print something on the spectacularly loud printer.\n\nI was puzzled by the 1401. I couldn\'t figure out what to do with it. And in retrospect there\'s not much I could have done with it. The only form of input to programs was data stored on punched cards, and I didn\'t have any data stored on punched cards. The only other option was to do things that didn\'t rely on any input, like calculate approximations of pi, but I didn\'t know enough math to do anything interesting of that type. So I\'m not surprised I can\'t remember any programs I wrote, because they can\'t have done much. My clearest memory is of the moment I learned it was possible for programs not to terminate, when one of mine didn\'t. On a machine without time-sharing, this was a social as well as a technical error, as the data center manager\'s expression made clear.\n\nWith microcomputers, everything changed. Now you could have a computer sitting right in front of you, on a desk, that could respond to your keystrokes as it was running instead of just churning through a stack of punch cards and then stopping.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e46560>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e46530>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:13:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'16189'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'197'), (b'x-ratelimit-remaining-tokens', b'39320'), (b'x-ratelimit-remaining-tokens_usage_based', b'39320'), (b'x-ratelimit-reset-requests', b'21m30.045s'), (b'x-ratelimit-reset-tokens', b'1.02s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.02s'), (b'x-request-id', b'd03e38b53c35321defdaf69bfc2ecbdc'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=r2LksqRjM0qz6xx9E6fDNXylr6Tcg92X6ShOutnDpdA-1701684802-0-AVIswo42r23VQe9u+IhRwAsX/YYkoc9o/ePEym7NBmaMdrTSlZwRhXEACRfiHOurrzzeZOZmLCFW70xr52mdrC8=; path=/; expires=Mon, 04-Dec-23 10:43:22 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=4hluIa0ASJ.IfrgMzC9FNdH1mgcj3.GSSdv9gAiAdCk-1701684802831-0-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303465a5eaae666-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(I, worked on, writing)
(I, worked on, programming)
(I, wrote, short stories)
(I, tried writing, programs)
(IBM 1401, used for, data processing)
(school district's 1401, happened to be in, basement of junior high school)
(I, puzzled by, 1401)
(I, couldn't figure out, what to do with, 1401)
(programs, loaded into, memory)
(result, would ordinarily be, to print something)
(I, didn't have, any data stored on punched cards)
(I, didn't know enough math, to do anything interesting)
(one of mine, didn't terminate)
(microcomputers, changed everything)
(computer, could respond to, keystrokes)
(computer, running)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('I', 'worked on', 'writing'), ('I', 'worked on', 'programming'), ('I', 'wrote', 'short stories'), ('I', 'tried writing', 'programs'), ('IBM 1401', 'used for', 'data processing'), ("school district's 1401", 'happened to be in', 'basement of junior high school'), ('I', 'puzzled by', '1401'), ('programs', 'loaded into', 'memory'), ('result', 'would ordinarily be', 'to print something'), ('I', "didn't have", 'any data stored on punched cards'), ('I', "didn't know enough math", 'to do anything interesting'), ('computer', 'could respond to', 'keystrokes')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4202.1291231 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.8888484, ttl=10, perf_time=4202.1306755 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WORKED_ON`]->(n2)\n        ' {'subj': 'I', 'obj': 'writing'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 794, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXQiQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4203.3247803 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4203.3264588 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WORKED_ON`]->(n2)\n        ' {'subj': 'I', 'obj': 'programming'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 128, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXQmQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4203.5095403 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4203.5130672 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WROTE`]->(n2)\n        ' {'subj': 'I', 'obj': 'short stories'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 221, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXQuQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4203.7904795 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4203.7922117 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`TRIED_WRITING`]->(n2)\n        ' {'subj': 'I', 'obj': 'programs'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 328, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXQ2Q', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4204.1853066 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4204.1876026 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`USED_FOR`]->(n2)\n        ' {'subj': 'IBM 1401', 'obj': 'data processing'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 166, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXQ+Q', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4204.4172557 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4204.4193791 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`HAPPENED_TO_BE_IN`]->(n2)\n        ' {'subj': "school district's 1401", 'obj': 'basement of junior high school'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 156, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXRGQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4204.6470226 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4204.648796 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`PUZZLED_BY`]->(n2)\n        ' {'subj': 'I', 'obj': '1401'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 123, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXROQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4204.8296627 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4204.8313441 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`LOADED_INTO`]->(n2)\n        ' {'subj': 'programs', 'obj': 'memory'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 127, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXRWQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4205.0191929 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4205.0225094 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WOULD_ORDINARILY_BE`]->(n2)\n        ' {'subj': 'result', 'obj': 'to print something'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 130, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXReQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4205.2062083 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4205.2079516 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN "\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`DIDN'T_HAVE`]->(n2)\n        " {'subj': 'I', 'obj': 'any data stored on punched cards'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 130, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXRmQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4205.3947874 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4205.396539 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN "\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`DIDN'T_KNOW_ENOUGH_MATH`]->(n2)\n        " {'subj': 'I', 'obj': 'to do anything interesting'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 141, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXRuQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4205.5962134 => False
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4205.597948 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`COULD_RESPOND_TO`]->(n2)\n        ' {'subj': 'computer', 'obj': 'keystrokes'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 239, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXR2Q', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe only form of input to programs was data stored on punched cards, and I didn't have any data stored on punched cards. The only other option was to do things that didn't rely on any input, like calculate approximations of pi, but I didn't know enough math to do anything interesting of that type. So I'm not surprised I can't remember any programs I wrote, because they can't have done much. My clearest memory is of the moment I learned it was possible for programs not to terminate, when one of mine didn't. On a machine without time-sharing, this was a social as well as a technical error, as the data center manager's expression made clear.\n\nWith microcomputers, everything changed. Now you could have a computer sitting right in front of you, on a desk, that could respond to your keystrokes as it was running instead of just churning through a stack of punch cards and then stopping. [1]\n\nThe first of my friends to get a microcomputer built it himself. It was sold as a kit by Heathkit. I remember vividly how impressed and envious I felt watching him sitting in front of it, typing programs right into the computer.\n\nComputers were expensive in those days and it took me years of nagging before I convinced my father to buy one, a TRS-80, in about 1980. The gold standard then was the Apple II, but a TRS-80 was good enough. This was when I really started programming. I wrote simple games, a program to predict how high my model rockets would fly, and a word processor that my father used to write at least one book. There was only room in memory for about 2 pages of text, so he'd write 2 pages at a time and then print them out, but it was a lot better than a typewriter.\n\nThough I liked programming, I didn't plan to study it in college. In college I was going to study philosophy, which sounded much more powerful. It seemed, to my naive high school self, to be the study of the ultimate truths, compared to which the things studied in other fields would be mere domain knowledge. What I discovered when I got to college was that the other fields took up so much of the space of ideas that there wasn't much left for these supposed ultimate truths.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:13:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1667'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'196'), (b'x-ratelimit-remaining-tokens', b'39326'), (b'x-ratelimit-remaining-tokens_usage_based', b'39326'), (b'x-ratelimit-reset-requests', b'28m21.662s'), (b'x-ratelimit-reset-tokens', b'1.011s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.011s'), (b'x-request-id', b'6e7dd3c80e49f765ca23e15f3f2f9170'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830346d9bdd5e666-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Heathkit, sold as, kit)
(TRS-80, was, good enough)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Heathkit', 'sold as', 'kit'), ('TRS-80', 'was', 'good enough')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=None
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4176.1966708, ttl=0, perf_time=4207.9181224 => True
DEBUG:neo4j:[#0000]  _: <POOL> dropping routing table for database=None
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4207.9284024 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`SOLD_AS`]->(n2)\n        ' {'subj': 'Heathkit', 'obj': 'kit'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 115, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXR+Q', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4208.1078314 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WAS`]->(n2)\n        ' {'subj': 'TRS-80', 'obj': 'good enough'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 130, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXSGQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThis was when I really started programming. I wrote simple games, a program to predict how high my model rockets would fly, and a word processor that my father used to write at least one book. There was only room in memory for about 2 pages of text, so he'd write 2 pages at a time and then print them out, but it was a lot better than a typewriter.\n\nThough I liked programming, I didn't plan to study it in college. In college I was going to study philosophy, which sounded much more powerful. It seemed, to my naive high school self, to be the study of the ultimate truths, compared to which the things studied in other fields would be mere domain knowledge. What I discovered when I got to college was that the other fields took up so much of the space of ideas that there wasn't much left for these supposed ultimate truths. All that seemed left for philosophy were edge cases that people in other fields felt could safely be ignored.\n\nI couldn't have put this into words when I was 18. All I knew at the time was that I kept taking philosophy courses and they kept being boring. So I decided to switch to AI.\n\nAI was in the air in the mid 1980s, but there were two things especially that made me want to work on it: a novel by Heinlein called The Moon is a Harsh Mistress, which featured an intelligent computer called Mike, and a PBS documentary that showed Terry Winograd using SHRDLU. I haven't tried rereading The Moon is a Harsh Mistress, so I don't know how well it has aged, but when I read it I was drawn entirely into its world. It seemed only a matter of time before we'd have Mike, and when I saw Winograd using SHRDLU, it seemed like that time would be a few years at most. All you had to do was teach SHRDLU more words.\n\nThere weren't any classes in AI at Cornell then, not even graduate classes, so I started trying to teach myself. Which meant learning Lisp, since in those days Lisp was regarded as the language of AI. The commonly used programming languages then were pretty primitive, and programmers' ideas correspondingly so. The default language at Cornell was a Pascal-like language called PL/I, and the situation was similar elsewhere.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:13:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1847'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'195'), (b'x-ratelimit-remaining-tokens', b'39326'), (b'x-ratelimit-remaining-tokens_usage_based', b'39326'), (b'x-ratelimit-reset-requests', b'35m31.272s'), (b'x-ratelimit-reset-tokens', b'1.011s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.011s'), (b'x-request-id', b'25d4cae2caef5af8e71c2ffa7ef5fd75'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830346e8bfa6e666-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Philz, founded in, Berkeley)
(Philz, founded in, 1982)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Philz', 'founded in', 'Berkeley'), ('Philz', 'founded in', '1982')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4210.5701237 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': 'Berkeley'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 146, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXSOQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4210.7910701 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4202.3060928, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': '1982'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 11, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXSSQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI haven\'t tried rereading The Moon is a Harsh Mistress, so I don\'t know how well it has aged, but when I read it I was drawn entirely into its world. It seemed only a matter of time before we\'d have Mike, and when I saw Winograd using SHRDLU, it seemed like that time would be a few years at most. All you had to do was teach SHRDLU more words.\n\nThere weren\'t any classes in AI at Cornell then, not even graduate classes, so I started trying to teach myself. Which meant learning Lisp, since in those days Lisp was regarded as the language of AI. The commonly used programming languages then were pretty primitive, and programmers\' ideas correspondingly so. The default language at Cornell was a Pascal-like language called PL/I, and the situation was similar elsewhere. Learning Lisp expanded my concept of a program so fast that it was years before I started to have a sense of where the new limits were. This was more like it; this was what I had expected college to do. It wasn\'t happening in a class, like it was supposed to, but that was ok. For the next couple years I was on a roll. I knew what I was going to do.\n\nFor my undergraduate thesis, I reverse-engineered SHRDLU. My God did I love working on that program. It was a pleasing bit of code, but what made it even more exciting was my belief — hard to imagine now, but not unique in 1985 — that it was already climbing the lower slopes of intelligence.\n\nI had gotten into a program at Cornell that didn\'t make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose "Artificial Intelligence." When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.\n\nI applied to 3 grad schools: MIT and Yale, which were renowned for AI at the time, and Harvard, which I\'d visited because Rich Draves went there, and was also home to Bill Woods, who\'d invented the type of parser I used in my SHRDLU clone.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:13:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1907'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'194'), (b'x-ratelimit-remaining-tokens', b'39337'), (b'x-ratelimit-remaining-tokens_usage_based', b'39337'), (b'x-ratelimit-reset-requests', b'42m40.715s'), (b'x-ratelimit-reset-tokens', b'994ms'), (b'x-ratelimit-reset-tokens_usage_based', b'994ms'), (b'x-request-id', b'9037a14d95f636eb868a0d69268bcb35'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830346f8bb2be666-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Philz, founded in, Berkeley)
(Philz, founded in, 1982)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Philz', 'founded in', 'Berkeley'), ('Philz', 'founded in', '1982')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4202.3060928, ttl=10, perf_time=4213.1913922 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4213.3688091, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4213.3688091, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': 'Berkeley'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 10, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXSSQ', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4213.3688091, ttl=10, perf_time=4213.4276878 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4213.3688091, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': '1982'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 9, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXSSQ', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI had gotten into a program at Cornell that didn\'t make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose "Artificial Intelligence." When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.\n\nI applied to 3 grad schools: MIT and Yale, which were renowned for AI at the time, and Harvard, which I\'d visited because Rich Draves went there, and was also home to Bill Woods, who\'d invented the type of parser I used in my SHRDLU clone. Only Harvard accepted me, so that was where I went.\n\nI don\'t remember the moment it happened, or if there even was a specific moment, but during the first year of grad school I realized that AI, as practiced at the time, was a hoax. By which I mean the sort of AI in which a program that\'s told "the dog is sitting on the chair" translates this into some formal representation and adds it to the list of things it knows.\n\nWhat these programs really showed was that there\'s a subset of natural language that\'s a formal language. But a very proper subset. It was clear that there was an unbridgeable gap between what they could do and actually understanding natural language. It was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It\'s scary to think how little I knew about Lisp hacking when I started writing that book.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:13:34 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'193'), (b'x-ratelimit-remaining-tokens', b'39322'), (b'x-ratelimit-remaining-tokens_usage_based', b'39322'), (b'x-ratelimit-reset-requests', b'49m50.087s'), (b'x-ratelimit-reset-tokens', b'1.017s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.017s'), (b'x-request-id', b'b38c287b7a3d4815023ff828672be33a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830347092f7ee666-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.981651 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI had gotten into a program at Cornell that didn\'t make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose "Artificial Intelligence." When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.\n\nI applied to 3 grad schools: MIT and Yale, which were renowned for AI at the time, and Harvard, which I\'d visited because Rich Draves went there, and was also home to Bill Woods, who\'d invented the type of parser I used in my SHRDLU clone. Only Harvard accepted me, so that was where I went.\n\nI don\'t remember the moment it happened, or if there even was a specific moment, but during the first year of grad school I realized that AI, as practiced at the time, was a hoax. By which I mean the sort of AI in which a program that\'s told "the dog is sitting on the chair" translates this into some formal representation and adds it to the list of things it knows.\n\nWhat these programs really showed was that there\'s a subset of natural language that\'s a formal language. But a very proper subset. It was clear that there was an unbridgeable gap between what they could do and actually understanding natural language. It was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It\'s scary to think how little I knew about Lisp hacking when I started writing that book.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:13:35 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'192'), (b'x-ratelimit-remaining-tokens', b'39322'), (b'x-ratelimit-remaining-tokens_usage_based', b'39322'), (b'x-ratelimit-reset-requests', b'57m0.837s'), (b'x-ratelimit-reset-tokens', b'1.017s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.017s'), (b'x-request-id', b'604bb30f7435da9d5df631030bfa7e29'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034710ec98e666-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.566860 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI had gotten into a program at Cornell that didn\'t make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose "Artificial Intelligence." When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.\n\nI applied to 3 grad schools: MIT and Yale, which were renowned for AI at the time, and Harvard, which I\'d visited because Rich Draves went there, and was also home to Bill Woods, who\'d invented the type of parser I used in my SHRDLU clone. Only Harvard accepted me, so that was where I went.\n\nI don\'t remember the moment it happened, or if there even was a specific moment, but during the first year of grad school I realized that AI, as practiced at the time, was a hoax. By which I mean the sort of AI in which a program that\'s told "the dog is sitting on the chair" translates this into some formal representation and adds it to the list of things it knows.\n\nWhat these programs really showed was that there\'s a subset of natural language that\'s a formal language. But a very proper subset. It was clear that there was an unbridgeable gap between what they could do and actually understanding natural language. It was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It\'s scary to think how little I knew about Lisp hacking when I started writing that book.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:13:37 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'191'), (b'x-ratelimit-remaining-tokens', b'39322'), (b'x-ratelimit-remaining-tokens_usage_based', b'39322'), (b'x-ratelimit-reset-requests', b'1h4m10.986s'), (b'x-ratelimit-reset-tokens', b'1.017s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.017s'), (b'x-request-id', b'587ee1eb145415bbf039dd39f9691119'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303471c588fe666-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.831021 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI had gotten into a program at Cornell that didn\'t make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose "Artificial Intelligence." When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.\n\nI applied to 3 grad schools: MIT and Yale, which were renowned for AI at the time, and Harvard, which I\'d visited because Rich Draves went there, and was also home to Bill Woods, who\'d invented the type of parser I used in my SHRDLU clone. Only Harvard accepted me, so that was where I went.\n\nI don\'t remember the moment it happened, or if there even was a specific moment, but during the first year of grad school I realized that AI, as practiced at the time, was a hoax. By which I mean the sort of AI in which a program that\'s told "the dog is sitting on the chair" translates this into some formal representation and adds it to the list of things it knows.\n\nWhat these programs really showed was that there\'s a subset of natural language that\'s a formal language. But a very proper subset. It was clear that there was an unbridgeable gap between what they could do and actually understanding natural language. It was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It\'s scary to think how little I knew about Lisp hacking when I started writing that book.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:13:41 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'190'), (b'x-ratelimit-remaining-tokens', b'39322'), (b'x-ratelimit-remaining-tokens_usage_based', b'39322'), (b'x-ratelimit-reset-requests', b'1h11m18.86s'), (b'x-ratelimit-reset-tokens', b'1.017s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.017s'), (b'x-request-id', b'624ff329318872ea4c5f388d880405e9'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830347361af9e666-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.152511 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI had gotten into a program at Cornell that didn\'t make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose "Artificial Intelligence." When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.\n\nI applied to 3 grad schools: MIT and Yale, which were renowned for AI at the time, and Harvard, which I\'d visited because Rich Draves went there, and was also home to Bill Woods, who\'d invented the type of parser I used in my SHRDLU clone. Only Harvard accepted me, so that was where I went.\n\nI don\'t remember the moment it happened, or if there even was a specific moment, but during the first year of grad school I realized that AI, as practiced at the time, was a hoax. By which I mean the sort of AI in which a program that\'s told "the dog is sitting on the chair" translates this into some formal representation and adds it to the list of things it knows.\n\nWhat these programs really showed was that there\'s a subset of natural language that\'s a formal language. But a very proper subset. It was clear that there was an unbridgeable gap between what they could do and actually understanding natural language. It was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It\'s scary to think how little I knew about Lisp hacking when I started writing that book.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ea12d0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ea1300>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:13:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1861'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'189'), (b'x-ratelimit-remaining-tokens', b'39322'), (b'x-ratelimit-remaining-tokens_usage_based', b'39322'), (b'x-ratelimit-reset-requests', b'1h18m24.194s'), (b'x-ratelimit-reset-tokens', b'1.017s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.017s'), (b'x-request-id', b'5b97e01ae0396cf6504c6b1f2c3de99c'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303475fed8b0514-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(program, translates, "the dog is sitting on the chair")
(AI, practiced at, the time)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('program', 'translates', '"the dog is sitting on the chair"'), ('AI', 'practiced at', 'the time')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4213.3688091, ttl=10, perf_time=4229.632058 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4229.8053561, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4229.8053561, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`TRANSLATES`]->(n2)\n        ' {'subj': 'program', 'obj': '"the dog is sitting on the chair"'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 147, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXSaQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4229.8053561, ttl=10, perf_time=4230.0190248 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4229.8053561, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`PRACTICED_AT`]->(n2)\n        ' {'subj': 'AI', 'obj': 'the time'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 105, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXSiQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\n\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:13:51 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'188'), (b'x-ratelimit-remaining-tokens', b'39339'), (b'x-ratelimit-remaining-tokens_usage_based', b'39339'), (b'x-ratelimit-reset-requests', b'1h25m33.349s'), (b'x-ratelimit-reset-tokens', b'991ms'), (b'x-ratelimit-reset-tokens_usage_based', b'991ms'), (b'x-request-id', b'132887539801c56b31ca883c094e5793'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034771af700514-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.798081 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\n\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:13:52 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'187'), (b'x-ratelimit-remaining-tokens', b'39339'), (b'x-ratelimit-remaining-tokens_usage_based', b'39339'), (b'x-ratelimit-reset-requests', b'1h32m44.276s'), (b'x-ratelimit-reset-tokens', b'991ms'), (b'x-ratelimit-reset-tokens_usage_based', b'991ms'), (b'x-request-id', b'44b3084186b5abb879b0aef142e83337'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830347785a6b0514-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.643552 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\n\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:13:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'186'), (b'x-ratelimit-remaining-tokens', b'39339'), (b'x-ratelimit-remaining-tokens_usage_based', b'39339'), (b'x-ratelimit-reset-requests', b'1h39m54.37s'), (b'x-ratelimit-reset-tokens', b'991ms'), (b'x-ratelimit-reset-tokens_usage_based', b'991ms'), (b'x-request-id', b'aa9e4a7d88282fdeb471a6b5de2f7ed5'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830347844bef0514-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.724285 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\n\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:13:58 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'185'), (b'x-ratelimit-remaining-tokens', b'39339'), (b'x-ratelimit-remaining-tokens_usage_based', b'39339'), (b'x-ratelimit-reset-requests', b'1h47m2.378s'), (b'x-ratelimit-reset-tokens', b'991ms'), (b'x-ratelimit-reset-tokens_usage_based', b'991ms'), (b'x-request-id', b'e8408a6ce7961e3b91e4b8ae33954b8c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303479d3b630514-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.172352 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\n\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eaa710>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eaa6b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'184'), (b'x-ratelimit-remaining-tokens', b'39339'), (b'x-ratelimit-remaining-tokens_usage_based', b'39339'), (b'x-ratelimit-reset-requests', b'1h54m6.68s'), (b'x-ratelimit-reset-tokens', b'991ms'), (b'x-ratelimit-reset-tokens_usage_based', b'991ms'), (b'x-request-id', b'51f2e41bd2a32f1492e7c0874b5c2f6f'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830347cd2d7f044f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.046724 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\n\nSo I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\n\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eabbe0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eabc70>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:14:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1972'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'183'), (b'x-ratelimit-remaining-tokens', b'39339'), (b'x-ratelimit-remaining-tokens_usage_based', b'39339'), (b'x-ratelimit-reset-requests', b'2h1m10.763s'), (b'x-ratelimit-reset-tokens', b'991ms'), (b'x-ratelimit-reset-tokens_usage_based', b'991ms'), (b'x-request-id', b'58179af807a7266c4eb507e21605cbbf'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830347fc8e5de6b2-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(way of doing AI, generate, opportunities to write papers)
(Lisp, interesting for, its own sake)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('way of doing AI', 'generate', 'opportunities to write papers'), ('Lisp', 'interesting for', 'its own sake')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4229.8053561, ttl=10, perf_time=4255.0688274 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4255.238382, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4255.238382, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`GENERATE`]->(n2)\n        ' {'subj': 'way of doing AI', 'obj': 'opportunities to write papers'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 110, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXSqQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4255.238382, ttl=10, perf_time=4255.3984519 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4255.238382, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`INTERESTING_FOR`]->(n2)\n        ' {'subj': 'Lisp', 'obj': 'its own sake'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 111, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXSyQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\n\nIn this dissatisfied state I went in 1988 to visit Rich Draves at CMU, where he was in grad school. One day I went to visit the Carnegie Institute, where I'd spent a lot of time as a kid. While looking at a painting there I realized something that might seem obvious, but was a big surprise to me. There, right on the wall, was something you could make that would last. Paintings didn't become obsolete. Some of the best ones were hundreds of years old.\n\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn't have a boss, or even need to get research funding.\n\nI had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\n\nThat fall I started taking art classes at Harvard.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:16 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'182'), (b'x-ratelimit-remaining-tokens', b'39331'), (b'x-ratelimit-remaining-tokens_usage_based', b'39331'), (b'x-ratelimit-reset-requests', b'2h8m19.99s'), (b'x-ratelimit-reset-tokens', b'1.003s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.003s'), (b'x-request-id', b'a13efc20e6eae31ebb7f5dbfc8338d0a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830348101f43e6b2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.944986 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\n\nIn this dissatisfied state I went in 1988 to visit Rich Draves at CMU, where he was in grad school. One day I went to visit the Carnegie Institute, where I'd spent a lot of time as a kid. While looking at a painting there I realized something that might seem obvious, but was a big surprise to me. There, right on the wall, was something you could make that would last. Paintings didn't become obsolete. Some of the best ones were hundreds of years old.\n\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn't have a boss, or even need to get research funding.\n\nI had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\n\nThat fall I started taking art classes at Harvard.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'181'), (b'x-ratelimit-remaining-tokens', b'39331'), (b'x-ratelimit-remaining-tokens_usage_based', b'39331'), (b'x-ratelimit-reset-requests', b'2h15m30.787s'), (b'x-ratelimit-reset-tokens', b'1.003s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.003s'), (b'x-request-id', b'1b81819d3a77eeb6b145f222506f59c8'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034817bbd9e6b2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.638763 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\n\nIn this dissatisfied state I went in 1988 to visit Rich Draves at CMU, where he was in grad school. One day I went to visit the Carnegie Institute, where I'd spent a lot of time as a kid. While looking at a painting there I realized something that might seem obvious, but was a big surprise to me. There, right on the wall, was something you could make that would last. Paintings didn't become obsolete. Some of the best ones were hundreds of years old.\n\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn't have a boss, or even need to get research funding.\n\nI had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\n\nThat fall I started taking art classes at Harvard.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:19 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'180'), (b'x-ratelimit-remaining-tokens', b'39331'), (b'x-ratelimit-remaining-tokens_usage_based', b'39331'), (b'x-ratelimit-reset-requests', b'2h22m40.88s'), (b'x-ratelimit-reset-tokens', b'1.003s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.003s'), (b'x-request-id', b'2351e40a8a506dbf3d97536a10cb8acf'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034823a8c0e6b2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.678782 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\n\nIn this dissatisfied state I went in 1988 to visit Rich Draves at CMU, where he was in grad school. One day I went to visit the Carnegie Institute, where I'd spent a lot of time as a kid. While looking at a painting there I realized something that might seem obvious, but was a big surprise to me. There, right on the wall, was something you could make that would last. Paintings didn't become obsolete. Some of the best ones were hundreds of years old.\n\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn't have a boss, or even need to get research funding.\n\nI had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\n\nThat fall I started taking art classes at Harvard.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:23 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'179'), (b'x-ratelimit-remaining-tokens', b'39331'), (b'x-ratelimit-remaining-tokens_usage_based', b'39331'), (b'x-ratelimit-reset-requests', b'2h29m48.939s'), (b'x-ratelimit-reset-tokens', b'1.003s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.003s'), (b'x-request-id', b'7d4e437b4a63a7e660ae5dd2bb2c539d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303483c38ade6b2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.865574 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe problem with systems work, though, was that it didn't last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.\n\nThere were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.\n\nI wanted not just to build things, but to build things that would last.\n\nIn this dissatisfied state I went in 1988 to visit Rich Draves at CMU, where he was in grad school. One day I went to visit the Carnegie Institute, where I'd spent a lot of time as a kid. While looking at a painting there I realized something that might seem obvious, but was a big surprise to me. There, right on the wall, was something you could make that would last. Paintings didn't become obsolete. Some of the best ones were hundreds of years old.\n\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn't have a boss, or even need to get research funding.\n\nI had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\n\nThat fall I started taking art classes at Harvard.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ebe890>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ebe830>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:14:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1859'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'178'), (b'x-ratelimit-remaining-tokens', b'39331'), (b'x-ratelimit-remaining-tokens_usage_based', b'39331'), (b'x-ratelimit-reset-requests', b'2h36m53.587s'), (b'x-ratelimit-reset-tokens', b'1.003s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.003s'), (b'x-request-id', b'ab415ad2e3ac4bd6a62ce147a34b12ef'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303486a38a70428-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Rich Draves, was in, grad school)
(Carnegie Institute, was spent a lot of time at, as a kid)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Rich Draves', 'was in', 'grad school'), ('Carnegie Institute', 'was spent a lot of time at', 'as a kid')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4255.238382, ttl=10, perf_time=4272.1383588 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4272.3029627, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4272.3029627, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WAS_IN`]->(n2)\n        ' {'subj': 'Rich Draves', 'obj': 'grad school'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 109, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXS6Q', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4272.3029627, ttl=10, perf_time=4272.463921 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4272.3029627, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WAS_SPENT_A_LOT_OF_TIME_AT`]->(n2)\n        ' {'subj': 'Carnegie Institute', 'obj': 'as a kid'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 116, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXTCQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn\'t have a boss, or even need to get research funding.\n\nI had always liked looking at paintings. Could I make them? I had no idea. I\'d never imagined it was even possible. I knew intellectually that people made art — that it didn\'t just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\n\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\n\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\n\nI didn\'t see a way out of this situation. I didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:33 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'177'), (b'x-ratelimit-remaining-tokens', b'39322'), (b'x-ratelimit-remaining-tokens_usage_based', b'39322'), (b'x-ratelimit-reset-requests', b'2h44m2.919s'), (b'x-ratelimit-reset-tokens', b'1.017s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.017s'), (b'x-request-id', b'327c844194cbd299f2fb7e8b6b229097'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303487aeeb60428-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.755013 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn\'t have a boss, or even need to get research funding.\n\nI had always liked looking at paintings. Could I make them? I had no idea. I\'d never imagined it was even possible. I knew intellectually that people made art — that it didn\'t just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\n\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\n\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\n\nI didn\'t see a way out of this situation. I didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:34 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'176'), (b'x-ratelimit-remaining-tokens', b'39322'), (b'x-ratelimit-remaining-tokens_usage_based', b'39322'), (b'x-ratelimit-reset-requests', b'2h51m13.902s'), (b'x-ratelimit-reset-tokens', b'1.017s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.017s'), (b'x-request-id', b'83311688fac385d18e9da4212e7137b0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830348813e530428-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.612205 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn\'t have a boss, or even need to get research funding.\n\nI had always liked looking at paintings. Could I make them? I had no idea. I\'d never imagined it was even possible. I knew intellectually that people made art — that it didn\'t just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\n\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\n\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\n\nI didn\'t see a way out of this situation. I didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'175'), (b'x-ratelimit-remaining-tokens', b'39322'), (b'x-ratelimit-remaining-tokens_usage_based', b'39322'), (b'x-ratelimit-reset-requests', b'2h58m24.016s'), (b'x-ratelimit-reset-tokens', b'1.017s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.017s'), (b'x-request-id', b'fd962b87efcfb68437ef329375c412dc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303488d0f330428-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.750023 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn\'t have a boss, or even need to get research funding.\n\nI had always liked looking at paintings. Could I make them? I had no idea. I\'d never imagined it was even possible. I knew intellectually that people made art — that it didn\'t just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\n\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\n\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\n\nI didn\'t see a way out of this situation. I didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:40 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'174'), (b'x-ratelimit-remaining-tokens', b'39322'), (b'x-ratelimit-remaining-tokens_usage_based', b'39322'), (b'x-ratelimit-reset-requests', b'3h5m31.911s'), (b'x-ratelimit-reset-tokens', b'1.017s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.017s'), (b'x-request-id', b'988d2b74e8c39ee973d1bf21be976448'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830348a6afb80428-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.600506 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn\'t have a boss, or even need to get research funding.\n\nI had always liked looking at paintings. Could I make them? I had no idea. I\'d never imagined it was even possible. I knew intellectually that people made art — that it didn\'t just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\n\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\n\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\n\nI didn\'t see a way out of this situation. I didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ebceb0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e9c6d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:14:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'2145'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'173'), (b'x-ratelimit-remaining-tokens', b'39322'), (b'x-ratelimit-remaining-tokens_usage_based', b'39322'), (b'x-ratelimit-reset-requests', b'3h12m35.825s'), (b'x-ratelimit-reset-tokens', b'1.017s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.017s'), (b'x-request-id', b'fbb61b8652aa6653de3111b2aeac5fb9'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830348d92d13050d-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Philz, founded in, Berkeley)
(Philz, founded in, 1982)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Philz', 'founded in', 'Berkeley'), ('Philz', 'founded in', '1982')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4272.3029627, ttl=10, perf_time=4290.2862493 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4290.5039995, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4290.5039995, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': 'Berkeley'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 13, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXTCQ', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4290.5039995, ttl=10, perf_time=4290.5656513 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4290.5039995, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': '1982'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 11, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXTCQ', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\n\nI picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There\'s a whole world there that\'s barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.\n\nMeanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI\'d applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they\'d sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:51 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'172'), (b'x-ratelimit-remaining-tokens', b'39340'), (b'x-ratelimit-remaining-tokens_usage_based', b'39340'), (b'x-ratelimit-reset-requests', b'3h19m44.94s'), (b'x-ratelimit-reset-tokens', b'990ms'), (b'x-ratelimit-reset-tokens_usage_based', b'990ms'), (b'x-request-id', b'3e18a38d061c1a9c52b14252cecf5444'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830348eb3b44050d-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.871444 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\n\nI picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There\'s a whole world there that\'s barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.\n\nMeanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI\'d applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they\'d sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:52 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'171'), (b'x-ratelimit-remaining-tokens', b'39340'), (b'x-ratelimit-remaining-tokens_usage_based', b'39340'), (b'x-ratelimit-reset-requests', b'3h26m55.815s'), (b'x-ratelimit-reset-tokens', b'990ms'), (b'x-ratelimit-reset-tokens_usage_based', b'990ms'), (b'x-request-id', b'df58fae74fd0296e41037f9fe97f197a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830348f24ec8050d-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.654794 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\n\nI picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There\'s a whole world there that\'s barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.\n\nMeanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI\'d applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they\'d sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'170'), (b'x-ratelimit-remaining-tokens', b'39340'), (b'x-ratelimit-remaining-tokens_usage_based', b'39340'), (b'x-ratelimit-reset-requests', b'3h34m5.915s'), (b'x-ratelimit-reset-tokens', b'990ms'), (b'x-ratelimit-reset-tokens_usage_based', b'990ms'), (b'x-request-id', b'd2afe8f437bee8a6fd18424538d92cd8'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830348fe3b7a050d-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.128358 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\n\nI picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There\'s a whole world there that\'s barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.\n\nMeanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI\'d applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they\'d sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:14:58 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'169'), (b'x-ratelimit-remaining-tokens', b'39340'), (b'x-ratelimit-remaining-tokens_usage_based', b'39340'), (b'x-ratelimit-reset-requests', b'3h41m14.511s'), (b'x-ratelimit-reset-tokens', b'990ms'), (b'x-ratelimit-reset-tokens_usage_based', b'990ms'), (b'x-request-id', b'3e1b3f99d0b19e337edf17ae15fe4d97'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830349135ff7050d-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.001077 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\n\nI picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There\'s a whole world there that\'s barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.\n\nMeanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI\'d applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they\'d sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ebf760>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eb04f0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:04 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'168'), (b'x-ratelimit-remaining-tokens', b'39340'), (b'x-ratelimit-remaining-tokens_usage_based', b'39340'), (b'x-ratelimit-reset-requests', b'3h48m20.015s'), (b'x-ratelimit-reset-tokens', b'990ms'), (b'x-ratelimit-reset-tokens_usage_based', b'990ms'), (b'x-request-id', b'6243c968a4b2e7ef7021a21f809be798'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303493bf9bb0511-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.684351 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI didn\'t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\'d found such a spectacular way to get out of grad school.\n\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\'t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay "Yes, I think so. I\'ll give you something to read in a few days."\n\nI picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There\'s a whole world there that\'s barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.\n\nMeanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI\'d applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they\'d sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e9fb20>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e9f640>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:15:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'3301'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'167'), (b'x-ratelimit-remaining-tokens', b'39340'), (b'x-ratelimit-remaining-tokens_usage_based', b'39340'), (b'x-ratelimit-reset-requests', b'3h55m24.855s'), (b'x-ratelimit-reset-tokens', b'990ms'), (b'x-ratelimit-reset-tokens_usage_based', b'990ms'), (b'x-request-id', b'713bd380730a41f5f9327f8eeaef5a0d'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034968ceb704bc-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(professor Cheatham, asked, if I was far enough along to graduate)
(I, decided, to take a shot at writing one in the 5 weeks or so that remained before the deadline)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('professor Cheatham', 'asked', 'if I was far enough along to graduate'), ('I', 'decided', 'to take a shot at writing one in the 5 weeks or so that remained before the deadline')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4290.5039995, ttl=10, perf_time=4314.4257983 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4314.7099399, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4314.7099399, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`ASKED`]->(n2)\n        ' {'subj': 'professor Cheatham', 'obj': 'if I was far enough along to graduate'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 100, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXTKQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4314.7099399, ttl=10, perf_time=4314.8682206 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4314.7099399, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`DECIDED`]->(n2)\n        ' {'subj': 'I', 'obj': 'to take a shot at writing one in the 5 weeks or so that remained before the deadline'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 91, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXTSQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nRISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI'd applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they'd sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic. I had some money saved from consulting work I'd done in grad school; there was probably enough to last a year if I lived cheaply. Now all I had to do was learn Italian.\n\nOnly stranieri (foreigners) had to take this entrance exam. In retrospect it may well have been a way of excluding them, because there were so many stranieri attracted by the idea of studying art in Florence that the Italian students would otherwise have been outnumbered. I was in decent shape at painting and drawing from the RISD foundation that summer, but I still don't know how I managed to pass the written exam. I remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\n\nI'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:16 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'166'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'4h2m32.464s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'4067df302435a81f0857656d721a56bb'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303498408b604bc-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.972732 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nRISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI'd applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they'd sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic. I had some money saved from consulting work I'd done in grad school; there was probably enough to last a year if I lived cheaply. Now all I had to do was learn Italian.\n\nOnly stranieri (foreigners) had to take this entrance exam. In retrospect it may well have been a way of excluding them, because there were so many stranieri attracted by the idea of studying art in Florence that the Italian students would otherwise have been outnumbered. I was in decent shape at painting and drawing from the RISD foundation that summer, but I still don't know how I managed to pass the written exam. I remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\n\nI'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'165'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'4h9m43.197s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'ba92c0c91244e52d4c834e4308eb9043'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303498c294204bc-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.699014 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nRISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI'd applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they'd sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic. I had some money saved from consulting work I'd done in grad school; there was probably enough to last a year if I lived cheaply. Now all I had to do was learn Italian.\n\nOnly stranieri (foreigners) had to take this entrance exam. In retrospect it may well have been a way of excluding them, because there were so many stranieri attracted by the idea of studying art in Florence that the Italian students would otherwise have been outnumbered. I was in decent shape at painting and drawing from the RISD foundation that summer, but I still don't know how I managed to pass the written exam. I remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\n\nI'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:19 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'164'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'4h16m53.228s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'd232b86ef6d97eb3398579a0d3a32f33'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303499868ab04bc-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.541280 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nRISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI'd applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they'd sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic. I had some money saved from consulting work I'd done in grad school; there was probably enough to last a year if I lived cheaply. Now all I had to do was learn Italian.\n\nOnly stranieri (foreigners) had to take this entrance exam. In retrospect it may well have been a way of excluding them, because there were so many stranieri attracted by the idea of studying art in Florence that the Italian students would otherwise have been outnumbered. I was in decent shape at painting and drawing from the RISD foundation that summer, but I still don't know how I managed to pass the written exam. I remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\n\nI'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:23 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'163'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'4h24m1.431s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'5c84a2f3657ebe338cab4a4549798bde'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830349b03f3a04bc-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.112221 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nRISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\n\nI'd applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\n\nToward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they'd sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic. I had some money saved from consulting work I'd done in grad school; there was probably enough to last a year if I lived cheaply. Now all I had to do was learn Italian.\n\nOnly stranieri (foreigners) had to take this entrance exam. In retrospect it may well have been a way of excluding them, because there were so many stranieri attracted by the idea of studying art in Florence that the Italian students would otherwise have been outnumbered. I was in decent shape at painting and drawing from the RISD foundation that summer, but I still don't know how I managed to pass the written exam. I remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\n\nI'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eb3580>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eb2110>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:15:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1535'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'162'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'4h31m6.779s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'463d8a4529705eda26ff178e598ac87d'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830349d9a821e63e-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(RISD, accepted, me)
(Accademia, invited, me)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('RISD', 'accepted', 'me'), ('Accademia', 'invited', 'me')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4314.7099399, ttl=10, perf_time=4330.6202393 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4330.811597, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4330.811597, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`ACCEPTED`]->(n2)\n        ' {'subj': 'RISD', 'obj': 'me'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 121, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXTaQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4330.811597, ttl=10, perf_time=4330.9903931 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4330.811597, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`INVITED`]->(n2)\n        ' {'subj': 'Accademia', 'obj': 'me'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 110, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXTiQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\n\nI'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier. We actually had one of those little stoves, fed with kindling, that you see in 19th century studio paintings, and a nude model sitting as close to it as possible without getting burned. Except hardly anyone else painted her besides me. The rest of the students spent their time chatting or occasionally trying to imitate things they'd seen in American art magazines.\n\nOur model turned out to live just down the street from me. She made a living from a combination of modelling and making fakes for a local antique dealer. She'd copy an obscure old painting out of a book, and then he'd take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can't move. People can't sit for more than about 15 minutes at a time, and when they do they don't sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you're painting. Whereas a still life you can, if you want, copy pixel by pixel from what you're seeing.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:32 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'161'), (b'x-ratelimit-remaining-tokens', b'39326'), (b'x-ratelimit-remaining-tokens_usage_based', b'39326'), (b'x-ratelimit-reset-requests', b'4h38m16.331s'), (b'x-ratelimit-reset-tokens', b'1.011s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.011s'), (b'x-request-id', b'aa5c34ea3ca9a225eb785e2cb0440a93'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830349e90b1fe63e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.806088 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\n\nI'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier. We actually had one of those little stoves, fed with kindling, that you see in 19th century studio paintings, and a nude model sitting as close to it as possible without getting burned. Except hardly anyone else painted her besides me. The rest of the students spent their time chatting or occasionally trying to imitate things they'd seen in American art magazines.\n\nOur model turned out to live just down the street from me. She made a living from a combination of modelling and making fakes for a local antique dealer. She'd copy an obscure old painting out of a book, and then he'd take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can't move. People can't sit for more than about 15 minutes at a time, and when they do they don't sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you're painting. Whereas a still life you can, if you want, copy pixel by pixel from what you're seeing.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:33 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'160'), (b'x-ratelimit-remaining-tokens', b'39326'), (b'x-ratelimit-remaining-tokens_usage_based', b'39326'), (b'x-ratelimit-reset-requests', b'4h45m27.252s'), (b'x-ratelimit-reset-tokens', b'1.011s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.011s'), (b'x-request-id', b'19e9366b2c89c9f11f449a99454f2815'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830349efbcb1e63e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.671628 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\n\nI'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier. We actually had one of those little stoves, fed with kindling, that you see in 19th century studio paintings, and a nude model sitting as close to it as possible without getting burned. Except hardly anyone else painted her besides me. The rest of the students spent their time chatting or occasionally trying to imitate things they'd seen in American art magazines.\n\nOur model turned out to live just down the street from me. She made a living from a combination of modelling and making fakes for a local antique dealer. She'd copy an obscure old painting out of a book, and then he'd take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can't move. People can't sit for more than about 15 minutes at a time, and when they do they don't sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you're painting. Whereas a still life you can, if you want, copy pixel by pixel from what you're seeing.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:35 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'159'), (b'x-ratelimit-remaining-tokens', b'39326'), (b'x-ratelimit-remaining-tokens_usage_based', b'39326'), (b'x-ratelimit-reset-requests', b'4h52m37.314s'), (b'x-ratelimit-reset-tokens', b'1.011s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.011s'), (b'x-request-id', b'8893746af284985aea0a129bba58bdd4'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830349fbed14e63e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.204014 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\n\nI'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier. We actually had one of those little stoves, fed with kindling, that you see in 19th century studio paintings, and a nude model sitting as close to it as possible without getting burned. Except hardly anyone else painted her besides me. The rest of the students spent their time chatting or occasionally trying to imitate things they'd seen in American art magazines.\n\nOur model turned out to live just down the street from me. She made a living from a combination of modelling and making fakes for a local antique dealer. She'd copy an obscure old painting out of a book, and then he'd take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can't move. People can't sit for more than about 15 minutes at a time, and when they do they don't sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you're painting. Whereas a still life you can, if you want, copy pixel by pixel from what you're seeing.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:38 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'158'), (b'x-ratelimit-remaining-tokens', b'39326'), (b'x-ratelimit-remaining-tokens_usage_based', b'39326'), (b'x-ratelimit-reset-requests', b'4h59m45.83s'), (b'x-ratelimit-reset-tokens', b'1.011s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.011s'), (b'x-request-id', b'4f88366d81f4bfd2261b7e587dbd3022'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034a11ac21e63e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.746034 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\n\nI'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier. We actually had one of those little stoves, fed with kindling, that you see in 19th century studio paintings, and a nude model sitting as close to it as possible without getting burned. Except hardly anyone else painted her besides me. The rest of the students spent their time chatting or occasionally trying to imitate things they'd seen in American art magazines.\n\nOur model turned out to live just down the street from me. She made a living from a combination of modelling and making fakes for a local antique dealer. She'd copy an obscure old painting out of a book, and then he'd take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can't move. People can't sit for more than about 15 minutes at a time, and when they do they don't sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you're painting. Whereas a still life you can, if you want, copy pixel by pixel from what you're seeing.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eb1060>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eb3d00>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:15:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'2229'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'157'), (b'x-ratelimit-remaining-tokens', b'39326'), (b'x-ratelimit-remaining-tokens_usage_based', b'39326'), (b'x-ratelimit-reset-requests', b'5h6m49.429s'), (b'x-ratelimit-reset-tokens', b'1.011s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.011s'), (b'x-request-id', b'07b5ae5e43d98272b363cdc3ff618995'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034a463bee0461-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Accademia, had, arrangement)
(model, made a living from, modelling and making fakes)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Accademia', 'had', 'arrangement'), ('model', 'made a living from', 'modelling and making fakes')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4330.811597, ttl=10, perf_time=4348.659115 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4349.0122312, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4349.0122312, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`HAD`]->(n2)\n        ' {'subj': 'Accademia', 'obj': 'arrangement'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 161, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXTqQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4349.0122312, ttl=10, perf_time=4349.2864538 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4349.0122312, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`MADE_A_LIVING_FROM`]->(n2)\n        ' {'subj': 'model', 'obj': 'modelling and making fakes'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 111, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXTyQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nShe\'d copy an obscure old painting out of a book, and then he\'d take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can\'t move. People can\'t sit for more than about 15 minutes at a time, and when they do they don\'t sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you\'re painting. Whereas a still life you can, if you want, copy pixel by pixel from what you\'re seeing. You don\'t want to stop there, of course, or you get merely photographic accuracy, and what makes a still life interesting is that it\'s been through a head. You want to emphasize the visual cues that tell you, for example, that the reason the color changes suddenly at a certain point is that it\'s the edge of an object. By subtly emphasizing such things you can make paintings that are more realistic than photographs not just in some metaphorical sense, but in the strict information-theoretic sense. [4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:50 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'156'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'5h13m58.015s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'71b9b52b22b5c2e0e8bb54db9b2f55c2'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034a5b8d590461-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.786103 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nShe\'d copy an obscure old painting out of a book, and then he\'d take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can\'t move. People can\'t sit for more than about 15 minutes at a time, and when they do they don\'t sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you\'re painting. Whereas a still life you can, if you want, copy pixel by pixel from what you\'re seeing. You don\'t want to stop there, of course, or you get merely photographic accuracy, and what makes a still life interesting is that it\'s been through a head. You want to emphasize the visual cues that tell you, for example, that the reason the color changes suddenly at a certain point is that it\'s the edge of an object. By subtly emphasizing such things you can make paintings that are more realistic than photographs not just in some metaphorical sense, but in the strict information-theoretic sense. [4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:51 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'155'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'5h21m8.925s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'b85083ccfa95fe1553ec40e198ef1117'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034a620f840461-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.898144 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nShe\'d copy an obscure old painting out of a book, and then he\'d take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can\'t move. People can\'t sit for more than about 15 minutes at a time, and when they do they don\'t sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you\'re painting. Whereas a still life you can, if you want, copy pixel by pixel from what you\'re seeing. You don\'t want to stop there, of course, or you get merely photographic accuracy, and what makes a still life interesting is that it\'s been through a head. You want to emphasize the visual cues that tell you, for example, that the reason the color changes suddenly at a certain point is that it\'s the edge of an object. By subtly emphasizing such things you can make paintings that are more realistic than photographs not just in some metaphorical sense, but in the strict information-theoretic sense. [4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:53 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'154'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'5h28m18.772s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'2e9fb52d1dc7b39fd9dbcda269762ffc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034a6fce060461-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.479489 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nShe\'d copy an obscure old painting out of a book, and then he\'d take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can\'t move. People can\'t sit for more than about 15 minutes at a time, and when they do they don\'t sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you\'re painting. Whereas a still life you can, if you want, copy pixel by pixel from what you\'re seeing. You don\'t want to stop there, of course, or you get merely photographic accuracy, and what makes a still life interesting is that it\'s been through a head. You want to emphasize the visual cues that tell you, for example, that the reason the color changes suddenly at a certain point is that it\'s the edge of an object. By subtly emphasizing such things you can make paintings that are more realistic than photographs not just in some metaphorical sense, but in the strict information-theoretic sense. [4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:15:57 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'153'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'5h35m26.994s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'3c7fcce1396ae4ee92c9b14d7046648f'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034a876c220461-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.005573 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nShe\'d copy an obscure old painting out of a book, and then he\'d take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can\'t move. People can\'t sit for more than about 15 minutes at a time, and when they do they don\'t sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you\'re painting. Whereas a still life you can, if you want, copy pixel by pixel from what you\'re seeing. You don\'t want to stop there, of course, or you get merely photographic accuracy, and what makes a still life interesting is that it\'s been through a head. You want to emphasize the visual cues that tell you, for example, that the reason the color changes suddenly at a certain point is that it\'s the edge of an object. By subtly emphasizing such things you can make paintings that are more realistic than photographs not just in some metaphorical sense, but in the strict information-theoretic sense. [4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ecd7b0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb2bd98d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'152'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'5h42m31.491s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'ef734db4998a7b0d7df4823efef362f1'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034ab6483004e3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.321691 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nShe\'d copy an obscure old painting out of a book, and then he\'d take the copy and maltreat it to make it look old. [3]\n\nWhile I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can\'t move. People can\'t sit for more than about 15 minutes at a time, and when they do they don\'t sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you\'re painting. Whereas a still life you can, if you want, copy pixel by pixel from what you\'re seeing. You don\'t want to stop there, of course, or you get merely photographic accuracy, and what makes a still life interesting is that it\'s been through a head. You want to emphasize the visual cues that tell you, for example, that the reason the color changes suddenly at a certain point is that it\'s the edge of an object. By subtly emphasizing such things you can make paintings that are more realistic than photographs not just in some metaphorical sense, but in the strict information-theoretic sense. [4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ebcfa0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ebd630>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:16:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1278'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'151'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'5h49m36.607s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'8f0fda9cb0c84e7680a06c06acaf035e'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034ae12fab0ef4-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Accademia, started painting, still lives)
(still lives, different from, painting people)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Accademia', 'started painting', 'still lives'), ('still lives', 'different from', 'painting people')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4349.0122312, ttl=10, perf_time=4372.5408561 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4372.7493966, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4372.7493966, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`STARTED_PAINTING`]->(n2)\n        ' {'subj': 'Accademia', 'obj': 'still lives'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 110, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXT6Q', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4372.7493966, ttl=10, perf_time=4372.907779 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4372.7493966, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`DIFFERENT_FROM`]->(n2)\n        ' {'subj': 'still lives', 'obj': 'painting people'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 91, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXUCQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint. I\'m not 100% sure it\'s even a good way to paint. But it seemed a good enough bet to be worth trying.\n\nOur teacher, professor Ulivi, was a nice guy. He could see I worked hard, and gave me a good grade, which he wrote down in a sort of passport each student had. But the Accademia wasn\'t teaching me anything except Italian, and my money was running out, so at the end of the first year I went back to the US.\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they\'d added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I\'ve had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:14 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'150'), (b'x-ratelimit-remaining-tokens', b'39356'), (b'x-ratelimit-remaining-tokens_usage_based', b'39356'), (b'x-ratelimit-reset-requests', b'5h56m46.424s'), (b'x-ratelimit-reset-tokens', b'966ms'), (b'x-ratelimit-reset-tokens_usage_based', b'966ms'), (b'x-request-id', b'b7db2219b6abd1ea04d48ae25698b1d3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034aeeed9f0ef4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.860364 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint. I\'m not 100% sure it\'s even a good way to paint. But it seemed a good enough bet to be worth trying.\n\nOur teacher, professor Ulivi, was a nice guy. He could see I worked hard, and gave me a good grade, which he wrote down in a sort of passport each student had. But the Accademia wasn\'t teaching me anything except Italian, and my money was running out, so at the end of the first year I went back to the US.\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they\'d added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I\'ve had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:15 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'149'), (b'x-ratelimit-remaining-tokens', b'39356'), (b'x-ratelimit-remaining-tokens_usage_based', b'39356'), (b'x-ratelimit-reset-requests', b'6h3m57.31s'), (b'x-ratelimit-reset-tokens', b'966ms'), (b'x-ratelimit-reset-tokens_usage_based', b'966ms'), (b'x-request-id', b'520acf5bec255cc090bea92c267c083e'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034af5f8a40ef4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.862431 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint. I\'m not 100% sure it\'s even a good way to paint. But it seemed a good enough bet to be worth trying.\n\nOur teacher, professor Ulivi, was a nice guy. He could see I worked hard, and gave me a good grade, which he wrote down in a sort of passport each student had. But the Accademia wasn\'t teaching me anything except Italian, and my money was running out, so at the end of the first year I went back to the US.\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they\'d added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I\'ve had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'148'), (b'x-ratelimit-remaining-tokens', b'39356'), (b'x-ratelimit-remaining-tokens_usage_based', b'39356'), (b'x-ratelimit-reset-requests', b'6h11m7.178s'), (b'x-ratelimit-reset-tokens', b'966ms'), (b'x-ratelimit-reset-tokens_usage_based', b'966ms'), (b'x-request-id', b'bb3411b747573620b4e611f12c949ef1'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034b033b960ef4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.063933 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint. I\'m not 100% sure it\'s even a good way to paint. But it seemed a good enough bet to be worth trying.\n\nOur teacher, professor Ulivi, was a nice guy. He could see I worked hard, and gave me a good grade, which he wrote down in a sort of passport each student had. But the Accademia wasn\'t teaching me anything except Italian, and my money was running out, so at the end of the first year I went back to the US.\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they\'d added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I\'ve had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:20 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'147'), (b'x-ratelimit-remaining-tokens', b'39356'), (b'x-ratelimit-remaining-tokens_usage_based', b'39356'), (b'x-ratelimit-reset-requests', b'6h18m15.861s'), (b'x-ratelimit-reset-tokens', b'966ms'), (b'x-ratelimit-reset-tokens_usage_based', b'966ms'), (b'x-request-id', b'5e4a4a0e70384a0b1b7eb8e382c8d2c4'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034b17f88f0ef4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.662783 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[4]\n\nI liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\'t consciously aware of much we\'re seeing. Most visual perception is handled by low-level processes that merely tell your brain "that\'s a water droplet" without telling you details like where the lightest and darkest points are, or "that\'s a bush" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\'s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\n\nThis is not the only way to paint. I\'m not 100% sure it\'s even a good way to paint. But it seemed a good enough bet to be worth trying.\n\nOur teacher, professor Ulivi, was a nice guy. He could see I worked hard, and gave me a good grade, which he wrote down in a sort of passport each student had. But the Accademia wasn\'t teaching me anything except Italian, and my money was running out, so at the end of the first year I went back to the US.\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they\'d added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I\'ve had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ec6020>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ec5fc0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:16:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'2022'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'146'), (b'x-ratelimit-remaining-tokens', b'39356'), (b'x-ratelimit-remaining-tokens_usage_based', b'39356'), (b'x-ratelimit-reset-requests', b'6h25m20.708s'), (b'x-ratelimit-reset-tokens', b'966ms'), (b'x-ratelimit-reset-tokens_usage_based', b'966ms'), (b'x-request-id', b'7518d1ead8cf827fabdbffe4c3f4ed6a'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034b44bb8a04f0-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Interleaf, made, software for creating documents)
(Interleaf, added, a scripting language)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Interleaf', 'made', 'software for creating documents'), ('Interleaf', 'added', 'a scripting language')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4372.7493966, ttl=10, perf_time=4389.3014334 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4389.4851938, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4389.4851938, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`MADE`]->(n2)\n        ' {'subj': 'Interleaf', 'obj': 'software for creating documents'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 121, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXUKQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4389.4851938, ttl=10, perf_time=4389.6726473 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4389.4851938, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`ADDED`]->(n2)\n        ' {'subj': 'Interleaf', 'obj': 'a scripting language'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 158, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXUSQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they'd added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I've had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee. Their Lisp was the thinnest icing on a giant C cake, and since I didn't know C and didn't want to learn it, I never understood most of the software. Plus I was terribly irresponsible. This was back when a programming job meant showing up every day during certain working hours. That seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:30 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'145'), (b'x-ratelimit-remaining-tokens', b'39414'), (b'x-ratelimit-remaining-tokens_usage_based', b'39414'), (b'x-ratelimit-reset-requests', b'6h32m29.653s'), (b'x-ratelimit-reset-tokens', b'879ms'), (b'x-ratelimit-reset-tokens_usage_based', b'879ms'), (b'x-request-id', b'13d86f073951fa8c75bff167446f469c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034b57bcc304f0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.993131 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they'd added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I've had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee. Their Lisp was the thinnest icing on a giant C cake, and since I didn't know C and didn't want to learn it, I never understood most of the software. Plus I was terribly irresponsible. This was back when a programming job meant showing up every day during certain working hours. That seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:32 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'144'), (b'x-ratelimit-remaining-tokens', b'39414'), (b'x-ratelimit-remaining-tokens_usage_based', b'39414'), (b'x-ratelimit-reset-requests', b'6h39m40.404s'), (b'x-ratelimit-reset-tokens', b'879ms'), (b'x-ratelimit-reset-tokens_usage_based', b'879ms'), (b'x-request-id', b'061f98251417465d498ee1b2ec211069'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034b5f9d7d04f0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.951916 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they'd added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I've had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee. Their Lisp was the thinnest icing on a giant C cake, and since I didn't know C and didn't want to learn it, I never understood most of the software. Plus I was terribly irresponsible. This was back when a programming job meant showing up every day during certain working hours. That seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:34 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'143'), (b'x-ratelimit-remaining-tokens', b'39414'), (b'x-ratelimit-remaining-tokens_usage_based', b'39414'), (b'x-ratelimit-reset-requests', b'6h46m50.184s'), (b'x-ratelimit-reset-tokens', b'879ms'), (b'x-ratelimit-reset-tokens_usage_based', b'879ms'), (b'x-request-id', b'5f5cae136ef149b5b002820052a2f01f'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034b6d6a7704f0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.631669 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they'd added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I've had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee. Their Lisp was the thinnest icing on a giant C cake, and since I didn't know C and didn't want to learn it, I never understood most of the software. Plus I was terribly irresponsible. This was back when a programming job meant showing up every day during certain working hours. That seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:38 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'142'), (b'x-ratelimit-remaining-tokens', b'39414'), (b'x-ratelimit-remaining-tokens_usage_based', b'39414'), (b'x-ratelimit-reset-requests', b'6h53m58.25s'), (b'x-ratelimit-reset-tokens', b'879ms'), (b'x-ratelimit-reset-tokens_usage_based', b'879ms'), (b'x-request-id', b'8412b4ad4da669822c30bdd5a0af4be3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034b85d86104f0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.165939 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they'd added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I've had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee. Their Lisp was the thinnest icing on a giant C cake, and since I didn't know C and didn't want to learn it, I never understood most of the software. Plus I was terribly irresponsible. This was back when a programming job meant showing up every day during certain working hours. That seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed1ed0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed2260>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:46 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'141'), (b'x-ratelimit-remaining-tokens', b'39414'), (b'x-ratelimit-remaining-tokens_usage_based', b'39414'), (b'x-ratelimit-reset-requests', b'7h1m2.325s'), (b'x-ratelimit-reset-tokens', b'879ms'), (b'x-ratelimit-reset-tokens_usage_based', b'879ms'), (b'x-request-id', b'242755a49a5209d273f1dd995b3b920a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034bb78f79e65a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.204396 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\n\nInterleaf had done something pretty bold. Inspired by Emacs, they'd added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I've had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee. Their Lisp was the thinnest icing on a giant C cake, and since I didn't know C and didn't want to learn it, I never understood most of the software. Plus I was terribly irresponsible. This was back when a programming job meant showing up every day during certain working hours. That seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed3610>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed37c0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:16:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1371'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'140'), (b'x-ratelimit-remaining-tokens', b'39414'), (b'x-ratelimit-remaining-tokens_usage_based', b'39414'), (b'x-ratelimit-reset-requests', b'7h8m6.642s'), (b'x-ratelimit-reset-tokens', b'879ms'), (b'x-ratelimit-reset-tokens_usage_based', b'879ms'), (b'x-request-id', b'6315e8c9d40abf161cdb9250c1f4a582'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034be7acf404c3-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Interleaf, made, software)
(Interleaf, added, scripting language)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Interleaf', 'made', 'software'), ('Interleaf', 'added', 'scripting language')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4389.4851938, ttl=10, perf_time=4414.5916592 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4414.7799931, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4414.7799931, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`MADE`]->(n2)\n        ' {'subj': 'Interleaf', 'obj': 'software'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 101, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXUWQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4414.7799931, ttl=10, perf_time=4414.9341976 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4414.7799931, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`ADDED`]->(n2)\n        ' {'subj': 'Interleaf', 'obj': 'scripting language'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 98, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXUaQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do. I learned that it\'s better for technology companies to be run by product people than sales people (though sales is a real skill and people who are good at it are really good at it), that it leads to bugs when code is edited by too many people, that cheap office space is no bargain if it\'s depressing, that planned meetings are inferior to corridor conversations, that big, bureaucratic customers are a dangerous source of money, and that there\'s not much overlap between conventional office hours and the optimal time for hacking, or conventional offices and the optimal place for it.\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:56 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'139'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'7h15m16.465s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'05d48336b42f39b2cd4c5e0e5e6235fc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034bf53d1b04c3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.885030 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do. I learned that it\'s better for technology companies to be run by product people than sales people (though sales is a real skill and people who are good at it are really good at it), that it leads to bugs when code is edited by too many people, that cheap office space is no bargain if it\'s depressing, that planned meetings are inferior to corridor conversations, that big, bureaucratic customers are a dangerous source of money, and that there\'s not much overlap between conventional office hours and the optimal time for hacking, or conventional offices and the optimal place for it.\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:57 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'138'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'7h22m27.275s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'86fda85883b814cc22d15d7cf4c9fa7f'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034bfca8c204c3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.520277 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do. I learned that it\'s better for technology companies to be run by product people than sales people (though sales is a real skill and people who are good at it are really good at it), that it leads to bugs when code is edited by too many people, that cheap office space is no bargain if it\'s depressing, that planned meetings are inferior to corridor conversations, that big, bureaucratic customers are a dangerous source of money, and that there\'s not much overlap between conventional office hours and the optimal time for hacking, or conventional offices and the optimal place for it.\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:16:59 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'137'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'7h29m37.499s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'4abbe0cb113709c35de28173a99f84ef'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034c07ca2d04c3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.682239 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do. I learned that it\'s better for technology companies to be run by product people than sales people (though sales is a real skill and people who are good at it are really good at it), that it leads to bugs when code is edited by too many people, that cheap office space is no bargain if it\'s depressing, that planned meetings are inferior to corridor conversations, that big, bureaucratic customers are a dangerous source of money, and that there\'s not much overlap between conventional office hours and the optimal time for hacking, or conventional offices and the optimal place for it.\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:17:03 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'136'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'7h36m45.54s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'fb32297b23c138bb900730e59adf8a35'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034c20795f04c3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.505968 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\n\nThe good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\n\nI learned some useful things at Interleaf, though they were mostly about what not to do. I learned that it\'s better for technology companies to be run by product people than sales people (though sales is a real skill and people who are good at it are really good at it), that it leads to bugs when code is edited by too many people, that cheap office space is no bargain if it\'s depressing, that planned meetings are inferior to corridor conversations, that big, bureaucratic customers are a dangerous source of money, and that there\'s not much overlap between conventional office hours and the optimal time for hacking, or conventional offices and the optimal place for it.\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed9e10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed9db0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:17:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1804'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'135'), (b'x-ratelimit-remaining-tokens', b'39315'), (b'x-ratelimit-remaining-tokens_usage_based', b'39315'), (b'x-ratelimit-reset-requests', b'7h43m50.474s'), (b'x-ratelimit-reset-tokens', b'1.027s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.027s'), (b'x-request-id', b'0c42b066290c599d0ed4621df8f6f86a'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034c4c9a8204ce-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(I, learned, useful things)
(Interleaf, run by, product people)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('I', 'learned', 'useful things'), ('Interleaf', 'run by', 'product people')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4414.7799931, ttl=10, perf_time=4431.1817263 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4431.3563584, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4431.3563584, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`LEARNED`]->(n2)\n        ' {'subj': 'I', 'obj': 'useful things'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 103, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXUiQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4431.3563584, ttl=10, perf_time=4431.5171329 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4431.3563584, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`RUN_BY`]->(n2)\n        ' {'subj': 'Interleaf', 'obj': 'product people'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 116, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXUqQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\n\nIn the fall of 1992 I moved back to Providence to continue at RISD. The foundation had merely been intro stuff, and the Accademia had been a (very civilized) joke. Now I was going to see what real art school was like. But alas it was more like the Accademia than not. Better organized, certainly, and a lot more expensive, but it was now becoming clear that art school did not bear the same relationship to art that medical school bore to medicine. At least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:17:12 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'134'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'7h50m59.869s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'6a2aff0fcc070c270e2e6249d24db31a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034c5cfc5104ce-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.755777 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\n\nIn the fall of 1992 I moved back to Providence to continue at RISD. The foundation had merely been intro stuff, and the Accademia had been a (very civilized) joke. Now I was going to see what real art school was like. But alas it was more like the Accademia than not. Better organized, certainly, and a lot more expensive, but it was now becoming clear that art school did not bear the same relationship to art that medical school bore to medicine. At least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:17:13 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'133'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'7h58m10.808s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'50cd7d9dd79cae7f5828cf560c176300'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034c639fc104ce-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.702077 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\n\nIn the fall of 1992 I moved back to Providence to continue at RISD. The foundation had merely been intro stuff, and the Accademia had been a (very civilized) joke. Now I was going to see what real art school was like. But alas it was more like the Accademia than not. Better organized, certainly, and a lot more expensive, but it was now becoming clear that art school did not bear the same relationship to art that medical school bore to medicine. At least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:17:15 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'132'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'8h5m20.841s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'5591767d236c057a5cbb132a2ae8c70e'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034c6fdbf804ce-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.781424 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\n\nIn the fall of 1992 I moved back to Providence to continue at RISD. The foundation had merely been intro stuff, and the Accademia had been a (very civilized) joke. Now I was going to see what real art school was like. But alas it was more like the Accademia than not. Better organized, certainly, and a lot more expensive, but it was now becoming clear that art school did not bear the same relationship to art that medical school bore to medicine. At least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:17:19 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'131'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'8h12m28.753s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'a26f78fa578d94962c746c2726f7d439'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034c895ec504ce-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.333823 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\n\nIn the fall of 1992 I moved back to Providence to continue at RISD. The foundation had merely been intro stuff, and the Accademia had been a (very civilized) joke. Now I was going to see what real art school was like. But alas it was more like the Accademia than not. Better organized, certainly, and a lot more expensive, but it was now becoming clear that art school did not bear the same relationship to art that medical school bore to medicine. At least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed8d90>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed8d60>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:17:26 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'130'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'8h19m33.833s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'ae9eb4d8f88cea3480e4df523212ea13'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034cb4a8b904c2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.887601 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it\'s good to be the "entry level" option, even though that will be less prestigious, because if you\'re not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\n\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\n\nIn the fall of 1992 I moved back to Providence to continue at RISD. The foundation had merely been intro stuff, and the Accademia had been a (very civilized) joke. Now I was going to see what real art school was like. But alas it was more like the Accademia than not. Better organized, certainly, and a lot more expensive, but it was now becoming clear that art school did not bear the same relationship to art that medical school bore to medicine. At least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0edbc70>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0edbcd0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:17:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'2014'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'129'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'8h26m37.799s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'6045b6ba6f5f6d8a9042a68d5dd60380'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034ce48fd00fc2-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Paul Graham, learned, low end eats high end)
(Paul Graham, arranged to do, freelance work)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Paul Graham', 'learned', 'low end eats high end'), ('Paul Graham', 'arranged to do', 'freelance work')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4431.3563584, ttl=10, perf_time=4456.1792678 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4456.3621648, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4456.3621648, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`LEARNED`]->(n2)\n        ' {'subj': 'Paul Graham', 'obj': 'low end eats high end'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 101, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXUuQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4456.3621648, ttl=10, perf_time=4456.5166703 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4456.3621648, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`ARRANGED_TO_DO`]->(n2)\n        ' {'subj': 'Paul Graham', 'obj': 'freelance work'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 86, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXU2Q', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAt least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work. [6]\n\nThere were plenty of earnest students too: kids who "could draw" in high school, and now had come to what was supposed to be the best art school in the country, to learn to draw even better. They tended to be confused and demoralized by what they found at RISD, but they kept going, because painting was what they did. I was not one of the kids who could draw in high school, but at RISD I was definitely closer to their tribe than the tribe of signature style seekers.\n\nI learned a lot in the color class I took at RISD, but otherwise I was basically teaching myself to paint, and I could do that for free. So in 1993 I dropped out. I hung around Providence for a bit, and then my college friend Nancy Parmet did me a big favor. A rent-controlled apartment in a building her mother owned in New York was becoming vacant. Did I want it? It wasn\'t much more than my current place, and New York was supposed to be where the artists were. So yes, I wanted it! [7]\n\nAsterix comics begin by zooming in on a tiny corner of Roman Gaul that turns out not to be controlled by the Romans.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:17:37 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'128'), (b'x-ratelimit-remaining-tokens', b'39372'), (b'x-ratelimit-remaining-tokens_usage_based', b'39372'), (b'x-ratelimit-reset-requests', b'8h33m46.906s'), (b'x-ratelimit-reset-tokens', b'942ms'), (b'x-ratelimit-reset-tokens_usage_based', b'942ms'), (b'x-request-id', b'a78bfb032ab57c6a48708110b66ba13b'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034cf8e92f0fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.915987 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAt least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work. [6]\n\nThere were plenty of earnest students too: kids who "could draw" in high school, and now had come to what was supposed to be the best art school in the country, to learn to draw even better. They tended to be confused and demoralized by what they found at RISD, but they kept going, because painting was what they did. I was not one of the kids who could draw in high school, but at RISD I was definitely closer to their tribe than the tribe of signature style seekers.\n\nI learned a lot in the color class I took at RISD, but otherwise I was basically teaching myself to paint, and I could do that for free. So in 1993 I dropped out. I hung around Providence for a bit, and then my college friend Nancy Parmet did me a big favor. A rent-controlled apartment in a building her mother owned in New York was becoming vacant. Did I want it? It wasn\'t much more than my current place, and New York was supposed to be where the artists were. So yes, I wanted it! [7]\n\nAsterix comics begin by zooming in on a tiny corner of Roman Gaul that turns out not to be controlled by the Romans.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:17:38 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'127'), (b'x-ratelimit-remaining-tokens', b'39372'), (b'x-ratelimit-remaining-tokens_usage_based', b'39372'), (b'x-ratelimit-reset-requests', b'8h40m57.753s'), (b'x-ratelimit-reset-tokens', b'942ms'), (b'x-ratelimit-reset-tokens_usage_based', b'942ms'), (b'x-request-id', b'00845977013ad6f5cd324550fbe4c80a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034d003c500fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.684637 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAt least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work. [6]\n\nThere were plenty of earnest students too: kids who "could draw" in high school, and now had come to what was supposed to be the best art school in the country, to learn to draw even better. They tended to be confused and demoralized by what they found at RISD, but they kept going, because painting was what they did. I was not one of the kids who could draw in high school, but at RISD I was definitely closer to their tribe than the tribe of signature style seekers.\n\nI learned a lot in the color class I took at RISD, but otherwise I was basically teaching myself to paint, and I could do that for free. So in 1993 I dropped out. I hung around Providence for a bit, and then my college friend Nancy Parmet did me a big favor. A rent-controlled apartment in a building her mother owned in New York was becoming vacant. Did I want it? It wasn\'t much more than my current place, and New York was supposed to be where the artists were. So yes, I wanted it! [7]\n\nAsterix comics begin by zooming in on a tiny corner of Roman Gaul that turns out not to be controlled by the Romans.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:17:41 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'126'), (b'x-ratelimit-remaining-tokens', b'39372'), (b'x-ratelimit-remaining-tokens_usage_based', b'39372'), (b'x-ratelimit-reset-requests', b'8h48m7.456s'), (b'x-ratelimit-reset-tokens', b'942ms'), (b'x-ratelimit-reset-tokens_usage_based', b'942ms'), (b'x-request-id', b'07a4c2cd16a30ad50097da77433b5e83'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034d0c5f5c0fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.747875 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAt least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work. [6]\n\nThere were plenty of earnest students too: kids who "could draw" in high school, and now had come to what was supposed to be the best art school in the country, to learn to draw even better. They tended to be confused and demoralized by what they found at RISD, but they kept going, because painting was what they did. I was not one of the kids who could draw in high school, but at RISD I was definitely closer to their tribe than the tribe of signature style seekers.\n\nI learned a lot in the color class I took at RISD, but otherwise I was basically teaching myself to paint, and I could do that for free. So in 1993 I dropped out. I hung around Providence for a bit, and then my college friend Nancy Parmet did me a big favor. A rent-controlled apartment in a building her mother owned in New York was becoming vacant. Did I want it? It wasn\'t much more than my current place, and New York was supposed to be where the artists were. So yes, I wanted it! [7]\n\nAsterix comics begin by zooming in on a tiny corner of Roman Gaul that turns out not to be controlled by the Romans.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:17:45 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'125'), (b'x-ratelimit-remaining-tokens', b'39372'), (b'x-ratelimit-remaining-tokens_usage_based', b'39372'), (b'x-ratelimit-reset-requests', b'8h55m15.439s'), (b'x-ratelimit-reset-tokens', b'942ms'), (b'x-ratelimit-reset-tokens_usage_based', b'942ms'), (b'x-request-id', b'6980be1c1f48c47bde47c5d23461d2a8'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034d2789530fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.408119 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAt least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work. [6]\n\nThere were plenty of earnest students too: kids who "could draw" in high school, and now had come to what was supposed to be the best art school in the country, to learn to draw even better. They tended to be confused and demoralized by what they found at RISD, but they kept going, because painting was what they did. I was not one of the kids who could draw in high school, but at RISD I was definitely closer to their tribe than the tribe of signature style seekers.\n\nI learned a lot in the color class I took at RISD, but otherwise I was basically teaching myself to paint, and I could do that for free. So in 1993 I dropped out. I hung around Providence for a bit, and then my college friend Nancy Parmet did me a big favor. A rent-controlled apartment in a building her mother owned in New York was becoming vacant. Did I want it? It wasn\'t much more than my current place, and New York was supposed to be where the artists were. So yes, I wanted it! [7]\n\nAsterix comics begin by zooming in on a tiny corner of Roman Gaul that turns out not to be controlled by the Romans.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eab2b0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eaa020>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.failed exception=ReadTimeout(TimeoutError('The read operation timed out'))
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
INFO:openai._base_client:Retrying request to /chat/completions in 6.443227 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAt least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\n\nA signature style is the visual equivalent of what in show business is known as a "schtick": something that immediately identifies the work as yours and no one else\'s. For example, when you see a painting that looks like a certain kind of cartoon, you know it\'s by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That\'s not always why artists have a signature style, but it\'s usually why buyers pay a lot for such work. [6]\n\nThere were plenty of earnest students too: kids who "could draw" in high school, and now had come to what was supposed to be the best art school in the country, to learn to draw even better. They tended to be confused and demoralized by what they found at RISD, but they kept going, because painting was what they did. I was not one of the kids who could draw in high school, but at RISD I was definitely closer to their tribe than the tribe of signature style seekers.\n\nI learned a lot in the color class I took at RISD, but otherwise I was basically teaching myself to paint, and I could do that for free. So in 1993 I dropped out. I hung around Providence for a bit, and then my college friend Nancy Parmet did me a big favor. A rent-controlled apartment in a building her mother owned in New York was becoming vacant. Did I want it? It wasn\'t much more than my current place, and New York was supposed to be where the artists were. So yes, I wanted it! [7]\n\nAsterix comics begin by zooming in on a tiny corner of Roman Gaul that turns out not to be controlled by the Romans.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ea8490>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eaab00>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:19:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'2124'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'123'), (b'x-ratelimit-remaining-tokens', b'39372'), (b'x-ratelimit-remaining-tokens_usage_based', b'39372'), (b'x-ratelimit-reset-requests', b'9h8m25.804s'), (b'x-ratelimit-reset-tokens', b'942ms'), (b'x-ratelimit-reset-tokens_usage_based', b'942ms'), (b'x-request-id', b'983c8fb4133080783322b668abd6b86b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034ef3ddc60455-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(RISD, is, art school)
(Roy Lichtenstein, is by, painting)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('RISD', 'is', 'art school'), ('Roy Lichtenstein', 'is by', 'painting')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4456.3621648, ttl=10, perf_time=4540.3205587 => True
DEBUG:neo4j:[#0000]  _: <POOL> dropping routing table for database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=False, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4540.6939661, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4540.6939661, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`IS`]->(n2)\n        ' {'subj': 'RISD', 'obj': 'art school'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 92, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXU+Q', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4540.6939661, ttl=10, perf_time=4540.8423262 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4540.6939661, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`IS_BY`]->(n2)\n        ' {'subj': 'Roy Lichtenstein', 'obj': 'painting'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 93, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXVGQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI was not one of the kids who could draw in high school, but at RISD I was definitely closer to their tribe than the tribe of signature style seekers.\n\nI learned a lot in the color class I took at RISD, but otherwise I was basically teaching myself to paint, and I could do that for free. So in 1993 I dropped out. I hung around Providence for a bit, and then my college friend Nancy Parmet did me a big favor. A rent-controlled apartment in a building her mother owned in New York was becoming vacant. Did I want it? It wasn't much more than my current place, and New York was supposed to be where the artists were. So yes, I wanted it! [7]\n\nAsterix comics begin by zooming in on a tiny corner of Roman Gaul that turns out not to be controlled by the Romans. You can do something similar on a map of New York City: if you zoom in on the Upper East Side, there's a tiny corner that's not rich, or at least wasn't in 1993. It's called Yorkville, and that was my new home. Now I was a New York artist — in the strictly technical sense of making paintings and living in New York.\n\nI was nervous about money, because I could sense that Interleaf was on the way down. Freelance Lisp hacking work was very rare, and I didn't want to have to program in another language, which in those days would have meant C++ if I was lucky. So with my unerring nose for financial opportunity, I decided to write another book on Lisp. This would be a popular book, the sort of book that could be used as a textbook. I imagined myself living frugally off the royalties and spending all my time painting. (The painting on the cover of this book, ANSI Common Lisp, is one that I painted around this time.)\n\nThe best thing about New York for me was the presence of Idelle and Julian Weber. Idelle Weber was a painter, one of the early photorealists, and I'd taken her painting class at Harvard. I've never known a teacher more beloved by her students. Large numbers of former students kept in touch with her, including me. After I moved to New York I became her de facto studio assistant.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:19:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1129'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'122'), (b'x-ratelimit-remaining-tokens', b'39350'), (b'x-ratelimit-remaining-tokens_usage_based', b'39350'), (b'x-ratelimit-reset-requests', b'9h15m34.533s'), (b'x-ratelimit-reset-tokens', b'975ms'), (b'x-ratelimit-reset-tokens_usage_based', b'975ms'), (b'x-request-id', b'3ef37d61cfde866614f3fab13d26d9b5'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034f083e3a0455-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(RISD, color class, learned)
(Philz, founded in, Berkeley)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('RISD', 'color class', 'learned'), ('Philz', 'founded in', 'Berkeley')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4540.6939661, ttl=10, perf_time=4542.504869 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4540.6939661, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`COLOR_CLASS`]->(n2)\n        ' {'subj': 'RISD', 'obj': 'learned'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 113, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXVOQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4540.6939661, ttl=10, perf_time=4542.6992166 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4540.6939661, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': 'Berkeley'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 110, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXVOQ', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nSo with my unerring nose for financial opportunity, I decided to write another book on Lisp. This would be a popular book, the sort of book that could be used as a textbook. I imagined myself living frugally off the royalties and spending all my time painting. (The painting on the cover of this book, ANSI Common Lisp, is one that I painted around this time.)\n\nThe best thing about New York for me was the presence of Idelle and Julian Weber. Idelle Weber was a painter, one of the early photorealists, and I'd taken her painting class at Harvard. I've never known a teacher more beloved by her students. Large numbers of former students kept in touch with her, including me. After I moved to New York I became her de facto studio assistant.\n\nShe liked to paint on big, square canvases, 4 to 5 feet on a side. One day in late 1994 as I was stretching one of these monsters there was something on the radio about a famous fund manager. He wasn't that much older than me, and was super rich. The thought suddenly occurred to me: why don't I become rich? Then I'll be able to work on whatever I want.\n\nMeanwhile I'd been hearing more and more about this new thing called the World Wide Web. Robert Morris showed it to me when I visited him in Cambridge, where he was now in grad school at Harvard. It seemed to me that the web would be a big deal. I'd seen what graphical user interfaces had done for the popularity of microcomputers. It seemed like the web would do the same for the internet.\n\nIf I wanted to get rich, here was the next train leaving the station. I was right about that part. What I got wrong was the idea. I decided we should start a company to put art galleries online. I can't honestly say, after reading so many Y Combinator applications, that this was the worst startup idea ever, but it was up there. Art galleries didn't want to be online, and still don't, not the fancy ones. That's not how they sell. I wrote some software to generate web sites for galleries, and Robert wrote some to resize images and set up an http server to serve the pages. Then we tried to sign up galleries.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:19:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1189'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'121'), (b'x-ratelimit-remaining-tokens', b'39340'), (b'x-ratelimit-remaining-tokens_usage_based', b'39340'), (b'x-ratelimit-reset-requests', b'9h22m44.62s'), (b'x-ratelimit-reset-tokens', b'990ms'), (b'x-ratelimit-reset-tokens_usage_based', b'990ms'), (b'x-request-id', b'5c92e6f0cc0640d850768f1ba6587291'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034f13dfb20455-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Philz, founded in, Berkeley)
(Philz, founded in, 1982)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Philz', 'founded in', 'Berkeley'), ('Philz', 'founded in', '1982')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4540.6939661, ttl=10, perf_time=4544.4351061 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4540.6939661, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': 'Berkeley'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 7, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXVOQ', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4540.6939661, ttl=10, perf_time=4544.4985698 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4540.6939661, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': '1982'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 10, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXVOQ', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt seemed to me that the web would be a big deal. I\'d seen what graphical user interfaces had done for the popularity of microcomputers. It seemed like the web would do the same for the internet.\n\nIf I wanted to get rich, here was the next train leaving the station. I was right about that part. What I got wrong was the idea. I decided we should start a company to put art galleries online. I can\'t honestly say, after reading so many Y Combinator applications, that this was the worst startup idea ever, but it was up there. Art galleries didn\'t want to be online, and still don\'t, not the fancy ones. That\'s not how they sell. I wrote some software to generate web sites for galleries, and Robert wrote some to resize images and set up an http server to serve the pages. Then we tried to sign up galleries. To call this a difficult sale would be an understatement. It was difficult to give away. A few galleries let us make sites for them for free, but none paid us.\n\nThen some online stores started to appear, and I realized that except for the order buttons they were identical to the sites we\'d been generating for galleries. This impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'120'), (b'x-ratelimit-remaining-tokens', b'39357'), (b'x-ratelimit-remaining-tokens_usage_based', b'39357'), (b'x-ratelimit-reset-requests', b'9h29m54.989s'), (b'x-ratelimit-reset-tokens', b'964ms'), (b'x-ratelimit-reset-tokens_usage_based', b'964ms'), (b'x-request-id', b'696c312bec35d61421a95ccdf7d563c8'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034f1e6a6e0455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.923064 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt seemed to me that the web would be a big deal. I\'d seen what graphical user interfaces had done for the popularity of microcomputers. It seemed like the web would do the same for the internet.\n\nIf I wanted to get rich, here was the next train leaving the station. I was right about that part. What I got wrong was the idea. I decided we should start a company to put art galleries online. I can\'t honestly say, after reading so many Y Combinator applications, that this was the worst startup idea ever, but it was up there. Art galleries didn\'t want to be online, and still don\'t, not the fancy ones. That\'s not how they sell. I wrote some software to generate web sites for galleries, and Robert wrote some to resize images and set up an http server to serve the pages. Then we tried to sign up galleries. To call this a difficult sale would be an understatement. It was difficult to give away. A few galleries let us make sites for them for free, but none paid us.\n\nThen some online stores started to appear, and I realized that except for the order buttons they were identical to the sites we\'d been generating for galleries. This impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:06 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'119'), (b'x-ratelimit-remaining-tokens', b'39357'), (b'x-ratelimit-remaining-tokens_usage_based', b'39357'), (b'x-ratelimit-reset-requests', b'9h37m5.815s'), (b'x-ratelimit-reset-tokens', b'964ms'), (b'x-ratelimit-reset-tokens_usage_based', b'964ms'), (b'x-request-id', b'8d4e5c6abdaf9c817f4b60a04f0957e0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034f25cdf90455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.610482 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt seemed to me that the web would be a big deal. I\'d seen what graphical user interfaces had done for the popularity of microcomputers. It seemed like the web would do the same for the internet.\n\nIf I wanted to get rich, here was the next train leaving the station. I was right about that part. What I got wrong was the idea. I decided we should start a company to put art galleries online. I can\'t honestly say, after reading so many Y Combinator applications, that this was the worst startup idea ever, but it was up there. Art galleries didn\'t want to be online, and still don\'t, not the fancy ones. That\'s not how they sell. I wrote some software to generate web sites for galleries, and Robert wrote some to resize images and set up an http server to serve the pages. Then we tried to sign up galleries. To call this a difficult sale would be an understatement. It was difficult to give away. A few galleries let us make sites for them for free, but none paid us.\n\nThen some online stores started to appear, and I realized that except for the order buttons they were identical to the sites we\'d been generating for galleries. This impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:08 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'118'), (b'x-ratelimit-remaining-tokens', b'39357'), (b'x-ratelimit-remaining-tokens_usage_based', b'39357'), (b'x-ratelimit-reset-requests', b'9h44m15.95s'), (b'x-ratelimit-reset-tokens', b'964ms'), (b'x-ratelimit-reset-tokens_usage_based', b'964ms'), (b'x-request-id', b'17f4c99c7f4e33bdb97f55c0a4bf265a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034f317f780455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.910125 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt seemed to me that the web would be a big deal. I\'d seen what graphical user interfaces had done for the popularity of microcomputers. It seemed like the web would do the same for the internet.\n\nIf I wanted to get rich, here was the next train leaving the station. I was right about that part. What I got wrong was the idea. I decided we should start a company to put art galleries online. I can\'t honestly say, after reading so many Y Combinator applications, that this was the worst startup idea ever, but it was up there. Art galleries didn\'t want to be online, and still don\'t, not the fancy ones. That\'s not how they sell. I wrote some software to generate web sites for galleries, and Robert wrote some to resize images and set up an http server to serve the pages. Then we tried to sign up galleries. To call this a difficult sale would be an understatement. It was difficult to give away. A few galleries let us make sites for them for free, but none paid us.\n\nThen some online stores started to appear, and I realized that except for the order buttons they were identical to the sites we\'d been generating for galleries. This impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:12 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'117'), (b'x-ratelimit-remaining-tokens', b'39357'), (b'x-ratelimit-remaining-tokens_usage_based', b'39357'), (b'x-ratelimit-reset-requests', b'9h51m23.759s'), (b'x-ratelimit-reset-tokens', b'964ms'), (b'x-ratelimit-reset-tokens_usage_based', b'964ms'), (b'x-request-id', b'ff45d94b27d280971ff5f05803840fc0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034f4ba81d0455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.549098 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt seemed to me that the web would be a big deal. I\'d seen what graphical user interfaces had done for the popularity of microcomputers. It seemed like the web would do the same for the internet.\n\nIf I wanted to get rich, here was the next train leaving the station. I was right about that part. What I got wrong was the idea. I decided we should start a company to put art galleries online. I can\'t honestly say, after reading so many Y Combinator applications, that this was the worst startup idea ever, but it was up there. Art galleries didn\'t want to be online, and still don\'t, not the fancy ones. That\'s not how they sell. I wrote some software to generate web sites for galleries, and Robert wrote some to resize images and set up an http server to serve the pages. Then we tried to sign up galleries. To call this a difficult sale would be an understatement. It was difficult to give away. A few galleries let us make sites for them for free, but none paid us.\n\nThen some online stores started to appear, and I realized that except for the order buttons they were identical to the sites we\'d been generating for galleries. This impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed9d50>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0edbee0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:19:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1005'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'116'), (b'x-ratelimit-remaining-tokens', b'39357'), (b'x-ratelimit-remaining-tokens_usage_based', b'39357'), (b'x-ratelimit-reset-requests', b'9h58m27.73s'), (b'x-ratelimit-reset-tokens', b'964ms'), (b'x-ratelimit-reset-tokens_usage_based', b'964ms'), (b'x-request-id', b'474adcbb84954e0c6e976d6deb526bab'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034f7dc93704ff-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(web, do, popularity)
(graphical user interfaces, done for, microcomputers)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('web', 'do', 'popularity'), ('graphical user interfaces', 'done for', 'microcomputers')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4540.6939661, ttl=10, perf_time=4561.1367355 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4561.314764, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4561.314764, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`DO`]->(n2)\n        ' {'subj': 'web', 'obj': 'popularity'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 92, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXVWQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4561.314764, ttl=10, perf_time=4561.461351 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4561.314764, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`DONE_FOR`]->(n2)\n        ' {'subj': 'graphical user interfaces', 'obj': 'microcomputers'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 94, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXVeQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThis impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor. One morning as I was lying on this mattress I had an idea that made me sit up like a capital L. What if we ran the software on the server, and let users control it by clicking on links? Then we\'d never have to write anything to run on users\' computers. We could generate the sites on the same server we\'d serve them from. Users wouldn\'t need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn\'t clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn\'t need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:22 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'115'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'10h5m37.947s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'cbad9a92f150473d9062b549f9fe78c5'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034f88eb0d04ff-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.848652 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThis impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor. One morning as I was lying on this mattress I had an idea that made me sit up like a capital L. What if we ran the software on the server, and let users control it by clicking on links? Then we\'d never have to write anything to run on users\' computers. We could generate the sites on the same server we\'d serve them from. Users wouldn\'t need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn\'t clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn\'t need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:23 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'114'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'10h12m48.839s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'4b53be1dee4f7bc1a2f149d576037b8a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034f8fcdf404ff-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.613312 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThis impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor. One morning as I was lying on this mattress I had an idea that made me sit up like a capital L. What if we ran the software on the server, and let users control it by clicking on links? Then we\'d never have to write anything to run on users\' computers. We could generate the sites on the same server we\'d serve them from. Users wouldn\'t need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn\'t clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn\'t need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:25 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'113'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'10h19m58.97s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'a5d91a2de6df61aa5d512ee4f6a57496'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034f9b885004ff-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.131683 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThis impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor. One morning as I was lying on this mattress I had an idea that made me sit up like a capital L. What if we ran the software on the server, and let users control it by clicking on links? Then we\'d never have to write anything to run on users\' computers. We could generate the sites on the same server we\'d serve them from. Users wouldn\'t need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn\'t clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn\'t need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:28 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'112'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'10h27m7.56s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'ac254ce6b9672e8731321171f569bc7b'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034fb0eab604ff-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.466873 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThis impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor. One morning as I was lying on this mattress I had an idea that made me sit up like a capital L. What if we ran the software on the server, and let users control it by clicking on links? Then we\'d never have to write anything to run on users\' computers. We could generate the sites on the same server we\'d serve them from. Users wouldn\'t need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn\'t clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn\'t need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed8d30>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed9ab0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'111'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'10h34m11.561s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'3982dd1a5deef26011b01bf5f5c62e5b'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83034fe2ce0609a0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.794306 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThis impressive-sounding thing called an "internet storefront" was something we already knew how to build.\n\nSo in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we\'d at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores — in Lisp, of course.\n\nWe were working out of Robert\'s apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor. One morning as I was lying on this mattress I had an idea that made me sit up like a capital L. What if we ran the software on the server, and let users control it by clicking on links? Then we\'d never have to write anything to run on users\' computers. We could generate the sites on the same server we\'d serve them from. Users wouldn\'t need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn\'t clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn\'t need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0edace0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed8be0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:19:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'2585'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'110'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'10h41m15.813s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'6f02ed09cd9d7341e532cc9471fc4b94'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035010b9750ee0-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(we, started trying to write, software to build online stores)
(Robert, wrote, a shopping cart)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('we', 'started trying to write', 'software to build online stores'), ('Robert', 'wrote', 'a shopping cart')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4561.314764, ttl=10, perf_time=4586.7648193 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4587.034482, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4587.034482, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`STARTED_TRYING_TO_WRITE`]->(n2)\n        ' {'subj': 'we', 'obj': 'software to build online stores'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 125, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXVmQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4587.034482, ttl=10, perf_time=4587.3042784 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4587.034482, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WROTE`]->(n2)\n        ' {'subj': 'Robert', 'obj': 'a shopping cart'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 89, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXVqQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nUsers wouldn't need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn't clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn't need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\n\nWe started a new company we called Viaweb, after the fact that our software worked via the web, and we got $10,000 in seed funding from Idelle's husband Julian. In return for that and doing the initial legal work and giving us business advice, we gave him 10% of the company. Ten years later this deal became the model for Y Combinator's. We knew founders needed something like this, because we'd needed it ourselves.\n\nAt this stage I had a negative net worth, because the thousand dollars or so I had in the bank was more than counterbalanced by what I owed the government in taxes. (Had I diligently set aside the proper proportion of the money I'd made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.\n\nWe originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.\n\nIt helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:48 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'109'), (b'x-ratelimit-remaining-tokens', b'39302'), (b'x-ratelimit-remaining-tokens_usage_based', b'39302'), (b'x-ratelimit-reset-requests', b'10h48m23.959s'), (b'x-ratelimit-reset-tokens', b'1.047s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.047s'), (b'x-request-id', b'155f0729c6e1c63944012704693fccd3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303502b6bf00ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.910173 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nUsers wouldn't need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn't clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn't need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\n\nWe started a new company we called Viaweb, after the fact that our software worked via the web, and we got $10,000 in seed funding from Idelle's husband Julian. In return for that and doing the initial legal work and giving us business advice, we gave him 10% of the company. Ten years later this deal became the model for Y Combinator's. We knew founders needed something like this, because we'd needed it ourselves.\n\nAt this stage I had a negative net worth, because the thousand dollars or so I had in the bank was more than counterbalanced by what I owed the government in taxes. (Had I diligently set aside the proper proportion of the money I'd made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.\n\nWe originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.\n\nIt helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:49 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'108'), (b'x-ratelimit-remaining-tokens', b'39302'), (b'x-ratelimit-remaining-tokens_usage_based', b'39302'), (b'x-ratelimit-reset-requests', b'10h55m34.773s'), (b'x-ratelimit-reset-tokens', b'1.047s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.047s'), (b'x-request-id', b'3c475f6357402cc2bbc5f474de397b38'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035032ba7a0ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.513239 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nUsers wouldn't need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn't clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn't need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\n\nWe started a new company we called Viaweb, after the fact that our software worked via the web, and we got $10,000 in seed funding from Idelle's husband Julian. In return for that and doing the initial legal work and giving us business advice, we gave him 10% of the company. Ten years later this deal became the model for Y Combinator's. We knew founders needed something like this, because we'd needed it ourselves.\n\nAt this stage I had a negative net worth, because the thousand dollars or so I had in the bank was more than counterbalanced by what I owed the government in taxes. (Had I diligently set aside the proper proportion of the money I'd made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.\n\nWe originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.\n\nIt helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:51 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'107'), (b'x-ratelimit-remaining-tokens', b'39302'), (b'x-ratelimit-remaining-tokens_usage_based', b'39302'), (b'x-ratelimit-reset-requests', b'11h2m44.993s'), (b'x-ratelimit-reset-tokens', b'1.047s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.047s'), (b'x-request-id', b'df79dd92c034eeea4b05907a0d16933a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303503ddf620ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.061291 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nUsers wouldn't need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn't clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn't need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\n\nWe started a new company we called Viaweb, after the fact that our software worked via the web, and we got $10,000 in seed funding from Idelle's husband Julian. In return for that and doing the initial legal work and giving us business advice, we gave him 10% of the company. Ten years later this deal became the model for Y Combinator's. We knew founders needed something like this, because we'd needed it ourselves.\n\nAt this stage I had a negative net worth, because the thousand dollars or so I had in the bank was more than counterbalanced by what I owed the government in taxes. (Had I diligently set aside the proper proportion of the money I'd made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.\n\nWe originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.\n\nIt helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:19:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'106'), (b'x-ratelimit-remaining-tokens', b'39302'), (b'x-ratelimit-remaining-tokens_usage_based', b'39302'), (b'x-ratelimit-reset-requests', b'11h9m53.672s'), (b'x-ratelimit-reset-tokens', b'1.047s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.047s'), (b'x-request-id', b'a15a0baf3aed023eee7b43d4c97c4867'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035052bd850ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.127073 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nUsers wouldn't need anything more than a browser.\n\nThis kind of software, known as a web app, is common now, but at the time it wasn't clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\n\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn't need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\n\nWe started a new company we called Viaweb, after the fact that our software worked via the web, and we got $10,000 in seed funding from Idelle's husband Julian. In return for that and doing the initial legal work and giving us business advice, we gave him 10% of the company. Ten years later this deal became the model for Y Combinator's. We knew founders needed something like this, because we'd needed it ourselves.\n\nAt this stage I had a negative net worth, because the thousand dollars or so I had in the bank was more than counterbalanced by what I owed the government in taxes. (Had I diligently set aside the proper proportion of the money I'd made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.\n\nWe originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.\n\nIt helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed8a60>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0edb2b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:20:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'2416'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'105'), (b'x-ratelimit-remaining-tokens', b'39302'), (b'x-ratelimit-remaining-tokens_usage_based', b'39302'), (b'x-ratelimit-reset-requests', b'11h16m57.887s'), (b'x-ratelimit-reset-tokens', b'1.047s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.047s'), (b'x-request-id', b'd3905f672cf492644a7eb2d8412c52cd'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830350835ae30974-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Viaweb, called, after the fact that our software worked via the web)
(Viaweb, got, $10,000 in seed funding from Idelle's husband Julian)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Viaweb', 'called', 'after the fact that our software worked via the web')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4587.034482, ttl=10, perf_time=4604.5140015 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4604.7103929, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4604.7103929, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`CALLED`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': 'after the fact that our software worked via the web'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 101, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXVyQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n(Had I diligently set aside the proper proportion of the money I\'d made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.\n\nWe originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.\n\nIt helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values. If you get page layouts and fonts and colors right, you can make a guy running a store out of his bedroom look more legit than a big company.\n\n(If you\'re curious why my site looks so old-fashioned, it\'s because it\'s still made with this software. It may look clunky today, but in 1996 it was the last word in slick.)\n\nIn September, Robert rebelled. "We\'ve been working on this for a month," he said, "and it\'s still not done." This is funny in retrospect, because he would still be working on it almost 3 years later. But I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They\'re the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm\'s brain it would look like a colonial New England church, and if you could see inside Trevor\'s it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'104'), (b'x-ratelimit-remaining-tokens', b'39341'), (b'x-ratelimit-remaining-tokens_usage_based', b'39341'), (b'x-ratelimit-reset-requests', b'11h24m6.557s'), (b'x-ratelimit-reset-tokens', b'988ms'), (b'x-ratelimit-reset-tokens_usage_based', b'988ms'), (b'x-request-id', b'65c2f7a01388ec46ecd4512781836cb4'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035097fa020974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.777922 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n(Had I diligently set aside the proper proportion of the money I\'d made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.\n\nWe originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.\n\nIt helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values. If you get page layouts and fonts and colors right, you can make a guy running a store out of his bedroom look more legit than a big company.\n\n(If you\'re curious why my site looks so old-fashioned, it\'s because it\'s still made with this software. It may look clunky today, but in 1996 it was the last word in slick.)\n\nIn September, Robert rebelled. "We\'ve been working on this for a month," he said, "and it\'s still not done." This is funny in retrospect, because he would still be working on it almost 3 years later. But I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They\'re the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm\'s brain it would look like a colonial New England church, and if you could see inside Trevor\'s it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:07 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'103'), (b'x-ratelimit-remaining-tokens', b'39341'), (b'x-ratelimit-remaining-tokens_usage_based', b'39341'), (b'x-ratelimit-reset-requests', b'11h31m17.507s'), (b'x-ratelimit-reset-tokens', b'988ms'), (b'x-ratelimit-reset-tokens_usage_based', b'988ms'), (b'x-request-id', b'd66f37caac614e37755747084e67bc15'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303509ead3e0974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.880833 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n(Had I diligently set aside the proper proportion of the money I\'d made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.\n\nWe originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.\n\nIt helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values. If you get page layouts and fonts and colors right, you can make a guy running a store out of his bedroom look more legit than a big company.\n\n(If you\'re curious why my site looks so old-fashioned, it\'s because it\'s still made with this software. It may look clunky today, but in 1996 it was the last word in slick.)\n\nIn September, Robert rebelled. "We\'ve been working on this for a month," he said, "and it\'s still not done." This is funny in retrospect, because he would still be working on it almost 3 years later. But I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They\'re the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm\'s brain it would look like a colonial New England church, and if you could see inside Trevor\'s it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:09 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'102'), (b'x-ratelimit-remaining-tokens', b'39341'), (b'x-ratelimit-remaining-tokens_usage_based', b'39341'), (b'x-ratelimit-reset-requests', b'11h38m27.38s'), (b'x-ratelimit-reset-tokens', b'988ms'), (b'x-ratelimit-reset-tokens_usage_based', b'988ms'), (b'x-request-id', b'a284a6e4cb1952d4f6b64f5f67eec2bd'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830350ac0f510974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.678107 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n(Had I diligently set aside the proper proportion of the money I\'d made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.\n\nWe originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.\n\nIt helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values. If you get page layouts and fonts and colors right, you can make a guy running a store out of his bedroom look more legit than a big company.\n\n(If you\'re curious why my site looks so old-fashioned, it\'s because it\'s still made with this software. It may look clunky today, but in 1996 it was the last word in slick.)\n\nIn September, Robert rebelled. "We\'ve been working on this for a month," he said, "and it\'s still not done." This is funny in retrospect, because he would still be working on it almost 3 years later. But I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They\'re the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm\'s brain it would look like a colonial New England church, and if you could see inside Trevor\'s it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:13 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'102'), (b'x-ratelimit-remaining-tokens', b'39341'), (b'x-ratelimit-remaining-tokens_usage_based', b'39341'), (b'x-ratelimit-reset-requests', b'11h45m35.433s'), (b'x-ratelimit-reset-tokens', b'988ms'), (b'x-ratelimit-reset-tokens_usage_based', b'988ms'), (b'x-request-id', b'374c2964f7bd944db87ece3926276e14'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830350c4add10974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.794475 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n(Had I diligently set aside the proper proportion of the money I\'d made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.\n\nWe originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.\n\nIt helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values. If you get page layouts and fonts and colors right, you can make a guy running a store out of his bedroom look more legit than a big company.\n\n(If you\'re curious why my site looks so old-fashioned, it\'s because it\'s still made with this software. It may look clunky today, but in 1996 it was the last word in slick.)\n\nIn September, Robert rebelled. "We\'ve been working on this for a month," he said, "and it\'s still not done." This is funny in retrospect, because he would still be working on it almost 3 years later. But I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They\'re the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm\'s brain it would look like a colonial New England church, and if you could see inside Trevor\'s it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ee5690>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ee5cf0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:20:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1226'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'101'), (b'x-ratelimit-remaining-tokens', b'39341'), (b'x-ratelimit-remaining-tokens_usage_based', b'39341'), (b'x-ratelimit-reset-requests', b'11h52m39.073s'), (b'x-ratelimit-reset-tokens', b'988ms'), (b'x-ratelimit-reset-tokens_usage_based', b'988ms'), (b'x-request-id', b'0f9794e325fa40a1c0fcaacdd1d4802e'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830350f8eab70ed4-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Robert, rebelled, September)
(Robert, recommended, Trevor Blackwell)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Robert', 'rebelled', 'September'), ('Robert', 'recommended', 'Trevor Blackwell')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4604.7103929, ttl=10, perf_time=4622.1533093 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4622.3853894, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4622.3853894, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`REBELLED`]->(n2)\n        ' {'subj': 'Robert', 'obj': 'September'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 90, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXV6Q', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4622.3853894, ttl=10, perf_time=4622.5613125 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4622.3853894, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`RECOMMENDED`]->(n2)\n        ' {'subj': 'Robert', 'obj': 'Trevor Blackwell'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 91, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXWCQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They're the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm's brain it would look like a colonial New England church, and if you could see inside Trevor's it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996. It was just as well we waited a few months, because although we worried we were late, we were actually almost fatally early. There was a lot of talk in the press then about ecommerce, but not many people actually wanted online stores. [8]\n\nThere were three main parts to the software: the editor, which people used to build sites and which I wrote, the shopping cart, which Robert wrote, and the manager, which kept track of orders and statistics, and which Trevor wrote. In its time, the editor was one of the best general-purpose site builders. I kept the code tight and didn't have to integrate with any other software except Robert's and Trevor's, so it was quite fun to work on. If all I'd had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:23 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'100'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'11h59m48.7s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'10e6c5f2cd3f555b285d71f0129b599d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830351075b150ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.789850 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They're the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm's brain it would look like a colonial New England church, and if you could see inside Trevor's it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996. It was just as well we waited a few months, because although we worried we were late, we were actually almost fatally early. There was a lot of talk in the press then about ecommerce, but not many people actually wanted online stores. [8]\n\nThere were three main parts to the software: the editor, which people used to build sites and which I wrote, the shopping cart, which Robert wrote, and the manager, which kept track of orders and statistics, and which Trevor wrote. In its time, the editor was one of the best general-purpose site builders. I kept the code tight and didn't have to integrate with any other software except Robert's and Trevor's, so it was quite fun to work on. If all I'd had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:24 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'99'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'12h6m59.648s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'df374a4313d4384a05d020c4a99c3f33'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303510e4ea90ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.691901 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They're the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm's brain it would look like a colonial New England church, and if you could see inside Trevor's it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996. It was just as well we waited a few months, because although we worried we were late, we were actually almost fatally early. There was a lot of talk in the press then about ecommerce, but not many people actually wanted online stores. [8]\n\nThere were three main parts to the software: the editor, which people used to build sites and which I wrote, the shopping cart, which Robert wrote, and the manager, which kept track of orders and statistics, and which Trevor wrote. In its time, the editor was one of the best general-purpose site builders. I kept the code tight and didn't have to integrate with any other software except Robert's and Trevor's, so it was quite fun to work on. If all I'd had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:26 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'98'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'12h14m9.689s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'37072b39b180ae0fe4c18dc5b8936aca'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303511a8c1f0ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.666577 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They're the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm's brain it would look like a colonial New England church, and if you could see inside Trevor's it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996. It was just as well we waited a few months, because although we worried we were late, we were actually almost fatally early. There was a lot of talk in the press then about ecommerce, but not many people actually wanted online stores. [8]\n\nThere were three main parts to the software: the editor, which people used to build sites and which I wrote, the shopping cart, which Robert wrote, and the manager, which kept track of orders and statistics, and which Trevor wrote. In its time, the editor was one of the best general-purpose site builders. I kept the code tight and didn't have to integrate with any other software except Robert's and Trevor's, so it was quite fun to work on. If all I'd had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:30 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'97'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'12h21m17.774s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'c082651f7cf1c4f060078176ab68bc81'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830351332e1c0ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.803686 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They're the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm's brain it would look like a colonial New England church, and if you could see inside Trevor's it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996. It was just as well we waited a few months, because although we worried we were late, we were actually almost fatally early. There was a lot of talk in the press then about ecommerce, but not many people actually wanted online stores. [8]\n\nThere were three main parts to the software: the editor, which people used to build sites and which I wrote, the shopping cart, which Robert wrote, and the manager, which kept track of orders and statistics, and which Trevor wrote. In its time, the editor was one of the best general-purpose site builders. I kept the code tight and didn't have to integrate with any other software except Robert's and Trevor's, so it was quite fun to work on. If all I'd had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed0a30>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed2bc0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:38 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'96'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'12h28m22.423s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'8dc8dfafed63fddee14eb94ba63c3e35'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035160df0b0ec8-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.677739 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.\n\nIt was a lot of fun working with Robert and Trevor. They're the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm's brain it would look like a colonial New England church, and if you could see inside Trevor's it would look like the worst excesses of Austrian Rococo.\n\nWe opened for business, with 6 stores, in January 1996. It was just as well we waited a few months, because although we worried we were late, we were actually almost fatally early. There was a lot of talk in the press then about ecommerce, but not many people actually wanted online stores. [8]\n\nThere were three main parts to the software: the editor, which people used to build sites and which I wrote, the shopping cart, which Robert wrote, and the manager, which kept track of orders and statistics, and which Trevor wrote. In its time, the editor was one of the best general-purpose site builders. I kept the code tight and didn't have to integrate with any other software except Robert's and Trevor's, so it was quite fun to work on. If all I'd had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed0d00>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed0d90>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:20:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'2277'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'95'), (b'x-ratelimit-remaining-tokens', b'39335'), (b'x-ratelimit-remaining-tokens_usage_based', b'39335'), (b'x-ratelimit-reset-requests', b'12h35m26.175s'), (b'x-ratelimit-reset-tokens', b'997ms'), (b'x-ratelimit-reset-tokens_usage_based', b'997ms'), (b'x-request-id', b'07d9f51d6383903acd56f8ce3462d6d6'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303519488b45df0-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Viaweb, charged, $100 a month)
(Viaweb, charged, $300 a month)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Viaweb', 'charged', '$100 a month'), ('Viaweb', 'charged', '$300 a month')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4622.3853894, ttl=10, perf_time=4648.0990077 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4648.3034285, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4648.3034285, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`CHARGED`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': '$100 a month'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 94, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXWKQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4648.3034285, ttl=10, perf_time=4648.4734701 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4648.3034285, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`CHARGED`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': '$300 a month'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 10, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXWOQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI kept the code tight and didn\'t have to integrate with any other software except Robert\'s and Trevor\'s, so it was quite fun to work on. If all I\'d had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one. This low price was a big attraction, and a constant thorn in the sides of competitors, but it wasn\'t because of some clever insight that we set the price low. We had no idea what businesses paid for things. $300 a month seemed like a lot of money to us.\n\nWe did a lot of things right by accident like that. For example, we did what\'s now called "doing things that don\'t scale," although at the time we would have described it as "being so lame that we\'re driven to the most desperate measures to get users." The most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d\'etre of our software was that people could use it to make their own stores. But anything to get users.\n\nWe learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man\'s shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men\'s shirts. My first set of scans were so beautiful too.\n\nThough this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:49 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'94'), (b'x-ratelimit-remaining-tokens', b'39347'), (b'x-ratelimit-remaining-tokens_usage_based', b'39347'), (b'x-ratelimit-reset-requests', b'12h42m34.921s'), (b'x-ratelimit-reset-tokens', b'979ms'), (b'x-ratelimit-reset-tokens_usage_based', b'979ms'), (b'x-request-id', b'b0c07dd2b91a414b54e8d9950aba5414'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830351a8eb9c5df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.943781 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI kept the code tight and didn\'t have to integrate with any other software except Robert\'s and Trevor\'s, so it was quite fun to work on. If all I\'d had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one. This low price was a big attraction, and a constant thorn in the sides of competitors, but it wasn\'t because of some clever insight that we set the price low. We had no idea what businesses paid for things. $300 a month seemed like a lot of money to us.\n\nWe did a lot of things right by accident like that. For example, we did what\'s now called "doing things that don\'t scale," although at the time we would have described it as "being so lame that we\'re driven to the most desperate measures to get users." The most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d\'etre of our software was that people could use it to make their own stores. But anything to get users.\n\nWe learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man\'s shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men\'s shirts. My first set of scans were so beautiful too.\n\nThough this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:50 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'93'), (b'x-ratelimit-remaining-tokens', b'39347'), (b'x-ratelimit-remaining-tokens_usage_based', b'39347'), (b'x-ratelimit-reset-requests', b'12h49m45.727s'), (b'x-ratelimit-reset-tokens', b'979ms'), (b'x-ratelimit-reset-tokens_usage_based', b'979ms'), (b'x-request-id', b'ed0d013d8f0841443bf35bb2d91b8895'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830351b0583d5df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.750667 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI kept the code tight and didn\'t have to integrate with any other software except Robert\'s and Trevor\'s, so it was quite fun to work on. If all I\'d had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one. This low price was a big attraction, and a constant thorn in the sides of competitors, but it wasn\'t because of some clever insight that we set the price low. We had no idea what businesses paid for things. $300 a month seemed like a lot of money to us.\n\nWe did a lot of things right by accident like that. For example, we did what\'s now called "doing things that don\'t scale," although at the time we would have described it as "being so lame that we\'re driven to the most desperate measures to get users." The most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d\'etre of our software was that people could use it to make their own stores. But anything to get users.\n\nWe learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man\'s shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men\'s shirts. My first set of scans were so beautiful too.\n\nThough this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:52 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'92'), (b'x-ratelimit-remaining-tokens', b'39347'), (b'x-ratelimit-remaining-tokens_usage_based', b'39347'), (b'x-ratelimit-reset-requests', b'12h56m55.672s'), (b'x-ratelimit-reset-tokens', b'979ms'), (b'x-ratelimit-reset-tokens_usage_based', b'979ms'), (b'x-request-id', b'855e18cbb32592d4d72015db6c533647'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830351bd3f215df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.022352 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI kept the code tight and didn\'t have to integrate with any other software except Robert\'s and Trevor\'s, so it was quite fun to work on. If all I\'d had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one. This low price was a big attraction, and a constant thorn in the sides of competitors, but it wasn\'t because of some clever insight that we set the price low. We had no idea what businesses paid for things. $300 a month seemed like a lot of money to us.\n\nWe did a lot of things right by accident like that. For example, we did what\'s now called "doing things that don\'t scale," although at the time we would have described it as "being so lame that we\'re driven to the most desperate measures to get users." The most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d\'etre of our software was that people could use it to make their own stores. But anything to get users.\n\nWe learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man\'s shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men\'s shirts. My first set of scans were so beautiful too.\n\nThough this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:20:56 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'91'), (b'x-ratelimit-remaining-tokens', b'39347'), (b'x-ratelimit-remaining-tokens_usage_based', b'39347'), (b'x-ratelimit-reset-requests', b'13h4m4.353s'), (b'x-ratelimit-reset-tokens', b'979ms'), (b'x-ratelimit-reset-tokens_usage_based', b'979ms'), (b'x-request-id', b'fffabcc528184dcd1a2c88a78a7a7ef9'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830351d1fb6f5df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.922119 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI kept the code tight and didn\'t have to integrate with any other software except Robert\'s and Trevor\'s, so it was quite fun to work on. If all I\'d had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.\n\nThere were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one. This low price was a big attraction, and a constant thorn in the sides of competitors, but it wasn\'t because of some clever insight that we set the price low. We had no idea what businesses paid for things. $300 a month seemed like a lot of money to us.\n\nWe did a lot of things right by accident like that. For example, we did what\'s now called "doing things that don\'t scale," although at the time we would have described it as "being so lame that we\'re driven to the most desperate measures to get users." The most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d\'etre of our software was that people could use it to make their own stores. But anything to get users.\n\nWe learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man\'s shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men\'s shirts. My first set of scans were so beautiful too.\n\nThough this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ecf4f0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ecf070>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:21:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'6075'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'90'), (b'x-ratelimit-remaining-tokens', b'39347'), (b'x-ratelimit-remaining-tokens_usage_based', b'39347'), (b'x-ratelimit-reset-requests', b'13h11m8.927s'), (b'x-ratelimit-reset-tokens', b'979ms'), (b'x-ratelimit-reset-tokens_usage_based', b'979ms'), (b'x-request-id', b'ad079c8ad6ddcd5108f31d47f14a8baa'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830352005a340fc2-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(startups, making, ecommerce software)
(Viaweb, charged, $100 a month)
(Viaweb, charged, $300 a month)
(Viaweb, set, price low)
(Viaweb, make, stores for users)
(Viaweb, taught, about retail)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('startups', 'making', 'ecommerce software'), ('Viaweb', 'charged', '$100 a month'), ('Viaweb', 'charged', '$300 a month'), ('Viaweb', 'set', 'price low'), ('Viaweb', 'make', 'stores for users'), ('Viaweb', 'taught', 'about retail')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4648.3034285, ttl=10, perf_time=4669.1215885 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4669.3044926, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4669.3044926, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`MAKING`]->(n2)\n        ' {'subj': 'startups', 'obj': 'ecommerce software'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 114, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXWWQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4669.3044926, ttl=10, perf_time=4669.4861676 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4669.3044926, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`CHARGED`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': '$100 a month'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 8, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXWWQ', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4669.3044926, ttl=10, perf_time=4669.6308639 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4669.3044926, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`CHARGED`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': '$300 a month'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 8, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXWWQ', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4669.3044926, ttl=10, perf_time=4669.7641192 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4669.3044926, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`SET`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': 'price low'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 100, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXWeQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4669.3044926, ttl=10, perf_time=4669.9645579 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4669.3044926, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`MAKE`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': 'stores for users'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 106, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXWmQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4669.3044926, ttl=10, perf_time=4670.1317787 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4669.3044926, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`TAUGHT`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': 'about retail'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 98, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXWuQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d\'etre of our software was that people could use it to make their own stores. But anything to get users.\n\nWe learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man\'s shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men\'s shirts. My first set of scans were so beautiful too.\n\nThough this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software. I was initially both mystified and repelled by "business" and thought we needed a "business person" to be in charge of it, but once we started to get users, I was converted, in much the same way I was converted to fatherhood once I had kids. Whatever users wanted, I was all theirs. Maybe one day we\'d have so many users that I couldn\'t scan their images for them, but in the meantime there was nothing more important to do.\n\nAnother thing I didn\'t get at the time is that growth rate is the ultimate test of a startup. Our growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that\'s how much money you\'re making, and if you\'re not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we\'d been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you\'re doing fine. You\'re growing 7x a year. Just don\'t hire too many more people and you\'ll soon be profitable, and then you\'ll control your own destiny.\n\nAlas I hired lots more people, partly because our investors wanted me to, and partly because that\'s what startups did during the Internet Bubble.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:11 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'89'), (b'x-ratelimit-remaining-tokens', b'39333'), (b'x-ratelimit-remaining-tokens_usage_based', b'39333'), (b'x-ratelimit-reset-requests', b'13h18m13.247s'), (b'x-ratelimit-reset-tokens', b'1s'), (b'x-ratelimit-reset-tokens_usage_based', b'1s'), (b'x-request-id', b'07234bd18ab9f0580e442b39b5ad1ccc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830352305d650fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.782518 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d\'etre of our software was that people could use it to make their own stores. But anything to get users.\n\nWe learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man\'s shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men\'s shirts. My first set of scans were so beautiful too.\n\nThough this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software. I was initially both mystified and repelled by "business" and thought we needed a "business person" to be in charge of it, but once we started to get users, I was converted, in much the same way I was converted to fatherhood once I had kids. Whatever users wanted, I was all theirs. Maybe one day we\'d have so many users that I couldn\'t scan their images for them, but in the meantime there was nothing more important to do.\n\nAnother thing I didn\'t get at the time is that growth rate is the ultimate test of a startup. Our growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that\'s how much money you\'re making, and if you\'re not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we\'d been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you\'re doing fine. You\'re growing 7x a year. Just don\'t hire too many more people and you\'ll soon be profitable, and then you\'ll control your own destiny.\n\nAlas I hired lots more people, partly because our investors wanted me to, and partly because that\'s what startups did during the Internet Bubble.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:12 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'88'), (b'x-ratelimit-remaining-tokens', b'39333'), (b'x-ratelimit-remaining-tokens_usage_based', b'39333'), (b'x-ratelimit-reset-requests', b'13h25m24.212s'), (b'x-ratelimit-reset-tokens', b'1s'), (b'x-ratelimit-reset-tokens_usage_based', b'1s'), (b'x-request-id', b'11fbe61ace7a916f27035de4b134c797'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035236cf650fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.504000 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d\'etre of our software was that people could use it to make their own stores. But anything to get users.\n\nWe learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man\'s shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men\'s shirts. My first set of scans were so beautiful too.\n\nThough this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software. I was initially both mystified and repelled by "business" and thought we needed a "business person" to be in charge of it, but once we started to get users, I was converted, in much the same way I was converted to fatherhood once I had kids. Whatever users wanted, I was all theirs. Maybe one day we\'d have so many users that I couldn\'t scan their images for them, but in the meantime there was nothing more important to do.\n\nAnother thing I didn\'t get at the time is that growth rate is the ultimate test of a startup. Our growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that\'s how much money you\'re making, and if you\'re not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we\'d been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you\'re doing fine. You\'re growing 7x a year. Just don\'t hire too many more people and you\'ll soon be profitable, and then you\'ll control your own destiny.\n\nAlas I hired lots more people, partly because our investors wanted me to, and partly because that\'s what startups did during the Internet Bubble.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:14 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'87'), (b'x-ratelimit-remaining-tokens', b'39333'), (b'x-ratelimit-remaining-tokens_usage_based', b'39333'), (b'x-ratelimit-reset-requests', b'13h32m34.378s'), (b'x-ratelimit-reset-tokens', b'1s'), (b'x-ratelimit-reset-tokens_usage_based', b'1s'), (b'x-request-id', b'd20d96e656c850d99a67105f917b985c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830352420ec50fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.495733 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d\'etre of our software was that people could use it to make their own stores. But anything to get users.\n\nWe learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man\'s shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men\'s shirts. My first set of scans were so beautiful too.\n\nThough this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software. I was initially both mystified and repelled by "business" and thought we needed a "business person" to be in charge of it, but once we started to get users, I was converted, in much the same way I was converted to fatherhood once I had kids. Whatever users wanted, I was all theirs. Maybe one day we\'d have so many users that I couldn\'t scan their images for them, but in the meantime there was nothing more important to do.\n\nAnother thing I didn\'t get at the time is that growth rate is the ultimate test of a startup. Our growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that\'s how much money you\'re making, and if you\'re not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we\'d been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you\'re doing fine. You\'re growing 7x a year. Just don\'t hire too many more people and you\'ll soon be profitable, and then you\'ll control your own destiny.\n\nAlas I hired lots more people, partly because our investors wanted me to, and partly because that\'s what startups did during the Internet Bubble.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'86'), (b'x-ratelimit-remaining-tokens', b'39333'), (b'x-ratelimit-remaining-tokens_usage_based', b'39333'), (b'x-ratelimit-reset-requests', b'13h39m42.585s'), (b'x-ratelimit-reset-tokens', b'1s'), (b'x-ratelimit-reset-tokens_usage_based', b'1s'), (b'x-request-id', b'd5f97d487bad224f1de2e58c514ce810'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303525a39e60fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.243534 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThe most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d\'etre of our software was that people could use it to make their own stores. But anything to get users.\n\nWe learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man\'s shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men\'s shirts. My first set of scans were so beautiful too.\n\nThough this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software. I was initially both mystified and repelled by "business" and thought we needed a "business person" to be in charge of it, but once we started to get users, I was converted, in much the same way I was converted to fatherhood once I had kids. Whatever users wanted, I was all theirs. Maybe one day we\'d have so many users that I couldn\'t scan their images for them, but in the meantime there was nothing more important to do.\n\nAnother thing I didn\'t get at the time is that growth rate is the ultimate test of a startup. Our growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that\'s how much money you\'re making, and if you\'re not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we\'d been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you\'re doing fine. You\'re growing 7x a year. Just don\'t hire too many more people and you\'ll soon be profitable, and then you\'ll control your own destiny.\n\nAlas I hired lots more people, partly because our investors wanted me to, and partly because that\'s what startups did during the Internet Bubble.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed18d0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed0f40>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:21:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1420'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'85'), (b'x-ratelimit-remaining-tokens', b'39333'), (b'x-ratelimit-remaining-tokens_usage_based', b'39333'), (b'x-ratelimit-reset-requests', b'13h46m47.804s'), (b'x-ratelimit-reset-tokens', b'1s'), (b'x-ratelimit-reset-tokens_usage_based', b'1s'), (b'x-request-id', b'39df8aaf5b9bacae49df37564dd16357'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830352843bc10988-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(software, could use, make stores)
(images, were, small)
(users, wanted, stores)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('software', 'could use', 'make stores'), ('images', 'were', 'small'), ('users', 'wanted', 'stores')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4669.3044926, ttl=10, perf_time=4685.4805979 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4685.7179021, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4685.7179021, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`COULD_USE`]->(n2)\n        ' {'subj': 'software', 'obj': 'make stores'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 96, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXW2Q', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4685.7179021, ttl=10, perf_time=4685.8858225 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4685.7179021, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WERE`]->(n2)\n        ' {'subj': 'images', 'obj': 'small'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 93, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXW+Q', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4685.7179021, ttl=10, perf_time=4686.067535 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4685.7179021, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WANTED`]->(n2)\n        ' {'subj': 'users', 'obj': 'stores'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 88, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXXGQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nOur growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that's how much money you're making, and if you're not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we'd been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you're doing fine. You're growing 7x a year. Just don't hire too many more people and you'll soon be profitable, and then you'll control your own destiny.\n\nAlas I hired lots more people, partly because our investors wanted me to, and partly because that's what startups did during the Internet Bubble. A company with just a handful of employees would have seemed amateurish. So we didn't reach breakeven until about when Yahoo bought us in the summer of 1998. Which in turn meant we were at the mercy of investors for the entire life of the company. And since both we and our investors were noobs at startups, the result was a mess even by startup standards.\n\nIt was a huge relief when Yahoo bought us. In principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:27 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'84'), (b'x-ratelimit-remaining-tokens', b'39360'), (b'x-ratelimit-remaining-tokens_usage_based', b'39360'), (b'x-ratelimit-reset-requests', b'13h53m57.282s'), (b'x-ratelimit-reset-tokens', b'960ms'), (b'x-ratelimit-reset-tokens_usage_based', b'960ms'), (b'x-request-id', b'd9ef260c354d90e3d602069262d78dd6'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035293edb60988-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.942129 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nOur growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that's how much money you're making, and if you're not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we'd been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you're doing fine. You're growing 7x a year. Just don't hire too many more people and you'll soon be profitable, and then you'll control your own destiny.\n\nAlas I hired lots more people, partly because our investors wanted me to, and partly because that's what startups did during the Internet Bubble. A company with just a handful of employees would have seemed amateurish. So we didn't reach breakeven until about when Yahoo bought us in the summer of 1998. Which in turn meant we were at the mercy of investors for the entire life of the company. And since both we and our investors were noobs at startups, the result was a mess even by startup standards.\n\nIt was a huge relief when Yahoo bought us. In principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:28 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'83'), (b'x-ratelimit-remaining-tokens', b'39360'), (b'x-ratelimit-remaining-tokens_usage_based', b'39360'), (b'x-ratelimit-reset-requests', b'14h1m8.083s'), (b'x-ratelimit-reset-tokens', b'960ms'), (b'x-ratelimit-reset-tokens_usage_based', b'960ms'), (b'x-request-id', b'80142183a6d55121868f5f5e6e76946a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303529b9abe0988-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.803758 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nOur growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that's how much money you're making, and if you're not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we'd been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you're doing fine. You're growing 7x a year. Just don't hire too many more people and you'll soon be profitable, and then you'll control your own destiny.\n\nAlas I hired lots more people, partly because our investors wanted me to, and partly because that's what startups did during the Internet Bubble. A company with just a handful of employees would have seemed amateurish. So we didn't reach breakeven until about when Yahoo bought us in the summer of 1998. Which in turn meant we were at the mercy of investors for the entire life of the company. And since both we and our investors were noobs at startups, the result was a mess even by startup standards.\n\nIt was a huge relief when Yahoo bought us. In principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:30 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'82'), (b'x-ratelimit-remaining-tokens', b'39360'), (b'x-ratelimit-remaining-tokens_usage_based', b'39360'), (b'x-ratelimit-reset-requests', b'14h8m18.016s'), (b'x-ratelimit-reset-tokens', b'960ms'), (b'x-ratelimit-reset-tokens_usage_based', b'960ms'), (b'x-request-id', b'04224a64f753d175c00e0e960f2e1a80'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830352a8791a0988-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.476165 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nOur growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that's how much money you're making, and if you're not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we'd been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you're doing fine. You're growing 7x a year. Just don't hire too many more people and you'll soon be profitable, and then you'll control your own destiny.\n\nAlas I hired lots more people, partly because our investors wanted me to, and partly because that's what startups did during the Internet Bubble. A company with just a handful of employees would have seemed amateurish. So we didn't reach breakeven until about when Yahoo bought us in the summer of 1998. Which in turn meant we were at the mercy of investors for the entire life of the company. And since both we and our investors were noobs at startups, the result was a mess even by startup standards.\n\nIt was a huge relief when Yahoo bought us. In principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:34 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'81'), (b'x-ratelimit-remaining-tokens', b'39360'), (b'x-ratelimit-remaining-tokens_usage_based', b'39360'), (b'x-ratelimit-reset-requests', b'14h15m26.282s'), (b'x-ratelimit-reset-tokens', b'960ms'), (b'x-ratelimit-reset-tokens_usage_based', b'960ms'), (b'x-request-id', b'a54ce424b54bdb8e6911a805fa08a52b'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830352bfca230988-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.915183 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nOur growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that's how much money you're making, and if you're not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we'd been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you're doing fine. You're growing 7x a year. Just don't hire too many more people and you'll soon be profitable, and then you'll control your own destiny.\n\nAlas I hired lots more people, partly because our investors wanted me to, and partly because that's what startups did during the Internet Bubble. A company with just a handful of employees would have seemed amateurish. So we didn't reach breakeven until about when Yahoo bought us in the summer of 1998. Which in turn meant we were at the mercy of investors for the entire life of the company. And since both we and our investors were noobs at startups, the result was a mess even by startup standards.\n\nIt was a huge relief when Yahoo bought us. In principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ee52d0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ee6a40>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:21:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1462'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'80'), (b'x-ratelimit-remaining-tokens', b'39360'), (b'x-ratelimit-remaining-tokens_usage_based', b'39360'), (b'x-ratelimit-reset-requests', b'14h22m30.878s'), (b'x-ratelimit-reset-tokens', b'960ms'), (b'x-ratelimit-reset-tokens_usage_based', b'960ms'), (b'x-request-id', b'f9ba12a1f27a42455efeb8aa39db3a08'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830352edfc790455-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Viaweb, was bought by, Yahoo)
(Viaweb, was profitable)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Viaweb', 'was bought by', 'Yahoo')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4685.7179021, ttl=10, perf_time=4702.4883392 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4702.7866072, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4702.7866072, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WAS_BOUGHT_BY`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': 'Yahoo'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 192, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXXOQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIn principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb. For a while after I got to California I tried to continue my usual m.o. of programming till 3 in the morning, but fatigue combined with Yahoo's prematurely aged culture and grim cube farm in Santa Clara gradually dragged me down. After a few months it felt disconcertingly like working at Interleaf.\n\nYahoo had given us a lot of options when they bought us. At the time I thought Yahoo was so overvalued that they'd never be worth anything, but to my astonishment the stock went up 5x in the next year. I hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:44 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'79'), (b'x-ratelimit-remaining-tokens', b'39365'), (b'x-ratelimit-remaining-tokens_usage_based', b'39365'), (b'x-ratelimit-reset-requests', b'14h29m40.416s'), (b'x-ratelimit-reset-tokens', b'952ms'), (b'x-ratelimit-reset-tokens_usage_based', b'952ms'), (b'x-request-id', b'80d913d77a9758968c314a0915b0183d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830352fd7f8c0455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.999451 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIn principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb. For a while after I got to California I tried to continue my usual m.o. of programming till 3 in the morning, but fatigue combined with Yahoo's prematurely aged culture and grim cube farm in Santa Clara gradually dragged me down. After a few months it felt disconcertingly like working at Interleaf.\n\nYahoo had given us a lot of options when they bought us. At the time I thought Yahoo was so overvalued that they'd never be worth anything, but to my astonishment the stock went up 5x in the next year. I hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:45 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'78'), (b'x-ratelimit-remaining-tokens', b'39365'), (b'x-ratelimit-remaining-tokens_usage_based', b'39365'), (b'x-ratelimit-reset-requests', b'14h36m51.012s'), (b'x-ratelimit-reset-tokens', b'952ms'), (b'x-ratelimit-reset-tokens_usage_based', b'952ms'), (b'x-request-id', b'50c37d18bccd4002ceff24cd1fb586a0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830353059d020455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.604766 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIn principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb. For a while after I got to California I tried to continue my usual m.o. of programming till 3 in the morning, but fatigue combined with Yahoo's prematurely aged culture and grim cube farm in Santa Clara gradually dragged me down. After a few months it felt disconcertingly like working at Interleaf.\n\nYahoo had given us a lot of options when they bought us. At the time I thought Yahoo was so overvalued that they'd never be worth anything, but to my astonishment the stock went up 5x in the next year. I hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:47 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'77'), (b'x-ratelimit-remaining-tokens', b'39365'), (b'x-ratelimit-remaining-tokens_usage_based', b'39365'), (b'x-ratelimit-reset-requests', b'14h44m1.151s'), (b'x-ratelimit-reset-tokens', b'952ms'), (b'x-ratelimit-reset-tokens_usage_based', b'952ms'), (b'x-request-id', b'd5976d8b7a4dcbace6092493053136da'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035311f8850455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.275609 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIn principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb. For a while after I got to California I tried to continue my usual m.o. of programming till 3 in the morning, but fatigue combined with Yahoo's prematurely aged culture and grim cube farm in Santa Clara gradually dragged me down. After a few months it felt disconcertingly like working at Interleaf.\n\nYahoo had given us a lot of options when they bought us. At the time I thought Yahoo was so overvalued that they'd never be worth anything, but to my astonishment the stock went up 5x in the next year. I hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:50 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'76'), (b'x-ratelimit-remaining-tokens', b'39365'), (b'x-ratelimit-remaining-tokens_usage_based', b'39365'), (b'x-ratelimit-reset-requests', b'14h51m9.608s'), (b'x-ratelimit-reset-tokens', b'952ms'), (b'x-ratelimit-reset-tokens_usage_based', b'952ms'), (b'x-request-id', b'1cd53cae7acd3dba640ae3b94c204a54'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830353281c730455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.183185 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIn principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb. For a while after I got to California I tried to continue my usual m.o. of programming till 3 in the morning, but fatigue combined with Yahoo's prematurely aged culture and grim cube farm in Santa Clara gradually dragged me down. After a few months it felt disconcertingly like working at Interleaf.\n\nYahoo had given us a lot of options when they bought us. At the time I thought Yahoo was so overvalued that they'd never be worth anything, but to my astonishment the stock went up 5x in the next year. I hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef77f0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef7850>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:21:58 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'75'), (b'x-ratelimit-remaining-tokens', b'39365'), (b'x-ratelimit-remaining-tokens_usage_based', b'39365'), (b'x-ratelimit-reset-requests', b'14h58m13.923s'), (b'x-ratelimit-reset-tokens', b'952ms'), (b'x-ratelimit-reset-tokens_usage_based', b'952ms'), (b'x-request-id', b'1f08596e19a0df3e915779ed130e49cf'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035357f89004ff-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.486375 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIn principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.\n\nThe next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb. For a while after I got to California I tried to continue my usual m.o. of programming till 3 in the morning, but fatigue combined with Yahoo's prematurely aged culture and grim cube farm in Santa Clara gradually dragged me down. After a few months it felt disconcertingly like working at Interleaf.\n\nYahoo had given us a lot of options when they bought us. At the time I thought Yahoo was so overvalued that they'd never be worth anything, but to my astonishment the stock went up 5x in the next year. I hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef8e20>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef8d90>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:22:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1887'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'74'), (b'x-ratelimit-remaining-tokens', b'39365'), (b'x-ratelimit-remaining-tokens_usage_based', b'39365'), (b'x-ratelimit-reset-requests', b'15h5m17.858s'), (b'x-ratelimit-reset-tokens', b'952ms'), (b'x-ratelimit-reset-tokens_usage_based', b'952ms'), (b'x-request-id', b'0d74ebe864f5f6c4c6f7aabaf072ff92'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303538a7f4c09a0-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Viaweb stock, was valuable, share in a business)
(Yahoo, bought, us)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Viaweb stock', 'was valuable', 'share in a business'), ('Yahoo', 'bought', 'us')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4702.7866072, ttl=10, perf_time=4728.0111379 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4728.1801792, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4728.1801792, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WAS_VALUABLE`]->(n2)\n        ' {'subj': 'Viaweb stock', 'obj': 'share in a business'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 91, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXXWQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4728.1801792, ttl=10, perf_time=4728.3204695 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4728.1801792, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`BOUGHT`]->(n2)\n        ' {'subj': 'Yahoo', 'obj': 'us'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 85, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXXeQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month. If I was leaving that kind of money on the table, it could only be to go and start some new startup, and if I did, I might take people with me. This was the height of the Internet Bubble, and Yahoo was ground zero of it. My boss was at that moment a billionaire. Leaving then to start a new startup must have seemed to him an insanely, and yet also plausibly, ambitious plan.\n\nBut I really was quitting to paint, and I started immediately. There was no time to lose. I'd already burned 4 years getting rich. Now when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That's what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.\n\nSo I tried to paint, but I just didn't seem to have any energy or ambition. Part of the problem was that I didn't know many people in California. I'd compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you'll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn't know any of them.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:09 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'73'), (b'x-ratelimit-remaining-tokens', b'39349'), (b'x-ratelimit-remaining-tokens_usage_based', b'39349'), (b'x-ratelimit-reset-requests', b'15h12m27.108s'), (b'x-ratelimit-reset-tokens', b'976ms'), (b'x-ratelimit-reset-tokens_usage_based', b'976ms'), (b'x-request-id', b'acd1d42a24151dee843f4432682e3629'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303539bac5809a0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.959812 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month. If I was leaving that kind of money on the table, it could only be to go and start some new startup, and if I did, I might take people with me. This was the height of the Internet Bubble, and Yahoo was ground zero of it. My boss was at that moment a billionaire. Leaving then to start a new startup must have seemed to him an insanely, and yet also plausibly, ambitious plan.\n\nBut I really was quitting to paint, and I started immediately. There was no time to lose. I'd already burned 4 years getting rich. Now when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That's what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.\n\nSo I tried to paint, but I just didn't seem to have any energy or ambition. Part of the problem was that I didn't know many people in California. I'd compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you'll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn't know any of them.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:10 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'72'), (b'x-ratelimit-remaining-tokens', b'39349'), (b'x-ratelimit-remaining-tokens_usage_based', b'39349'), (b'x-ratelimit-reset-requests', b'15h19m37.893s'), (b'x-ratelimit-reset-tokens', b'976ms'), (b'x-ratelimit-reset-tokens_usage_based', b'976ms'), (b'x-request-id', b'23b491746d8c698536f6a7538202ccdc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830353a3599d09a0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.587352 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month. If I was leaving that kind of money on the table, it could only be to go and start some new startup, and if I did, I might take people with me. This was the height of the Internet Bubble, and Yahoo was ground zero of it. My boss was at that moment a billionaire. Leaving then to start a new startup must have seemed to him an insanely, and yet also plausibly, ambitious plan.\n\nBut I really was quitting to paint, and I started immediately. There was no time to lose. I'd already burned 4 years getting rich. Now when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That's what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.\n\nSo I tried to paint, but I just didn't seem to have any energy or ambition. Part of the problem was that I didn't know many people in California. I'd compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you'll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn't know any of them.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:12 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'71'), (b'x-ratelimit-remaining-tokens', b'39349'), (b'x-ratelimit-remaining-tokens_usage_based', b'39349'), (b'x-ratelimit-reset-requests', b'15h26m48.077s'), (b'x-ratelimit-reset-tokens', b'976ms'), (b'x-ratelimit-reset-tokens_usage_based', b'976ms'), (b'x-request-id', b'1fe627a64816629d12d392bb2ef33c3a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830353aede2f09a0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.394722 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month. If I was leaving that kind of money on the table, it could only be to go and start some new startup, and if I did, I might take people with me. This was the height of the Internet Bubble, and Yahoo was ground zero of it. My boss was at that moment a billionaire. Leaving then to start a new startup must have seemed to him an insanely, and yet also plausibly, ambitious plan.\n\nBut I really was quitting to paint, and I started immediately. There was no time to lose. I'd already burned 4 years getting rich. Now when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That's what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.\n\nSo I tried to paint, but I just didn't seem to have any energy or ambition. Part of the problem was that I didn't know many people in California. I'd compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you'll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn't know any of them.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:16 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'70'), (b'x-ratelimit-remaining-tokens', b'39349'), (b'x-ratelimit-remaining-tokens_usage_based', b'39349'), (b'x-ratelimit-reset-requests', b'15h33m56.39s'), (b'x-ratelimit-reset-tokens', b'976ms'), (b'x-ratelimit-reset-tokens_usage_based', b'976ms'), (b'x-request-id', b'ebbb2999e383012397bbbf912b034677'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830353c5ba6009a0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.436138 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.\n\nWhen I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month. If I was leaving that kind of money on the table, it could only be to go and start some new startup, and if I did, I might take people with me. This was the height of the Internet Bubble, and Yahoo was ground zero of it. My boss was at that moment a billionaire. Leaving then to start a new startup must have seemed to him an insanely, and yet also plausibly, ambitious plan.\n\nBut I really was quitting to paint, and I started immediately. There was no time to lose. I'd already burned 4 years getting rich. Now when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That's what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.\n\nSo I tried to paint, but I just didn't seem to have any energy or ambition. Part of the problem was that I didn't know many people in California. I'd compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you'll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn't know any of them.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f0a6e0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f0a6b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:22:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1584'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'69'), (b'x-ratelimit-remaining-tokens', b'39349'), (b'x-ratelimit-remaining-tokens_usage_based', b'39349'), (b'x-ratelimit-reset-requests', b'15h41m0.296s'), (b'x-ratelimit-reset-tokens', b'976ms'), (b'x-ratelimit-reset-tokens_usage_based', b'976ms'), (b'x-request-id', b'7d02b4812ed70cda173e998a1c6c918b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830353f84cbc0ee0-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(I, had, forgotten)
(I, was doing, this)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('I', 'had', 'forgotten'), ('I', 'was doing', 'this')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4728.1801792, ttl=10, perf_time=4745.2801932 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4745.6147245, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4745.6147245, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`HAD`]->(n2)\n        ' {'subj': 'I', 'obj': 'forgotten'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 87, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXXiQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4745.6147245, ttl=10, perf_time=4745.7895388 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4745.6147245, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WAS_DOING`]->(n2)\n        ' {'subj': 'I', 'obj': 'this'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 81, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXXqQ', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nNow when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That's what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.\n\nSo I tried to paint, but I just didn't seem to have any energy or ambition. Part of the problem was that I didn't know many people in California. I'd compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you'll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn't know any of them.\n\nWhen I got back to New York I resumed my old life, except now I was rich. It was as weird as it sounds. I resumed all my old patterns, except now there were doors where there hadn't been. Now when I was tired of walking, all I had to do was raise my hand, and (unless it was raining) a taxi would stop to pick me up. Now when I walked past charming little restaurants I could go in and order lunch. It was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\n\nMeanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn't one. Huh.\n\nAround this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps?\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:27 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'68'), (b'x-ratelimit-remaining-tokens', b'39352'), (b'x-ratelimit-remaining-tokens_usage_based', b'39352'), (b'x-ratelimit-reset-requests', b'15h48m9.451s'), (b'x-ratelimit-reset-tokens', b'972ms'), (b'x-ratelimit-reset-tokens_usage_based', b'972ms'), (b'x-request-id', b'a782ed929ac594d74f8c2a22a0965c63'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303540949510ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.907325 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nNow when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That's what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.\n\nSo I tried to paint, but I just didn't seem to have any energy or ambition. Part of the problem was that I didn't know many people in California. I'd compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you'll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn't know any of them.\n\nWhen I got back to New York I resumed my old life, except now I was rich. It was as weird as it sounds. I resumed all my old patterns, except now there were doors where there hadn't been. Now when I was tired of walking, all I had to do was raise my hand, and (unless it was raining) a taxi would stop to pick me up. Now when I walked past charming little restaurants I could go in and order lunch. It was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\n\nMeanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn't one. Huh.\n\nAround this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps?\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:28 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'67'), (b'x-ratelimit-remaining-tokens', b'39352'), (b'x-ratelimit-remaining-tokens_usage_based', b'39352'), (b'x-ratelimit-reset-requests', b'15h55m20.279s'), (b'x-ratelimit-reset-tokens', b'972ms'), (b'x-ratelimit-reset-tokens_usage_based', b'972ms'), (b'x-request-id', b'9f8fda58350fa04d6cb6e0f3e4c8041f'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830354115eb20ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.905199 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nNow when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That's what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.\n\nSo I tried to paint, but I just didn't seem to have any energy or ambition. Part of the problem was that I didn't know many people in California. I'd compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you'll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn't know any of them.\n\nWhen I got back to New York I resumed my old life, except now I was rich. It was as weird as it sounds. I resumed all my old patterns, except now there were doors where there hadn't been. Now when I was tired of walking, all I had to do was raise my hand, and (unless it was raining) a taxi would stop to pick me up. Now when I walked past charming little restaurants I could go in and order lunch. It was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\n\nMeanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn't one. Huh.\n\nAround this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps?\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:30 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'66'), (b'x-ratelimit-remaining-tokens', b'39352'), (b'x-ratelimit-remaining-tokens_usage_based', b'39352'), (b'x-ratelimit-reset-requests', b'16h2m30.058s'), (b'x-ratelimit-reset-tokens', b'972ms'), (b'x-ratelimit-reset-tokens_usage_based', b'972ms'), (b'x-request-id', b'884d51659c80641ba057cb0976574911'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303541f0de90ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.303549 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nNow when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That's what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.\n\nSo I tried to paint, but I just didn't seem to have any energy or ambition. Part of the problem was that I didn't know many people in California. I'd compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you'll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn't know any of them.\n\nWhen I got back to New York I resumed my old life, except now I was rich. It was as weird as it sounds. I resumed all my old patterns, except now there were doors where there hadn't been. Now when I was tired of walking, all I had to do was raise my hand, and (unless it was raining) a taxi would stop to pick me up. Now when I walked past charming little restaurants I could go in and order lunch. It was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\n\nMeanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn't one. Huh.\n\nAround this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps?\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:34 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'65'), (b'x-ratelimit-remaining-tokens', b'39352'), (b'x-ratelimit-remaining-tokens_usage_based', b'39352'), (b'x-ratelimit-reset-requests', b'16h9m38.464s'), (b'x-ratelimit-reset-tokens', b'972ms'), (b'x-ratelimit-reset-tokens_usage_based', b'972ms'), (b'x-request-id', b'30c9c1acbb777644d82b2fdae575280a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035435ad340ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.071911 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nNow when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That's what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.\n\nSo I tried to paint, but I just didn't seem to have any energy or ambition. Part of the problem was that I didn't know many people in California. I'd compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you'll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn't know any of them.\n\nWhen I got back to New York I resumed my old life, except now I was rich. It was as weird as it sounds. I resumed all my old patterns, except now there were doors where there hadn't been. Now when I was tired of walking, all I had to do was raise my hand, and (unless it was raining) a taxi would stop to pick me up. Now when I walked past charming little restaurants I could go in and order lunch. It was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\n\nMeanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn't one. Huh.\n\nAround this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps?\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0efab90>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f081f0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:22:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1536'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'64'), (b'x-ratelimit-remaining-tokens', b'39352'), (b'x-ratelimit-remaining-tokens_usage_based', b'39352'), (b'x-ratelimit-reset-requests', b'16h16m42.593s'), (b'x-ratelimit-reset-tokens', b'972ms'), (b'x-ratelimit-reset-tokens_usage_based', b'972ms'), (b'x-request-id', b'28aee437da433dafde7f73b1cd91024b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035466fab80974-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(founders, are leaving, companies)
(Painting, started to go, better)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('founders', 'are leaving', 'companies'), ('Painting', 'started to go', 'better')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4745.6147245, ttl=10, perf_time=4762.9202461 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4763.1094455, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4763.1094455, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`ARE_LEAVING`]->(n2)\n        ' {'subj': 'founders', 'obj': 'companies'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 84, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXXyQ', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4763.1094455, ttl=10, perf_time=4763.2962345 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4763.1094455, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`STARTED_TO_GO`]->(n2)\n        ' {'subj': 'Painting', 'obj': 'better'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 79, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXX6Q', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\n\nMeanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn't one. Huh.\n\nAround this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps? Why not let people edit code on our server through the browser, and then host the resulting applications for them? [9] You could run all sorts of services on the servers that these applications could use just by making an API call: making and receiving phone calls, manipulating images, taking credit card payments, etc.\n\nI got so excited about this idea that I couldn't think about anything else. It seemed obvious that this was the future. I didn't particularly want to start another company, but it was clear that this idea would have to be embodied as one, so I decided to move to Cambridge and start it. I hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he'd made a lot of money the last time I'd lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I'd do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it's now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:44 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'63'), (b'x-ratelimit-remaining-tokens', b'39347'), (b'x-ratelimit-remaining-tokens_usage_based', b'39347'), (b'x-ratelimit-reset-requests', b'16h23m52.114s'), (b'x-ratelimit-reset-tokens', b'979ms'), (b'x-ratelimit-reset-tokens_usage_based', b'979ms'), (b'x-request-id', b'0ac35b3a5cb8b623aa3aacae5802c022'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830354766cec0974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.853695 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\n\nMeanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn't one. Huh.\n\nAround this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps? Why not let people edit code on our server through the browser, and then host the resulting applications for them? [9] You could run all sorts of services on the servers that these applications could use just by making an API call: making and receiving phone calls, manipulating images, taking credit card payments, etc.\n\nI got so excited about this idea that I couldn't think about anything else. It seemed obvious that this was the future. I didn't particularly want to start another company, but it was clear that this idea would have to be embodied as one, so I decided to move to Cambridge and start it. I hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he'd made a lot of money the last time I'd lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I'd do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it's now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:45 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'62'), (b'x-ratelimit-remaining-tokens', b'39347'), (b'x-ratelimit-remaining-tokens_usage_based', b'39347'), (b'x-ratelimit-reset-requests', b'16h31m3.005s'), (b'x-ratelimit-reset-tokens', b'979ms'), (b'x-ratelimit-reset-tokens_usage_based', b'979ms'), (b'x-request-id', b'd6290cf6e2f3b3bfa1241b097e0cc1eb'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303547d58720974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.755096 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\n\nMeanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn't one. Huh.\n\nAround this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps? Why not let people edit code on our server through the browser, and then host the resulting applications for them? [9] You could run all sorts of services on the servers that these applications could use just by making an API call: making and receiving phone calls, manipulating images, taking credit card payments, etc.\n\nI got so excited about this idea that I couldn't think about anything else. It seemed obvious that this was the future. I didn't particularly want to start another company, but it was clear that this idea would have to be embodied as one, so I decided to move to Cambridge and start it. I hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he'd made a lot of money the last time I'd lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I'd do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it's now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:47 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'61'), (b'x-ratelimit-remaining-tokens', b'39347'), (b'x-ratelimit-remaining-tokens_usage_based', b'39347'), (b'x-ratelimit-reset-requests', b'16h38m12.987s'), (b'x-ratelimit-reset-tokens', b'979ms'), (b'x-ratelimit-reset-tokens_usage_based', b'979ms'), (b'x-request-id', b'8d7433777b8ca3868c458c1ebe84cc2a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035489febd0974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.962170 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\n\nMeanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn't one. Huh.\n\nAround this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps? Why not let people edit code on our server through the browser, and then host the resulting applications for them? [9] You could run all sorts of services on the servers that these applications could use just by making an API call: making and receiving phone calls, manipulating images, taking credit card payments, etc.\n\nI got so excited about this idea that I couldn't think about anything else. It seemed obvious that this was the future. I didn't particularly want to start another company, but it was clear that this idea would have to be embodied as one, so I decided to move to Cambridge and start it. I hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he'd made a lot of money the last time I'd lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I'd do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it's now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:22:51 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'60'), (b'x-ratelimit-remaining-tokens', b'39347'), (b'x-ratelimit-remaining-tokens_usage_based', b'39347'), (b'x-ratelimit-reset-requests', b'16h45m20.645s'), (b'x-ratelimit-reset-tokens', b'979ms'), (b'x-ratelimit-reset-tokens_usage_based', b'979ms'), (b'x-request-id', b'3dfc67120175e5f8bcdbbca349b52c61'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830354a4d9750974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.119716 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\n\nMeanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn't one. Huh.\n\nAround this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps? Why not let people edit code on our server through the browser, and then host the resulting applications for them? [9] You could run all sorts of services on the servers that these applications could use just by making an API call: making and receiving phone calls, manipulating images, taking credit card payments, etc.\n\nI got so excited about this idea that I couldn't think about anything else. It seemed obvious that this was the future. I didn't particularly want to start another company, but it was clear that this idea would have to be embodied as one, so I decided to move to Cambridge and start it. I hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he'd made a lot of money the last time I'd lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I'd do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it's now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f09e10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f09ab0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:23:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'2822'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'59'), (b'x-ratelimit-remaining-tokens', b'39347'), (b'x-ratelimit-remaining-tokens_usage_based', b'39347'), (b'x-ratelimit-reset-requests', b'16h52m25.048s'), (b'x-ratelimit-reset-tokens', b'979ms'), (b'x-ratelimit-reset-tokens_usage_based', b'979ms'), (b'x-request-id', b'c91cfd26562f9c81eb8ed9fa4781c746'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830354d49b500ed4-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Philz, is, coffee shop)
(Philz, founded in, Berkeley)
(Philz, founded in, 1982)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Philz', 'is', 'coffee shop'), ('Philz', 'founded in', 'Berkeley'), ('Philz', 'founded in', '1982')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4763.1094455, ttl=10, perf_time=4781.7502145 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4782.0138621, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4782.0138621, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`IS`]->(n2)\n        ' {'subj': 'Philz', 'obj': 'coffee shop'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 132, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXX+Q', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4782.0138621, ttl=10, perf_time=4782.2937951 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4782.0138621, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': 'Berkeley'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 10, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXX+Q', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4782.0138621, ttl=10, perf_time=4782.498149 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4782.0138621, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FOUNDED_IN`]->(n2)\n        ' {'subj': 'Philz', 'obj': '1982'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 7, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXX+Q', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he\'d made a lot of money the last time I\'d lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I\'d do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it\'s now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp. But I wasn\'t so naive as to assume I could spring an overt Lisp on a general audience; we\'d hide the parentheses, like Dylan did.\n\nBy then there was a name for the kind of company Viaweb was, an "application service provider," or ASP. This name didn\'t last long before it was replaced by "software as a service," but it was current for long enough that I named this new company after it: it was going to be called Aspra.\n\nI started working on the application builder, Dan worked on network infrastructure, and the two undergrads worked on the first two services (images and phone calls). But about halfway through the summer I realized I really didn\'t want to run a company — especially not a big one, which it was looking like this would have to be. I\'d only started Viaweb because I needed the money. Now that I didn\'t need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I\'d build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn\'t even have to hide.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:03 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'58'), (b'x-ratelimit-remaining-tokens', b'39342'), (b'x-ratelimit-remaining-tokens_usage_based', b'39342'), (b'x-ratelimit-reset-requests', b'16h59m32.91s'), (b'x-ratelimit-reset-tokens', b'987ms'), (b'x-ratelimit-reset-tokens_usage_based', b'987ms'), (b'x-request-id', b'2e29796b0466cc4648f3115226561614'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830354ee6f5d0ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.850169 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he\'d made a lot of money the last time I\'d lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I\'d do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it\'s now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp. But I wasn\'t so naive as to assume I could spring an overt Lisp on a general audience; we\'d hide the parentheses, like Dylan did.\n\nBy then there was a name for the kind of company Viaweb was, an "application service provider," or ASP. This name didn\'t last long before it was replaced by "software as a service," but it was current for long enough that I named this new company after it: it was going to be called Aspra.\n\nI started working on the application builder, Dan worked on network infrastructure, and the two undergrads worked on the first two services (images and phone calls). But about halfway through the summer I realized I really didn\'t want to run a company — especially not a big one, which it was looking like this would have to be. I\'d only started Viaweb because I needed the money. Now that I didn\'t need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I\'d build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn\'t even have to hide.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:04 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'57'), (b'x-ratelimit-remaining-tokens', b'39342'), (b'x-ratelimit-remaining-tokens_usage_based', b'39342'), (b'x-ratelimit-reset-requests', b'17h6m43.668s'), (b'x-ratelimit-reset-tokens', b'987ms'), (b'x-ratelimit-reset-tokens_usage_based', b'987ms'), (b'x-request-id', b'07a19a8cf18a22612b01948a3fa01097'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830354f62ec90ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.532526 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he\'d made a lot of money the last time I\'d lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I\'d do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it\'s now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp. But I wasn\'t so naive as to assume I could spring an overt Lisp on a general audience; we\'d hide the parentheses, like Dylan did.\n\nBy then there was a name for the kind of company Viaweb was, an "application service provider," or ASP. This name didn\'t last long before it was replaced by "software as a service," but it was current for long enough that I named this new company after it: it was going to be called Aspra.\n\nI started working on the application builder, Dan worked on network infrastructure, and the two undergrads worked on the first two services (images and phone calls). But about halfway through the summer I realized I really didn\'t want to run a company — especially not a big one, which it was looking like this would have to be. I\'d only started Viaweb because I needed the money. Now that I didn\'t need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I\'d build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn\'t even have to hide.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:06 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'56'), (b'x-ratelimit-remaining-tokens', b'39342'), (b'x-ratelimit-remaining-tokens_usage_based', b'39342'), (b'x-ratelimit-reset-requests', b'17h13m53.838s'), (b'x-ratelimit-reset-tokens', b'987ms'), (b'x-ratelimit-reset-tokens_usage_based', b'987ms'), (b'x-request-id', b'f19d8bd3586a1d1aa95cfce150ba9cca'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035501acf00ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.255422 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he\'d made a lot of money the last time I\'d lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I\'d do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it\'s now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp. But I wasn\'t so naive as to assume I could spring an overt Lisp on a general audience; we\'d hide the parentheses, like Dylan did.\n\nBy then there was a name for the kind of company Viaweb was, an "application service provider," or ASP. This name didn\'t last long before it was replaced by "software as a service," but it was current for long enough that I named this new company after it: it was going to be called Aspra.\n\nI started working on the application builder, Dan worked on network infrastructure, and the two undergrads worked on the first two services (images and phone calls). But about halfway through the summer I realized I really didn\'t want to run a company — especially not a big one, which it was looking like this would have to be. I\'d only started Viaweb because I needed the money. Now that I didn\'t need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I\'d build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn\'t even have to hide.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:10 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'55'), (b'x-ratelimit-remaining-tokens', b'39342'), (b'x-ratelimit-remaining-tokens_usage_based', b'39342'), (b'x-ratelimit-reset-requests', b'17h21m2.313s'), (b'x-ratelimit-reset-tokens', b'987ms'), (b'x-ratelimit-reset-tokens_usage_based', b'987ms'), (b'x-request-id', b'8d66ca6520a79bbb6ac663cf90bba2fb'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035517aa120ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.621726 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he\'d made a lot of money the last time I\'d lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I\'d do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it\'s now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp. But I wasn\'t so naive as to assume I could spring an overt Lisp on a general audience; we\'d hide the parentheses, like Dylan did.\n\nBy then there was a name for the kind of company Viaweb was, an "application service provider," or ASP. This name didn\'t last long before it was replaced by "software as a service," but it was current for long enough that I named this new company after it: it was going to be called Aspra.\n\nI started working on the application builder, Dan worked on network infrastructure, and the two undergrads worked on the first two services (images and phone calls). But about halfway through the summer I realized I really didn\'t want to run a company — especially not a big one, which it was looking like this would have to be. I\'d only started Viaweb because I needed the money. Now that I didn\'t need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I\'d build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn\'t even have to hide.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0efbfd0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0efbcd0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'54'), (b'x-ratelimit-remaining-tokens', b'39342'), (b'x-ratelimit-remaining-tokens_usage_based', b'39342'), (b'x-ratelimit-reset-requests', b'17h28m7.207s'), (b'x-ratelimit-reset-tokens', b'987ms'), (b'x-ratelimit-reset-tokens_usage_based', b'987ms'), (b'x-request-id', b'1e98224f59706647533b3bc6c7b8c70d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830355441e390ec8-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.062622 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he\'d made a lot of money the last time I\'d lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\n\nHmph. Well, I\'d do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it\'s now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp. But I wasn\'t so naive as to assume I could spring an overt Lisp on a general audience; we\'d hide the parentheses, like Dylan did.\n\nBy then there was a name for the kind of company Viaweb was, an "application service provider," or ASP. This name didn\'t last long before it was replaced by "software as a service," but it was current for long enough that I named this new company after it: it was going to be called Aspra.\n\nI started working on the application builder, Dan worked on network infrastructure, and the two undergrads worked on the first two services (images and phone calls). But about halfway through the summer I realized I really didn\'t want to run a company — especially not a big one, which it was looking like this would have to be. I\'d only started Viaweb because I needed the money. Now that I didn\'t need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I\'d build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn\'t even have to hide.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0efb7c0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef98a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:23:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'2604'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'53'), (b'x-ratelimit-remaining-tokens', b'39342'), (b'x-ratelimit-remaining-tokens_usage_based', b'39342'), (b'x-ratelimit-reset-requests', b'17h35m12.662s'), (b'x-ratelimit-reset-tokens', b'987ms'), (b'x-ratelimit-reset-tokens_usage_based', b'987ms'), (b'x-request-id', b'0dbc74cc72db957379f4d8afed22b40a'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303556cea335df0-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Viaweb, was, an "application service provider")
(Viaweb, was replaced by, "software as a service")
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Viaweb', 'was', 'an "application service provider"'), ('Viaweb', 'was replaced by', '"software as a service"')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4782.0138621, ttl=10, perf_time=4805.9204734 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4806.2135467, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4806.2135467, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WAS`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': 'an "application service provider"'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 88, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAgJA=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4806.2135467, ttl=10, perf_time=4806.3625697 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4806.2135467, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WAS_REPLACED_BY`]->(n2)\n        ' {'subj': 'Viaweb', 'obj': '"software as a service"'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 83, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAgpA=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut about halfway through the summer I realized I really didn't want to run a company — especially not a big one, which it was looking like this would have to be. I'd only started Viaweb because I needed the money. Now that I didn't need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I'd build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn't even have to hide. A lot of Lisp hackers dream of building a new Lisp, partly because one of the distinctive features of the language is that it has dialects, and partly, I think, because we have in our minds a Platonic form of Lisp that all existing dialects fall short of. I certainly did. So at the end of the summer Dan and I switched to working on this new dialect of Lisp, which I called Arc, in a house I bought in Cambridge.\n\nThe following spring, lightning struck. I was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\n\nWow, I thought, there's an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:27 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'52'), (b'x-ratelimit-remaining-tokens', b'39344'), (b'x-ratelimit-remaining-tokens_usage_based', b'39344'), (b'x-ratelimit-reset-requests', b'17h42m21.037s'), (b'x-ratelimit-reset-tokens', b'984ms'), (b'x-ratelimit-reset-tokens_usage_based', b'984ms'), (b'x-request-id', b'1f26cebc1b11486c05abf298ccc0a4df'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830355839c6d5df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.750631 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut about halfway through the summer I realized I really didn't want to run a company — especially not a big one, which it was looking like this would have to be. I'd only started Viaweb because I needed the money. Now that I didn't need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I'd build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn't even have to hide. A lot of Lisp hackers dream of building a new Lisp, partly because one of the distinctive features of the language is that it has dialects, and partly, I think, because we have in our minds a Platonic form of Lisp that all existing dialects fall short of. I certainly did. So at the end of the summer Dan and I switched to working on this new dialect of Lisp, which I called Arc, in a house I bought in Cambridge.\n\nThe following spring, lightning struck. I was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\n\nWow, I thought, there's an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:28 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'51'), (b'x-ratelimit-remaining-tokens', b'39344'), (b'x-ratelimit-remaining-tokens_usage_based', b'39344'), (b'x-ratelimit-reset-requests', b'17h49m32s'), (b'x-ratelimit-reset-tokens', b'984ms'), (b'x-ratelimit-reset-tokens_usage_based', b'984ms'), (b'x-request-id', b'fb980801c0f1e941fd7d7b0af9ffc6ba'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035589ff695df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.989673 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut about halfway through the summer I realized I really didn't want to run a company — especially not a big one, which it was looking like this would have to be. I'd only started Viaweb because I needed the money. Now that I didn't need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I'd build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn't even have to hide. A lot of Lisp hackers dream of building a new Lisp, partly because one of the distinctive features of the language is that it has dialects, and partly, I think, because we have in our minds a Platonic form of Lisp that all existing dialects fall short of. I certainly did. So at the end of the summer Dan and I switched to working on this new dialect of Lisp, which I called Arc, in a house I bought in Cambridge.\n\nThe following spring, lightning struck. I was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\n\nWow, I thought, there's an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:30 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'50'), (b'x-ratelimit-remaining-tokens', b'39344'), (b'x-ratelimit-remaining-tokens_usage_based', b'39344'), (b'x-ratelimit-reset-requests', b'17h56m41.591s'), (b'x-ratelimit-reset-tokens', b'984ms'), (b'x-ratelimit-reset-tokens_usage_based', b'984ms'), (b'x-request-id', b'6e9cf76b497e6cae8abefc8c439c135c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830355987a635df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.914279 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut about halfway through the summer I realized I really didn't want to run a company — especially not a big one, which it was looking like this would have to be. I'd only started Viaweb because I needed the money. Now that I didn't need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I'd build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn't even have to hide. A lot of Lisp hackers dream of building a new Lisp, partly because one of the distinctive features of the language is that it has dialects, and partly, I think, because we have in our minds a Platonic form of Lisp that all existing dialects fall short of. I certainly did. So at the end of the summer Dan and I switched to working on this new dialect of Lisp, which I called Arc, in a house I bought in Cambridge.\n\nThe following spring, lightning struck. I was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\n\nWow, I thought, there's an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:35 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'49'), (b'x-ratelimit-remaining-tokens', b'39344'), (b'x-ratelimit-remaining-tokens_usage_based', b'39344'), (b'x-ratelimit-reset-requests', b'18h3m49.407s'), (b'x-ratelimit-reset-tokens', b'984ms'), (b'x-ratelimit-reset-tokens_usage_based', b'984ms'), (b'x-request-id', b'0167b93cf4c9819cc5204f5fd91c1bfd'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830355b33e5b5df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.651951 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nBut about halfway through the summer I realized I really didn't want to run a company — especially not a big one, which it was looking like this would have to be. I'd only started Viaweb because I needed the money. Now that I didn't need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I'd build a subset that could be done as an open source project.\n\nMuch to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.\n\nThe subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn't even have to hide. A lot of Lisp hackers dream of building a new Lisp, partly because one of the distinctive features of the language is that it has dialects, and partly, I think, because we have in our minds a Platonic form of Lisp that all existing dialects fall short of. I certainly did. So at the end of the summer Dan and I switched to working on this new dialect of Lisp, which I called Arc, in a house I bought in Cambridge.\n\nThe following spring, lightning struck. I was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\n\nWow, I thought, there's an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f0a2f0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f0ae30>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:23:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1317'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'48'), (b'x-ratelimit-remaining-tokens', b'39344'), (b'x-ratelimit-remaining-tokens_usage_based', b'39344'), (b'x-ratelimit-reset-requests', b'18h10m53.22s'), (b'x-ratelimit-reset-tokens', b'984ms'), (b'x-ratelimit-reset-tokens_usage_based', b'984ms'), (b'x-request-id', b'03b104c9ca4c93543957985f1e787d7c'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830355e67e8921f7-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Y Combinator, started, Viaweb)
(paulgraham.com, created, years before)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Y Combinator', 'started', 'Viaweb'), ('paulgraham.com', 'created', 'years before')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4806.2135467, ttl=10, perf_time=4823.9502373 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4824.1817759, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4824.1817759, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`STARTED`]->(n2)\n        ' {'subj': 'Y Combinator', 'obj': 'Viaweb'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 96, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAhJA=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4824.1817759, ttl=10, perf_time=4824.3391755 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4824.1817759, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`CREATED`]->(n2)\n        ' {'subj': 'paulgraham.com', 'obj': 'years before'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 83, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAhpA=', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\n\nWow, I thought, there's an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.\n\nThis had been possible in principle since 1993, but not many people had realized it yet. I had been intimately involved with building the infrastructure of the web for most of that time, and a writer as well, and it had taken me 8 years to realize it. Even then it took me several years to understand the implications. It meant there would be a whole new generation of essays. [11]\n\nIn the print era, the channel for publishing essays had been vanishingly small. Except for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:45 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'47'), (b'x-ratelimit-remaining-tokens', b'39327'), (b'x-ratelimit-remaining-tokens_usage_based', b'39327'), (b'x-ratelimit-reset-requests', b'18h18m3.069s'), (b'x-ratelimit-reset-tokens', b'1.009s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.009s'), (b'x-request-id', b'dd20b6264111075e9d330b638711a26e'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830355f3e85721f7-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.964457 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\n\nWow, I thought, there's an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.\n\nThis had been possible in principle since 1993, but not many people had realized it yet. I had been intimately involved with building the infrastructure of the web for most of that time, and a writer as well, and it had taken me 8 years to realize it. Even then it took me several years to understand the implications. It meant there would be a whole new generation of essays. [11]\n\nIn the print era, the channel for publishing essays had been vanishingly small. Except for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:46 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'46'), (b'x-ratelimit-remaining-tokens', b'39327'), (b'x-ratelimit-remaining-tokens_usage_based', b'39327'), (b'x-ratelimit-reset-requests', b'18h25m13.832s'), (b'x-ratelimit-reset-tokens', b'1.009s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.009s'), (b'x-request-id', b'f338e82d71e45e9313c8bff345bdd46d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830355fbba3821f7-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.838761 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\n\nWow, I thought, there's an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.\n\nThis had been possible in principle since 1993, but not many people had realized it yet. I had been intimately involved with building the infrastructure of the web for most of that time, and a writer as well, and it had taken me 8 years to realize it. Even then it took me several years to understand the implications. It meant there would be a whole new generation of essays. [11]\n\nIn the print era, the channel for publishing essays had been vanishingly small. Except for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:48 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'45'), (b'x-ratelimit-remaining-tokens', b'39327'), (b'x-ratelimit-remaining-tokens_usage_based', b'39327'), (b'x-ratelimit-reset-requests', b'18h32m23.685s'), (b'x-ratelimit-reset-tokens', b'1.009s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.009s'), (b'x-request-id', b'cdcab4fe80f1e5bbf3f3fb4937eb40ff'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830356091c2b21f7-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.651708 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\n\nWow, I thought, there's an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.\n\nThis had been possible in principle since 1993, but not many people had realized it yet. I had been intimately involved with building the infrastructure of the web for most of that time, and a writer as well, and it had taken me 8 years to realize it. Even then it took me several years to understand the implications. It meant there would be a whole new generation of essays. [11]\n\nIn the print era, the channel for publishing essays had been vanishingly small. Except for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:23:52 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'44'), (b'x-ratelimit-remaining-tokens', b'39327'), (b'x-ratelimit-remaining-tokens_usage_based', b'39327'), (b'x-ratelimit-reset-requests', b'18h39m31.777s'), (b'x-ratelimit-reset-tokens', b'1.009s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.009s'), (b'x-request-id', b'a52f6882b961448ba53f84dad7fbf4b9'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830356218d1621f7-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.984031 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nI was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\n\nWow, I thought, there's an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.\n\nThis had been possible in principle since 1993, but not many people had realized it yet. I had been intimately involved with building the infrastructure of the web for most of that time, and a writer as well, and it had taken me 8 years to realize it. Even then it took me several years to understand the implications. It meant there would be a whole new generation of essays. [11]\n\nIn the print era, the channel for publishing essays had been vanishingly small. Except for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f09ea0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f0af50>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:24:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1363'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'43'), (b'x-ratelimit-remaining-tokens', b'39327'), (b'x-ratelimit-remaining-tokens_usage_based', b'39327'), (b'x-ratelimit-reset-requests', b'18h46m35.097s'), (b'x-ratelimit-reset-tokens', b'1.009s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.009s'), (b'x-request-id', b'8182b9e8251f0690fd40207bd0b64d08'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035657bcb8e65a-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(I, was invited to, give a talk at a Lisp conference)
(I, started publishing, essays online)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('I', 'was invited to', 'give a talk at a Lisp conference'), ('I', 'started publishing', 'essays online')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4824.1817759, ttl=10, perf_time=4842.1639615 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4842.3540887, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4842.3540887, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WAS_INVITED_TO`]->(n2)\n        ' {'subj': 'I', 'obj': 'give a talk at a Lisp conference'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 80, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAiJA=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4842.3540887, ttl=10, perf_time=4842.4974152 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4842.3540887, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`STARTED_PUBLISHING`]->(n2)\n        ' {'subj': 'I', 'obj': 'essays online'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 112, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAipA=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nExcept for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\n\nOne of the most conspicuous patterns I've noticed in my life is how well it has worked, for me at least, to work on things that weren't prestigious. Still life has always been the least prestigious form of painting. Viaweb and Y Combinator both seemed lame when we started them. I still get the glassy eye from strangers when they ask what I'm writing, and I explain that it's an essay I'm going to publish on my web site. Even Lisp, though prestigious intellectually in something like the way Latin is, also seems about as hip.\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:03 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'42'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'18h53m44.896s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'915c42165af84a2096847068360d7e92'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830356659874e65a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.926537 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nExcept for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\n\nOne of the most conspicuous patterns I've noticed in my life is how well it has worked, for me at least, to work on things that weren't prestigious. Still life has always been the least prestigious form of painting. Viaweb and Y Combinator both seemed lame when we started them. I still get the glassy eye from strangers when they ask what I'm writing, and I explain that it's an essay I'm going to publish on my web site. Even Lisp, though prestigious intellectually in something like the way Latin is, also seems about as hip.\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:04 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'41'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'19h0m55.68s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'3cfeb4e8865e0724443f8035bb6b16fd'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303566d1b5ce65a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.560311 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nExcept for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\n\nOne of the most conspicuous patterns I've noticed in my life is how well it has worked, for me at least, to work on things that weren't prestigious. Still life has always been the least prestigious form of painting. Viaweb and Y Combinator both seemed lame when we started them. I still get the glassy eye from strangers when they ask what I'm writing, and I explain that it's an essay I'm going to publish on my web site. Even Lisp, though prestigious intellectually in something like the way Latin is, also seems about as hip.\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:06 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'40'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'19h8m5.865s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'926aeeac60fee45f25b096d0a8872f73'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830356787c11e65a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.523856 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nExcept for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\n\nOne of the most conspicuous patterns I've noticed in my life is how well it has worked, for me at least, to work on things that weren't prestigious. Still life has always been the least prestigious form of painting. Viaweb and Y Combinator both seemed lame when we started them. I still get the glassy eye from strangers when they ask what I'm writing, and I explain that it's an essay I'm going to publish on my web site. Even Lisp, though prestigious intellectually in something like the way Latin is, also seems about as hip.\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:10 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'39'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'19h15m14.011s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'f1612747ad465e044c6f1e1006271067'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830356906d0be65a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.721803 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nExcept for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\n\nOne of the most conspicuous patterns I've noticed in my life is how well it has worked, for me at least, to work on things that weren't prestigious. Still life has always been the least prestigious form of painting. Viaweb and Y Combinator both seemed lame when we started them. I still get the glassy eye from strangers when they ask what I'm writing, and I explain that it's an essay I'm going to publish on my web site. Even Lisp, though prestigious intellectually in something like the way Latin is, also seems about as hip.\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f1e200>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f1ef80>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'38'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'19h22m18.781s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'f07b11ce0ecabde224358e21fc88f069'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830356bd8cab8b6f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.962795 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nExcept for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]\n\nI've worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I'd always write essays too.\n\nI knew that online essays would be a marginal medium at first. Socially they'd seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.\n\nOne of the most conspicuous patterns I've noticed in my life is how well it has worked, for me at least, to work on things that weren't prestigious. Still life has always been the least prestigious form of painting. Viaweb and Y Combinator both seemed lame when we started them. I still get the glassy eye from strangers when they ask what I'm writing, and I explain that it's an essay I'm going to publish on my web site. Even Lisp, though prestigious intellectually in something like the way Latin is, also seems about as hip.\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f1f910>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f1fac0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:24:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1277'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'37'), (b'x-ratelimit-remaining-tokens', b'39305'), (b'x-ratelimit-remaining-tokens_usage_based', b'39305'), (b'x-ratelimit-reset-requests', b'19h29m22.327s'), (b'x-ratelimit-reset-tokens', b'1.042s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.042s'), (b'x-request-id', b'bb75c0dd99baeab04093175a76bb71bf'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830356f28b2b04f1-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(essays, were written by, specialists)
(essays, could be published, now)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('essays', 'were written by', 'specialists'), ('essays', 'could be published', 'now')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4842.3540887, ttl=10, perf_time=4866.8149271 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4866.9892492, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4866.9892492, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WERE_WRITTEN_BY`]->(n2)\n        ' {'subj': 'essays', 'obj': 'specialists'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 78, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAjJA=', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4866.9892492, ttl=10, perf_time=4867.1136981 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4866.9892492, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`COULD_BE_PUBLISHED`]->(n2)\n        ' {'subj': 'essays', 'obj': 'now'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 90, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAjpA=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting. I used to have dinners for a group of friends every thursday night, which taught me how to cook for groups. And I bought another building in Cambridge, a former candy factory (and later, twas said, porn studio), to use as an office.\n\nOne night in October 2003 there was a big party at my house. It was a clever idea of my friend Maria Daniels, who was one of the thursday diners. Three separate hosts would all invite their friends to one party. So for every guest, two thirds of the other guests would be people they didn't know but would probably like. One of the guests was someone I didn't know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.\n\nJessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.\n\nWhen the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:28 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'36'), (b'x-ratelimit-remaining-tokens', b'39318'), (b'x-ratelimit-remaining-tokens_usage_based', b'39318'), (b'x-ratelimit-reset-requests', b'19h36m32.31s'), (b'x-ratelimit-reset-tokens', b'1.023s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.023s'), (b'x-request-id', b'd6cce0fb8445918101c29cb13cf8c3b8'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830356ff28e204f1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.840999 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting. I used to have dinners for a group of friends every thursday night, which taught me how to cook for groups. And I bought another building in Cambridge, a former candy factory (and later, twas said, porn studio), to use as an office.\n\nOne night in October 2003 there was a big party at my house. It was a clever idea of my friend Maria Daniels, who was one of the thursday diners. Three separate hosts would all invite their friends to one party. So for every guest, two thirds of the other guests would be people they didn't know but would probably like. One of the guests was someone I didn't know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.\n\nJessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.\n\nWhen the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:29 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'35'), (b'x-ratelimit-remaining-tokens', b'39318'), (b'x-ratelimit-remaining-tokens_usage_based', b'39318'), (b'x-ratelimit-reset-requests', b'19h43m43.239s'), (b'x-ratelimit-reset-tokens', b'1.023s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.023s'), (b'x-request-id', b'37f43452d68c025dc574185f31f34888'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035705fc8c04f1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.689349 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting. I used to have dinners for a group of friends every thursday night, which taught me how to cook for groups. And I bought another building in Cambridge, a former candy factory (and later, twas said, porn studio), to use as an office.\n\nOne night in October 2003 there was a big party at my house. It was a clever idea of my friend Maria Daniels, who was one of the thursday diners. Three separate hosts would all invite their friends to one party. So for every guest, two thirds of the other guests would be people they didn't know but would probably like. One of the guests was someone I didn't know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.\n\nJessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.\n\nWhen the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:31 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'34'), (b'x-ratelimit-remaining-tokens', b'39318'), (b'x-ratelimit-remaining-tokens_usage_based', b'39318'), (b'x-ratelimit-reset-requests', b'19h50m53.285s'), (b'x-ratelimit-reset-tokens', b'1.023s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.023s'), (b'x-request-id', b'ba33a29cb14bb5479ad4b7d644336105'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303571218d504f1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.990631 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting. I used to have dinners for a group of friends every thursday night, which taught me how to cook for groups. And I bought another building in Cambridge, a former candy factory (and later, twas said, porn studio), to use as an office.\n\nOne night in October 2003 there was a big party at my house. It was a clever idea of my friend Maria Daniels, who was one of the thursday diners. Three separate hosts would all invite their friends to one party. So for every guest, two thirds of the other guests would be people they didn't know but would probably like. One of the guests was someone I didn't know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.\n\nJessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.\n\nWhen the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:35 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'33'), (b'x-ratelimit-remaining-tokens', b'39318'), (b'x-ratelimit-remaining-tokens_usage_based', b'39318'), (b'x-ratelimit-reset-requests', b'19h58m1.009s'), (b'x-ratelimit-reset-tokens', b'1.023s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.023s'), (b'x-request-id', b'933fb05e3dcbdc3ab75b4ef2f06c5a8d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303572ca8b004f1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.406713 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nIt's not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it's a sign both that there's something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren't prestigious doesn't guarantee you're on the right track, it at least guarantees you're not on the most common type of wrong one.\n\nOver the next several years I wrote lots of essays about all kinds of different topics. O'Reilly reprinted a collection of them as a book, called Hackers & Painters after one of the essays in it. I also worked on spam filters, and did some more painting. I used to have dinners for a group of friends every thursday night, which taught me how to cook for groups. And I bought another building in Cambridge, a former candy factory (and later, twas said, porn studio), to use as an office.\n\nOne night in October 2003 there was a big party at my house. It was a clever idea of my friend Maria Daniels, who was one of the thursday diners. Three separate hosts would all invite their friends to one party. So for every guest, two thirds of the other guests would be people they didn't know but would probably like. One of the guests was someone I didn't know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.\n\nJessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.\n\nWhen the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2be80>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2be50>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:24:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1600'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'32'), (b'x-ratelimit-remaining-tokens', b'39318'), (b'x-ratelimit-remaining-tokens_usage_based', b'39318'), (b'x-ratelimit-reset-requests', b'20h5m6.111s'), (b'x-ratelimit-reset-tokens', b'1.023s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.023s'), (b'x-request-id', b'c8e580fe0aa4d41baa1ac7e0768d0219'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035757fbfde69a-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Jessica Livingston, compiled, book of interviews)
(Jessica Livingston, interviewed for, marketing job)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Jessica Livingston', 'compiled', 'book of interviews'), ('Jessica Livingston', 'interviewed for', 'marketing job')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4866.9892492, ttl=10, perf_time=4883.4621408 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4883.6285616, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4883.6285616, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`COMPILED`]->(n2)\n        ' {'subj': 'Jessica Livingston', 'obj': 'book of interviews'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 79, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAkJA=', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4883.6285616, ttl=10, perf_time=4883.7556938 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4883.6285616, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`INTERVIEWED_FOR`]->(n2)\n        ' {'subj': 'Jessica Livingston', 'obj': 'marketing job'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 81, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAkpA=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nSo for every guest, two thirds of the other guests would be people they didn\'t know but would probably like. One of the guests was someone I didn\'t know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.\n\nJessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.\n\nWhen the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital. They should make a larger number of smaller investments instead of a handful of giant ones, they should be funding younger, more technical founders instead of MBAs, they should let the founders remain as CEO, and so on.\n\nOne of my tricks for writing essays had always been to give talks. The prospect of having to stand up in front of a group of people and tell them something that won\'t waste their time is a great spur to the imagination. When the Harvard Computer Society, the undergrad computer club, asked me to give a talk, I decided I would tell them how to start a startup. Maybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:44 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'31'), (b'x-ratelimit-remaining-tokens', b'39299'), (b'x-ratelimit-remaining-tokens_usage_based', b'39299'), (b'x-ratelimit-reset-requests', b'20h12m15.683s'), (b'x-ratelimit-reset-tokens', b'1.051s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.051s'), (b'x-request-id', b'bbdd1b66efe035d14a5e5290e2556235'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830357671e4ce69a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.973306 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nSo for every guest, two thirds of the other guests would be people they didn\'t know but would probably like. One of the guests was someone I didn\'t know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.\n\nJessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.\n\nWhen the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital. They should make a larger number of smaller investments instead of a handful of giant ones, they should be funding younger, more technical founders instead of MBAs, they should let the founders remain as CEO, and so on.\n\nOne of my tricks for writing essays had always been to give talks. The prospect of having to stand up in front of a group of people and tell them something that won\'t waste their time is a great spur to the imagination. When the Harvard Computer Society, the undergrad computer club, asked me to give a talk, I decided I would tell them how to start a startup. Maybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:46 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'30'), (b'x-ratelimit-remaining-tokens', b'39299'), (b'x-ratelimit-remaining-tokens_usage_based', b'39299'), (b'x-ratelimit-reset-requests', b'20h19m26.45s'), (b'x-ratelimit-reset-tokens', b'1.051s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.051s'), (b'x-request-id', b'348feecda50417255afbc384c78b66c3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303576edaa3e69a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.617082 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nSo for every guest, two thirds of the other guests would be people they didn\'t know but would probably like. One of the guests was someone I didn\'t know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.\n\nJessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.\n\nWhen the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital. They should make a larger number of smaller investments instead of a handful of giant ones, they should be funding younger, more technical founders instead of MBAs, they should let the founders remain as CEO, and so on.\n\nOne of my tricks for writing essays had always been to give talks. The prospect of having to stand up in front of a group of people and tell them something that won\'t waste their time is a great spur to the imagination. When the Harvard Computer Society, the undergrad computer club, asked me to give a talk, I decided I would tell them how to start a startup. Maybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:47 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'29'), (b'x-ratelimit-remaining-tokens', b'39299'), (b'x-ratelimit-remaining-tokens_usage_based', b'39299'), (b'x-ratelimit-reset-requests', b'20h26m36.566s'), (b'x-ratelimit-reset-tokens', b'1.051s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.051s'), (b'x-request-id', b'5eea26fd80f2fd1f0e3d4f654a0d846f'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303577a8d6ce69a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.537094 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nSo for every guest, two thirds of the other guests would be people they didn\'t know but would probably like. One of the guests was someone I didn\'t know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.\n\nJessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.\n\nWhen the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital. They should make a larger number of smaller investments instead of a handful of giant ones, they should be funding younger, more technical founders instead of MBAs, they should let the founders remain as CEO, and so on.\n\nOne of my tricks for writing essays had always been to give talks. The prospect of having to stand up in front of a group of people and tell them something that won\'t waste their time is a great spur to the imagination. When the Harvard Computer Society, the undergrad computer club, asked me to give a talk, I decided I would tell them how to start a startup. Maybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:24:51 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'28'), (b'x-ratelimit-remaining-tokens', b'39299'), (b'x-ratelimit-remaining-tokens_usage_based', b'39299'), (b'x-ratelimit-reset-requests', b'20h33m44.763s'), (b'x-ratelimit-reset-tokens', b'1.051s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.051s'), (b'x-request-id', b'e3657aa6ee413c4217973167fbdf1d2e'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830357924b46e69a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.596706 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nSo for every guest, two thirds of the other guests would be people they didn\'t know but would probably like. One of the guests was someone I didn\'t know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.\n\nJessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.\n\nWhen the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital. They should make a larger number of smaller investments instead of a handful of giant ones, they should be funding younger, more technical founders instead of MBAs, they should let the founders remain as CEO, and so on.\n\nOne of my tricks for writing essays had always been to give talks. The prospect of having to stand up in front of a group of people and tell them something that won\'t waste their time is a great spur to the imagination. When the Harvard Computer Society, the undergrad computer club, asked me to give a talk, I decided I would tell them how to start a startup. Maybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f17820>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f17640>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:25:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1236'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'27'), (b'x-ratelimit-remaining-tokens', b'39299'), (b'x-ratelimit-remaining-tokens_usage_based', b'39299'), (b'x-ratelimit-reset-requests', b'20h40m48.675s'), (b'x-ratelimit-reset-tokens', b'1.051s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.051s'), (b'x-request-id', b'683f422e801e06168a67dfb975dc70f8'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830357c4eab6045b-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Jessica Livingston, compiled, book of interviews)
(Jessica Livingston, interviewed for, marketing job)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Jessica Livingston', 'compiled', 'book of interviews'), ('Jessica Livingston', 'interviewed for', 'marketing job')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4883.6285616, ttl=10, perf_time=4900.4306679 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4900.6083899, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4900.6083899, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`COMPILED`]->(n2)\n        ' {'subj': 'Jessica Livingston', 'obj': 'book of interviews'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 95, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAkpA=', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4900.6083899, ttl=10, perf_time=4900.7545847 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4900.6083899, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`INTERVIEWED_FOR`]->(n2)\n        ' {'subj': 'Jessica Livingston', 'obj': 'marketing job'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 79, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAkpA=', 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nMaybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together. I missed working with them, and it seemed like there had to be something we could collaborate on.\n\nAs Jessica and I were walking home from dinner on March 11, at the corner of Garden and Walker streets, these three threads converged. Screw the VCs who were taking so long to make up their minds. We\'d start our own investment firm and actually implement the ideas we\'d been talking about. I\'d fund it, and Jessica could quit her job and work for it, and we\'d get Robert and Trevor as partners too. [13]\n\nOnce again, ignorance worked in our favor. We had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:01 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'26'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'20h47m58.662s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'f4f25ca675b3f11f68ba3bf4cc8ef549'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830357d15884045b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.973638 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nMaybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together. I missed working with them, and it seemed like there had to be something we could collaborate on.\n\nAs Jessica and I were walking home from dinner on March 11, at the corner of Garden and Walker streets, these three threads converged. Screw the VCs who were taking so long to make up their minds. We\'d start our own investment firm and actually implement the ideas we\'d been talking about. I\'d fund it, and Jessica could quit her job and work for it, and we\'d get Robert and Trevor as partners too. [13]\n\nOnce again, ignorance worked in our favor. We had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:03 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'25'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'20h55m9.422s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'3e43eb77c8db2660c2fedeb27bcfed7c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830357d92d7c045b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.889792 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nMaybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together. I missed working with them, and it seemed like there had to be something we could collaborate on.\n\nAs Jessica and I were walking home from dinner on March 11, at the corner of Garden and Walker streets, these three threads converged. Screw the VCs who were taking so long to make up their minds. We\'d start our own investment firm and actually implement the ideas we\'d been talking about. I\'d fund it, and Jessica could quit her job and work for it, and we\'d get Robert and Trevor as partners too. [13]\n\nOnce again, ignorance worked in our favor. We had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'24'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'21h2m18.928s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'00ab85c30c473a401fb32c0ec90737bb'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830357e69a0a045b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.400935 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nMaybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together. I missed working with them, and it seemed like there had to be something we could collaborate on.\n\nAs Jessica and I were walking home from dinner on March 11, at the corner of Garden and Walker streets, these three threads converged. Screw the VCs who were taking so long to make up their minds. We\'d start our own investment firm and actually implement the ideas we\'d been talking about. I\'d fund it, and Jessica could quit her job and work for it, and we\'d get Robert and Trevor as partners too. [13]\n\nOnce again, ignorance worked in our favor. We had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:09 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'23'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'21h9m27.258s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'e2e9f2ac46e6d22fa88a6b1ca505db7d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830357ffad50045b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.246470 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nMaybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together. I missed working with them, and it seemed like there had to be something we could collaborate on.\n\nAs Jessica and I were walking home from dinner on March 11, at the corner of Garden and Walker streets, these three threads converged. Screw the VCs who were taking so long to make up their minds. We\'d start our own investment firm and actually implement the ideas we\'d been talking about. I\'d fund it, and Jessica could quit her job and work for it, and we\'d get Robert and Trevor as partners too. [13]\n\nOnce again, ignorance worked in our favor. We had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f29120>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f29330>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:16 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'22'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'21h16m32.253s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'95a88843a316675cb6413c20b6c81465'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303582b7f416e5e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.698614 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nMaybe they\'d be able to avoid the worst of the mistakes we\'d made.\n\nSo I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\'d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\'d only known), I blurted out "But not me!" and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\'d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\'t done one angel investment.\n\nMeanwhile I had been scheming with Robert and Trevor about projects we could work on together. I missed working with them, and it seemed like there had to be something we could collaborate on.\n\nAs Jessica and I were walking home from dinner on March 11, at the corner of Garden and Walker streets, these three threads converged. Screw the VCs who were taking so long to make up their minds. We\'d start our own investment firm and actually implement the ideas we\'d been talking about. I\'d fund it, and Jessica could quit her job and work for it, and we\'d get Robert and Trevor as partners too. [13]\n\nOnce again, ignorance worked in our favor. We had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2b6a0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2b850>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:25:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1735'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'21'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'21h23m37.067s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'9f6cd758d73821b9bd1e07d77fef655e'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830358587ad58b2f-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Y Combinator, is, angel firm)
(Y Combinator, helps, founders)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Y Combinator', 'is', 'angel firm'), ('Y Combinator', 'helps', 'founders')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4900.6083899, ttl=10, perf_time=4924.6552418 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4924.8297361, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4924.8297361, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`IS`]->(n2)\n        ' {'subj': 'Y Combinator', 'obj': 'angel firm'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 77, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAk5A=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4924.8297361, ttl=10, perf_time=4924.9555194 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4924.8297361, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`HELPS`]->(n2)\n        ' {'subj': 'Y Combinator', 'obj': 'founders'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 79, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAlZA=', 'stats': {'contains-updates': True, 'relationships-created': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been. For example, one thing Julian had done for us that seemed to us like magic was to get us set up as a company. We were fine writing fairly difficult software, but actually getting incorporated, with bylaws and stock and all that stuff, how on earth did you do that? Our plan was not only to make seed investments, but to do for startups everything Julian had done for us.\n\nYC was not organized as a fund. It was cheap enough to run that we funded it with our own money. That went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:26 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'20'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'21h30m46.481s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'c72e2ed5397c216ed7e37e30dad5cf6d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035868ae148b2f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.862395 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been. For example, one thing Julian had done for us that seemed to us like magic was to get us set up as a company. We were fine writing fairly difficult software, but actually getting incorporated, with bylaws and stock and all that stuff, how on earth did you do that? Our plan was not only to make seed investments, but to do for startups everything Julian had done for us.\n\nYC was not organized as a fund. It was cheap enough to run that we funded it with our own money. That went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:27 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'19'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'21h37m57.362s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'b368065b8b35f4e855f76ab516b94cf6'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303586f9a408b2f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.622482 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been. For example, one thing Julian had done for us that seemed to us like magic was to get us set up as a company. We were fine writing fairly difficult software, but actually getting incorporated, with bylaws and stock and all that stuff, how on earth did you do that? Our plan was not only to make seed investments, but to do for startups everything Julian had done for us.\n\nYC was not organized as a fund. It was cheap enough to run that we funded it with our own money. That went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:29 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'18'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'21h45m7.126s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'7488caf2d8115ed4878fb61ff24f582a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303587b5d348b2f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.745493 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been. For example, one thing Julian had done for us that seemed to us like magic was to get us set up as a company. We were fine writing fairly difficult software, but actually getting incorporated, with bylaws and stock and all that stuff, how on earth did you do that? Our plan was not only to make seed investments, but to do for startups everything Julian had done for us.\n\nYC was not organized as a fund. It was cheap enough to run that we funded it with our own money. That went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:33 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'17'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'21h52m15.122s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'bb57c1cab2f1f08a6f5e8d8961f67314'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830358969c678b2f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.732173 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.\n\nThere are multiple components to Y Combinator, and we didn\'t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\'t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\'d been. For example, one thing Julian had done for us that seemed to us like magic was to get us set up as a company. We were fine writing fairly difficult software, but actually getting incorporated, with bylaws and stock and all that stuff, how on earth did you do that? Our plan was not only to make seed investments, but to do for startups everything Julian had done for us.\n\nYC was not organized as a fund. It was cheap enough to run that we funded it with our own money. That went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f16800>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f16bc0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:25:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1328'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'16'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'21h59m19.828s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'fdea3377d957ef389f928807dc500669'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830358c3ced16e4b-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(Y Combinator, is organized as, an angel firm)
(Y Combinator, funds, startups)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('Y Combinator', 'is organized as', 'an angel firm'), ('Y Combinator', 'funds', 'startups')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4924.8297361, ttl=10, perf_time=4941.3885431 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4941.6695838, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4941.6695838, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`IS_ORGANIZED_AS`]->(n2)\n        ' {'subj': 'Y Combinator', 'obj': 'an angel firm'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 82, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAl5A=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4941.6695838, ttl=10, perf_time=4942.0798589 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4941.6695838, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FUNDS`]->(n2)\n        ' {'subj': 'Y Combinator', 'obj': 'startups'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 81, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAmZA=', 'stats': {'contains-updates': True, 'relationships-created': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer. Why not organize a summer program where they\'d start startups instead? We wouldn\'t feel guilty for being in a sense fake investors, because they would in a similar sense be fake founders. So while we probably wouldn\'t make much money out of it, we\'d at least get to practice being investors on them, and they for their part would probably have a more interesting summer than they would working at Microsoft.\n\nWe\'d use the building I owned in Cambridge as our headquarters. We\'d all have dinner there once a week — on tuesdays, since I was already cooking for the thursday diners on thursdays — and after dinner we\'d bring in experts on startups to give talks.\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:43 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'15'), (b'x-ratelimit-remaining-tokens', b'39313'), (b'x-ratelimit-remaining-tokens_usage_based', b'39313'), (b'x-ratelimit-reset-requests', b'22h6m29.351s'), (b'x-ratelimit-reset-tokens', b'1.03s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.03s'), (b'x-request-id', b'4da513d983240286ad67e74745e179c6'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830358d3afc06e4b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.837865 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer. Why not organize a summer program where they\'d start startups instead? We wouldn\'t feel guilty for being in a sense fake investors, because they would in a similar sense be fake founders. So while we probably wouldn\'t make much money out of it, we\'d at least get to practice being investors on them, and they for their part would probably have a more interesting summer than they would working at Microsoft.\n\nWe\'d use the building I owned in Cambridge as our headquarters. We\'d all have dinner there once a week — on tuesdays, since I was already cooking for the thursday diners on thursdays — and after dinner we\'d bring in experts on startups to give talks.\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:44 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'14'), (b'x-ratelimit-remaining-tokens', b'39313'), (b'x-ratelimit-remaining-tokens_usage_based', b'39313'), (b'x-ratelimit-reset-requests', b'22h13m40.251s'), (b'x-ratelimit-reset-tokens', b'1.03s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.03s'), (b'x-request-id', b'd8f1c9526b867763960bec2bf8748266'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830358da79cc6e4b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.609602 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer. Why not organize a summer program where they\'d start startups instead? We wouldn\'t feel guilty for being in a sense fake investors, because they would in a similar sense be fake founders. So while we probably wouldn\'t make much money out of it, we\'d at least get to practice being investors on them, and they for their part would probably have a more interesting summer than they would working at Microsoft.\n\nWe\'d use the building I owned in Cambridge as our headquarters. We\'d all have dinner there once a week — on tuesdays, since I was already cooking for the thursday diners on thursdays — and after dinner we\'d bring in experts on startups to give talks.\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:46 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'13'), (b'x-ratelimit-remaining-tokens', b'39313'), (b'x-ratelimit-remaining-tokens_usage_based', b'39313'), (b'x-ratelimit-reset-requests', b'22h20m50.352s'), (b'x-ratelimit-reset-tokens', b'1.03s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.03s'), (b'x-request-id', b'9bd64518be1e6cd4f64c4eb36faaf8b4'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830358e66d026e4b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.327073 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer. Why not organize a summer program where they\'d start startups instead? We wouldn\'t feel guilty for being in a sense fake investors, because they would in a similar sense be fake founders. So while we probably wouldn\'t make much money out of it, we\'d at least get to practice being investors on them, and they for their part would probably have a more interesting summer than they would working at Microsoft.\n\nWe\'d use the building I owned in Cambridge as our headquarters. We\'d all have dinner there once a week — on tuesdays, since I was already cooking for the thursday diners on thursdays — and after dinner we\'d bring in experts on startups to give talks.\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:49 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'12'), (b'x-ratelimit-remaining-tokens', b'39313'), (b'x-ratelimit-remaining-tokens_usage_based', b'39313'), (b'x-ratelimit-reset-requests', b'22h27m58.78s'), (b'x-ratelimit-reset-tokens', b'1.03s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.03s'), (b'x-request-id', b'2688aa86b4972468ad2c781417f5d045'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830358fcdecb6e4b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.969461 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer. Why not organize a summer program where they\'d start startups instead? We wouldn\'t feel guilty for being in a sense fake investors, because they would in a similar sense be fake founders. So while we probably wouldn\'t make much money out of it, we\'d at least get to practice being investors on them, and they for their part would probably have a more interesting summer than they would working at Microsoft.\n\nWe\'d use the building I owned in Cambridge as our headquarters. We\'d all have dinner there once a week — on tuesdays, since I was already cooking for the thursday diners on thursdays — and after dinner we\'d bring in experts on startups to give talks.\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f16650>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f14970>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:25:58 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'11'), (b'x-ratelimit-remaining-tokens', b'39313'), (b'x-ratelimit-remaining-tokens_usage_based', b'39313'), (b'x-ratelimit-reset-requests', b'22h35m2.264s'), (b'x-ratelimit-reset-tokens', b'1.03s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.03s'), (b'x-request-id', b'0549a011368fbcc7f03dc123fc5e9195'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035931df181fc1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.029555 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nThat went right by 99% of readers, but professional investors are thinking "Wow, that means they got all the returns." But once again, this was not due to any particular insight on our part. We didn\'t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\'t have known where to start. [14]\n\nThe most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer. Why not organize a summer program where they\'d start startups instead? We wouldn\'t feel guilty for being in a sense fake investors, because they would in a similar sense be fake founders. So while we probably wouldn\'t make much money out of it, we\'d at least get to practice being investors on them, and they for their part would probably have a more interesting summer than they would working at Microsoft.\n\nWe\'d use the building I owned in Cambridge as our headquarters. We\'d all have dinner there once a week — on tuesdays, since I was already cooking for the thursday diners on thursdays — and after dinner we\'d bring in experts on startups to give talks.\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f17190>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f17af0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:26:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1218'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'10'), (b'x-ratelimit-remaining-tokens', b'39313'), (b'x-ratelimit-remaining-tokens_usage_based', b'39313'), (b'x-ratelimit-reset-requests', b'22h42m7.653s'), (b'x-ratelimit-reset-tokens', b'1.03s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.03s'), (b'x-request-id', b'0d5a8deff3e0268f42c888abc9e92433'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303595b4bd40439-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(YC, is, batch model)
(YC, fund, startups)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('YC', 'is', 'batch model'), ('YC', 'fund', 'startups')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4941.6695838, ttl=10, perf_time=4965.4370944 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4965.6291113, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4965.6291113, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`IS`]->(n2)\n        ' {'subj': 'YC', 'obj': 'batch model'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 97, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAmpA=', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4965.6291113, ttl=10, perf_time=4965.7833127 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4965.6291113, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`FUND`]->(n2)\n        ' {'subj': 'YC', 'obj': 'startups'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 212, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAnJA=', 'stats': {'contains-updates': True, 'relationships-created': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund. They were an impressive group. That first batch included reddit, Justin Kan and Emmett Shear, who went on to found Twitch, Aaron Swartz, who had already helped write the RSS spec and would a few years later become a martyr for open access, and Sam Altman, who would later become the second president of YC. I don\'t think it was entirely luck that the first batch was so good. You had to be pretty bold to sign up for a weird thing like the Summer Founders Program instead of a summer job at a legit place like Microsoft or Goldman Sachs.\n\nThe deal for startups was based on a combination of the deal we did with Julian ($10k for 10%) and what Robert said MIT grad students got for the summer ($6k). We invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]\n\nFairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:07 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'9'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'22h49m17.49s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'f89b7b05f0e2e9b66951768e29df2919'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035968cd290439-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.860996 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund. They were an impressive group. That first batch included reddit, Justin Kan and Emmett Shear, who went on to found Twitch, Aaron Swartz, who had already helped write the RSS spec and would a few years later become a martyr for open access, and Sam Altman, who would later become the second president of YC. I don\'t think it was entirely luck that the first batch was so good. You had to be pretty bold to sign up for a weird thing like the Summer Founders Program instead of a summer job at a legit place like Microsoft or Goldman Sachs.\n\nThe deal for startups was based on a combination of the deal we did with Julian ($10k for 10%) and what Robert said MIT grad students got for the summer ($6k). We invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]\n\nFairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:08 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'8'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'22h56m28.356s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'869be3c677345c355513cc5970396a4a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303596fd9800439-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.650583 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund. They were an impressive group. That first batch included reddit, Justin Kan and Emmett Shear, who went on to found Twitch, Aaron Swartz, who had already helped write the RSS spec and would a few years later become a martyr for open access, and Sam Altman, who would later become the second president of YC. I don\'t think it was entirely luck that the first batch was so good. You had to be pretty bold to sign up for a weird thing like the Summer Founders Program instead of a summer job at a legit place like Microsoft or Goldman Sachs.\n\nThe deal for startups was based on a combination of the deal we did with Julian ($10k for 10%) and what Robert said MIT grad students got for the summer ($6k). We invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]\n\nFairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:10 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'7'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'23h3m38.423s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'ba1b5a63e4ac59de6d70edae6b48ce63'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303597bbee90439-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.944481 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund. They were an impressive group. That first batch included reddit, Justin Kan and Emmett Shear, who went on to found Twitch, Aaron Swartz, who had already helped write the RSS spec and would a few years later become a martyr for open access, and Sam Altman, who would later become the second president of YC. I don\'t think it was entirely luck that the first batch was so good. You had to be pretty bold to sign up for a weird thing like the Summer Founders Program instead of a summer job at a legit place like Microsoft or Goldman Sachs.\n\nThe deal for startups was based on a combination of the deal we did with Julian ($10k for 10%) and what Robert said MIT grad students got for the summer ($6k). We invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]\n\nFairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:14 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'6'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'23h10m46.21s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'7669a613b385929ef3888b6dbb1240ad'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830359965ccd0439-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.048075 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get "deal flow," as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\'d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\'d intended.\n\nWe invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund. They were an impressive group. That first batch included reddit, Justin Kan and Emmett Shear, who went on to found Twitch, Aaron Swartz, who had already helped write the RSS spec and would a few years later become a martyr for open access, and Sam Altman, who would later become the second president of YC. I don\'t think it was entirely luck that the first batch was so good. You had to be pretty bold to sign up for a weird thing like the Summer Founders Program instead of a summer job at a legit place like Microsoft or Goldman Sachs.\n\nThe deal for startups was based on a combination of the deal we did with Julian ($10k for 10%) and what Robert said MIT grad students got for the summer ($6k). We invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]\n\nFairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef8be0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef8a30>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:26:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1546'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'5'), (b'x-ratelimit-remaining-tokens', b'39323'), (b'x-ratelimit-remaining-tokens_usage_based', b'39323'), (b'x-ratelimit-reset-requests', b'23h17m50.674s'), (b'x-ratelimit-reset-tokens', b'1.015s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.015s'), (b'x-request-id', b'aa5aa496caabec7905bb905f7b5b49e3'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830359c56acc2410-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(undergrads, were deciding about, summer jobs)
(Summer Founders Program, was called, something)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('undergrads', 'were deciding about', 'summer jobs'), ('Summer Founders Program', 'was called', 'something')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4965.6291113, ttl=10, perf_time=4982.7635279 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4983.0088051, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4983.0088051, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WERE_DECIDING_ABOUT`]->(n2)\n        ' {'subj': 'undergrads', 'obj': 'summer jobs'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 76, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAnpA=', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4983.0088051, ttl=10, perf_time=4983.1320819 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=4983.0088051, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`WAS_CALLED`]->(n2)\n        ' {'subj': 'Summer Founders Program', 'obj': 'something'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 94, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAoJA=', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]\n\nFairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.\n\nAs YC grew, we started to notice other advantages of scale. The alumni became a tight community, dedicated to helping one another, and especially the current batch, whose shoes they remembered being in. We also noticed that the startups were becoming one another\'s customers. We used to refer jokingly to the "YC GDP," but as YC grows this becomes less and less of a joke. Now lots of startups get their initial set of customers almost entirely from among their batchmates.\n\nI had not originally intended YC to be a full-time job. I was going to do three things: hack, write essays, and work on YC. As YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn\'t startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one\'s intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:24 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'4'), (b'x-ratelimit-remaining-tokens', b'39321'), (b'x-ratelimit-remaining-tokens_usage_based', b'39321'), (b'x-ratelimit-reset-requests', b'23h25m0.274s'), (b'x-ratelimit-reset-tokens', b'1.018s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.018s'), (b'x-request-id', b'0ac916f1745a7a9056f9d068ae46fc5d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830359d44cce2410-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.989078 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]\n\nFairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.\n\nAs YC grew, we started to notice other advantages of scale. The alumni became a tight community, dedicated to helping one another, and especially the current batch, whose shoes they remembered being in. We also noticed that the startups were becoming one another\'s customers. We used to refer jokingly to the "YC GDP," but as YC grows this becomes less and less of a joke. Now lots of startups get their initial set of customers almost entirely from among their batchmates.\n\nI had not originally intended YC to be a full-time job. I was going to do three things: hack, write essays, and work on YC. As YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn\'t startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one\'s intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:25 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'3'), (b'x-ratelimit-remaining-tokens', b'39321'), (b'x-ratelimit-remaining-tokens_usage_based', b'39321'), (b'x-ratelimit-reset-requests', b'23h32m11.047s'), (b'x-ratelimit-reset-tokens', b'1.018s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.018s'), (b'x-request-id', b'ba6f9d4da8a1f5d8d20b6586f70a4ca1'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830359dc3e142410-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.772857 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]\n\nFairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.\n\nAs YC grew, we started to notice other advantages of scale. The alumni became a tight community, dedicated to helping one another, and especially the current batch, whose shoes they remembered being in. We also noticed that the startups were becoming one another\'s customers. We used to refer jokingly to the "YC GDP," but as YC grows this becomes less and less of a joke. Now lots of startups get their initial set of customers almost entirely from among their batchmates.\n\nI had not originally intended YC to be a full-time job. I was going to do three things: hack, write essays, and work on YC. As YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn\'t startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one\'s intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:27 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'2'), (b'x-ratelimit-remaining-tokens', b'39321'), (b'x-ratelimit-remaining-tokens_usage_based', b'39321'), (b'x-ratelimit-reset-requests', b'23h39m21.002s'), (b'x-ratelimit-reset-tokens', b'1.018s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.018s'), (b'x-request-id', b'87bce6477c152802f7617c9b088b572a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830359e8dc852410-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.740248 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]\n\nFairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.\n\nAs YC grew, we started to notice other advantages of scale. The alumni became a tight community, dedicated to helping one another, and especially the current batch, whose shoes they remembered being in. We also noticed that the startups were becoming one another\'s customers. We used to refer jokingly to the "YC GDP," but as YC grows this becomes less and less of a joke. Now lots of startups get their initial set of customers almost entirely from among their batchmates.\n\nI had not originally intended YC to be a full-time job. I was going to do three things: hack, write essays, and work on YC. As YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn\'t startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one\'s intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:31 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'1'), (b'x-ratelimit-remaining-tokens', b'39321'), (b'x-ratelimit-remaining-tokens_usage_based', b'39321'), (b'x-ratelimit-reset-requests', b'23h46m28.986s'), (b'x-ratelimit-reset-tokens', b'1.018s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.018s'), (b'x-request-id', b'ab76875ce7da666715ab520d306700b9'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035a01ed962410-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.160412 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nWe invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]\n\nFairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.\n\nAs YC grew, we started to notice other advantages of scale. The alumni became a tight community, dedicated to helping one another, and especially the current batch, whose shoes they remembered being in. We also noticed that the startups were becoming one another\'s customers. We used to refer jokingly to the "YC GDP," but as YC grows this becomes less and less of a joke. Now lots of startups get their initial set of customers almost entirely from among their batchmates.\n\nI had not originally intended YC to be a full-time job. I was going to do three things: hack, write essays, and work on YC. As YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn\'t startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one\'s intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef5cf0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef4d00>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:26:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1900'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39321'), (b'x-ratelimit-remaining-tokens_usage_based', b'39321'), (b'x-ratelimit-reset-requests', b'23h53m33.342s'), (b'x-ratelimit-reset-tokens', b'1.018s'), (b'x-ratelimit-reset-tokens_usage_based', b'1.018s'), (b'x-request-id', b'cb932d4107319b58d33f615c2a8efcf6'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035a31ada10467-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(YC, grew, tight community)
(startups, get, initial set of customers)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('YC', 'grew', 'tight community'), ('startups', 'get', 'initial set of customers')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=4983.0088051, ttl=10, perf_time=5000.5219629 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=5000.6949093, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=5000.6949093, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`GREW`]->(n2)\n        ' {'subj': 'YC', 'obj': 'tight community'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 79, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAopA=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=5000.6949093, ttl=10, perf_time=5000.8235025 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=5000.6949093, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`GET`]->(n2)\n        ' {'subj': 'startups', 'obj': 'initial set of customers'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 78, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckApJA=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:41 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m30.623s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'7dddd93c19713dfc49943ecca5fd8a43'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035a42c9240467-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.966203 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:43 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m29.373s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'bff9fdf202897ff6300e05435641d962'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035a4a7f570467-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.894673 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:45 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m27.224s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'964b425be858e744310ebb65d200c85b'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035a580e140467-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.910410 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:49 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m23.045s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'e5c291094e43bb8dc1c1e790223af940'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035a721a3f0467-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.801509 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f16cb0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f15240>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:26:57 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m14.739s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'7399cfc9d91ad341150ddf222561c877'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035aa5fcdb097a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.925032 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f17f40>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f16890>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:27:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m7.352s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'518a165597ecc71eae8a1542359b71d3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035ad42b1f8b45-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.266492 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eb2710>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2a3b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:27:12 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m0.496s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'21974f3646c4fbdb80bce7bcdbd3c2fe'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035aff0ed40998-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.882158 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e8a8c0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e8b880>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:27:19 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h52m52.999s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'16917b62ed9a45a26c84b11d101dc975'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035b2dd8ab09a1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.931824 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e8a080>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e88280>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:27:28 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h59m56.45s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'd6728df65af9a7ee141dadb700066f78'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035b633c5ee6c2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.280362 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e9d900>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e9ee60>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:27:34 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h59m49.65s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'd69262f18c9bc0af15a3a2de340088ff'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035b8dbec5210b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.278122 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ebde70>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eb0070>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:27:41 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h59m42.895s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'c59130d7265e91e85ada872d41b3f1a1'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035bb80b92516a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.071794 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ebc1f0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ebc220>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:27:48 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h59m36.325s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'97c08ba273be2cd34da86b3464e39151'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035be10b5be666-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.010315 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e47220>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e46950>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:27:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h59m29.81s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'3681e3e04c659e415a3a908284d2979b'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035c09c91ae6ca-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.265162 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ecec20>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ece320>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:28:01 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h59m23.073s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'edb298dd9e39f4908a6ae083d4daa96c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035c33ffae0514-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.382491 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ecf1f0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ecf9a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:28:09 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h59m15.163s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'eb81b625126d8620a01b624010cd4bec'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035c655a93044f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.006405 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ecd6c0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eebf10>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:28:15 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h59m8.594s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'eeee29a126ee9db821de6dd6add8e926'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035c8e4e63e6b2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.913104 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ec5a20>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ec5330>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:28:23 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h59m1.197s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'db6b5f4bbc7a4811ce47d13f81ecfbad'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=U7hW0AjhQOKfeYIu8.7BBXYA3uz3Q9R732TE3Z6wmT4-1701685703-0-AT0njnMlCYQmj1gt2THemqoOCbYLM+mTlP4kzbLu7R+6FplhFtGN4Pd7ARyZz8kOHXH2jFsjDUwu1MvtAF/X1bg=; path=/; expires=Mon, 04-Dec-23 10:58:23 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035cbc98bf0428-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.813468 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ec7550>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ec6b60>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:28:30 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h58m53.856s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'e64ee180ba4a2f71b4996d0146ec14ee'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035cea8e33050d-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.351887 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ec7490>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ee49d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:28:37 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h58m47.007s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'2e21da782deebecb296fde2a0885bfc4'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035d153fa20511-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.528461 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed25f0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed28c0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:28:44 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h58m39.832s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'84959ec5d63df6bf124b08f363e09162'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035d421d8704bc-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.826329 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed2aa0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed32e0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:28:52 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h58m32.493s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'aa32a1f4fba91ea1abf9cdb41b3793e0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035d6ffe9ae63e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.036309 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed2e30>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed3040>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:28:58 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h58m25.977s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'7ddd566c55bb48da897f68530c70b8a9'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035d98cb360461-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.516668 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eaad70>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0eab910>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:29:06 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h58m17.975s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'51b93f5f9f9102e989362f1e0c9b0d1f'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035dcac9a904e3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.956253 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ed9ab0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0edafb0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:29:15 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h58m9.436s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'76446eecf92f4a3c8a216af9e6d5d4a3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035e001efd0ef4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.232690 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0edb280>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0edab60>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:29:22 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h58m2.45s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'30a15ab69484ff8a8e557a21ff5de0f3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035e2bcb3e04f0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.735693 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f317b0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f301c0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:29:29 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h57m55.171s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'34081988bd604fde899b12f3dbdaa168'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035e592f2de65a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.115301 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f32b60>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f32140>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:29:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h57m47.777s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'ad7bb1ca3641bdf156f3b5707c28c6a5'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035e878c8004c3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.720694 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f337c0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f33e20>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:29:45 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h57m38.941s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'55c71255281f455692c832785722c95e'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035ebebf3904ce-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.634052 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d39780>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d39750>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:29:52 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h57m31.637s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'420c0ddaea06ef0f21cb4d977decb3a0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035eec4eea04c2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.293765 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d3a050>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d39ff0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:29:59 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h57m24.827s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'3a088b14c537202630413dbc1a2592c6'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035f16fdb00fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.169642 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d3acb0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d3b790>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:30:06 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h57m18.151s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'7df7081554d8e5b00318dbba64bf4d2a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035f409f780988-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.489619 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d45780>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d45720>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:30:14 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h57m10.116s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'3e48f288683136398ea4f79c42f677e7'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035f72eb2a0455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.794080 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d46c20>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d46cb0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:30:22 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h57m1.71s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'ab7976e7d4817513d7bf36e49e2eb930'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035fa77eaa04ff-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.233305 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d478e0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d47430>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:30:29 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h56m54.757s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'cf983bc3cdb6dc9ad3d248e7b7ce2c4e'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83035fd2deba09a0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.946911 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d51750>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d515d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:30:38 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h56m46.259s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'62f46f9f4737509e9ad70ad196696958'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036007fa330ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.819782 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d52bf0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d52c50>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:30:46 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h56m37.945s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'e6ce08768a1cc90f4537c94a0d14ed44'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303603bdd340974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.098139 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d53fa0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d536d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:30:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h56m30.36s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'9a0df3af0f25c7879707b17d88263adc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303606b4f000ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.982487 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d5d6c0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d5d690>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:31:01 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h56m22.816s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'27a46b3b873329e915b1fe474ee385dd'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303609a787e0ec8-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.503024 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d5ebc0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d5ec20>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:31:09 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h56m14.655s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'2c475cfb3da1eb9fd3e5916747fcb2e3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830360cd4f235df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.638797 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d5ff10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d5f8b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:31:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h56m7.378s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'81fca53edca4a4a356fa8126516d41bc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830360faeb8c21f7-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.526656 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d6cac0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d5eec0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:31:24 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h56m0.382s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'18338b67f2f7595d9b949d7815042f8d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036126cacde65a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.518935 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d6eb90>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d6e230>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:31:32 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h55m52.356s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'e55a6f99c4165a9f8d428150a20fb6e3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036158cb6b8b6f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.635964 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d6f670>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d6f3a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:31:40 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h55m44.211s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'd08cb5700662ba1497f23ffb854a35c5'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303618bca8704f1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.224894 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d79630>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d796c0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:31:48 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h55m36.49s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'6ba8034128bb6f849b83e119150141a8'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830361bc1f7ae69a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.198829 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d7ab60>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d7abf0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:31:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h55m29.661s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'7a7e14b1eb12b70a4205480ca240782b'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830361e6aa4f045b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.542024 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d7b4c0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d7b6a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:32:02 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h55m21.569s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'7c5f14de2eaf3ee987b7e73b6310d5ac'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830362191b606e5e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.681455 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d88dc0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d89690>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:32:11 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h55m13.389s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'68c81544f87f2fd264fc056d5ceb6356'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303624c5fbb8b2f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.478084 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d8a2f0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d88d30>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:32:19 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h55m5.384s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'b332e500bc2e16d56b4cd2c209def801'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303627e68046e4b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.778098 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d8b610>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d8b7f0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:32:27 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h54m57.088s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'4b3e129edeaa704be23e53e40d6a0f1b'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830362b23fe31fc1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.855805 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d99600>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d995d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:32:34 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h54m49.749s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'd0793e45ce865ad063d203dd0ca074dd'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830362e02f4b0439-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.046516 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d9ab00>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d9ab60>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:32:41 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h54m42.721s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'46333c0b2e90c288870bf51926e1d460'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036309cec92410-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.455276 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d9be50>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d9b310>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:32:49 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h54m35.058s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'35d2053064d257eeb8dceb8d1059dc18'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303633be96d0467-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.578505 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0da1630>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0da15a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:32:57 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h54m26.937s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'f295535196a21b875c50593fb0ef0b4c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303636c7be5097a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.354937 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0da2ad0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0da2b60>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:33:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h54m18.926s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'99f75a850c93e2031a9c3715637df7b0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830363a0dd9b8b45-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.139140 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0da3460>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0da3610>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:33:13 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h54m11.261s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'7244bced449c8e8054ae74aa3124e002'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830363d0bd420998-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.760083 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dad570>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dad5a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:33:21 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h54m3.032s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'0af6e4ef2bc9f64612facdf981f0c427'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303640438c409a1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.477097 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef7b20>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef7c70>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:33:29 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m54.545s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'5d7d5db621a30313903525ccddc32495'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830364370f5be6c2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.087458 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef7010>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef72b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:33:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m47.873s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'8b7f8d95727b53f9d11af3e187898855'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036462eaa7210b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.056698 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0efbca0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0efa380>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:33:44 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m40.33s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'378574868f3645e35c62767638aad4c9'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036491fa9d516a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.614853 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0efaf20>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef9c30>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:33:52 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m32.017s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'9d6e5bc9677f753bb09c249e805f5645'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830364c5eeaae666-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.642183 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f08df0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f083a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:33:59 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m24.647s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'8716e313262461045f0dc7091e156d88'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830364f4194fe6ca-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.032520 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef9c00>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f09240>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:34:07 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m17.02s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'dcbc4614ea7b974f49def76e0fb3c456'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036523aebb0514-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.115431 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2a5f0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2b3a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:34:14 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m10.355s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'2f55dd1c381017d19901bb96ba83a573'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303654d6ee1044f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.956833 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f29540>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2bdf0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:34:21 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h53m2.897s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'85eb4cf6d667dfc329e0ed5275f56e72'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303657be961e6b2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.191960 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0daf880>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0daf8b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:34:28 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h52m56.175s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'294f13fa976a322d860e5e7232250c66'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830365a61bdf0428-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.652892 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dbceb0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dbce50>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:34:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h52m48.026s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'c33b2059a2178703daef9e96a78d3b84'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830365d8fa23050d-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.187503 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': "Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob's mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\nAs YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\n\nIn the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn't startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one's intellectual curiosity.\n\nHN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I'd had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one's work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]\n\nAs well as HN, I wrote all of YC's internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn't have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I've done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective.\nTriplets:\n"}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dbd870>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dbd8a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 04 Dec 2023 10:34:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0613'), (b'openai-organization', b'user-gjqodbfr3ilex2bmksptyavp'), (b'openai-processing-ms', b'1423'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39334'), (b'x-ratelimit-remaining-tokens_usage_based', b'39334'), (b'x-ratelimit-reset-requests', b'23h59m52.028s'), (b'x-ratelimit-reset-tokens', b'999ms'), (b'x-ratelimit-reset-tokens_usage_based', b'999ms'), (b'x-request-id', b'65768c2f5965cba6c13b941936409321'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303660a79320511-HKG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "200 OK"
DEBUG:llama_index.llm_predictor.base:(YC, grew, more excited)
(Robert and I, started working on, new version of Arc)
DEBUG:llama_index.indices.knowledge_graph.base:> Extracted triplets: [('YC', 'grew', 'more excited'), ('Robert and I', 'started working on', 'new version of Arc')]
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=5000.6949093, ttl=10, perf_time=5485.2706983 => True
DEBUG:neo4j:[#0000]  _: <POOL> dropping routing table for database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=True, has_server_for_mode=False, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => False
DEBUG:neo4j:[#0000]  _: <POOL> attempting to update routing table from IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#0000]  _: <RESOLVE> in: 7cbcc4fd.databases.neo4j.io:7687
DEBUG:neo4j:[#0000]  _: <RESOLVE> dns resolver out: 34.126.171.25:7687
DEBUG:neo4j:[#0000]  _: <POOL> _acquire router connection, database='neo4j', address=ResolvedIPv4Address(('34.126.171.25', 7687))
DEBUG:neo4j:[#9C02]  _: <POOL> picked existing connection bolt-45
DEBUG:neo4j:[#9C02]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C02]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C02]  C: ROUTE {'address': '7cbcc4fd.databases.neo4j.io:7687'} () {'db': 'neo4j'}
DEBUG:neo4j:[#9C02]  S: SUCCESS {'rt': {'servers': [{'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'WRITE'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'READ'}, {'addresses': ['7cbcc4fd.databases.neo4j.io:7687'], 'role': 'ROUTE'}], 'ttl': 10, 'db': 'neo4j'}}
DEBUG:neo4j:[#9C02]  _: <POOL> released bolt-45
DEBUG:neo4j:[#0000]  _: <ROUTING> updated table=RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=5485.6109364, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> update routing table from address=ResolvedIPv4Address(('34.126.171.25', 7687)) (RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=5485.6109364, ttl=10))
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`GREW`]->(n2)\n        ' {'subj': 'YC', 'obj': 'more excited'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 121, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckApZA=', 'stats': {'contains-updates': True, 'labels-added': 1, 'relationships-created': 1, 'nodes-created': 1, 'properties-set': 1}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:neo4j:[#0000]  _: <POOL> acquire routing connection, access_mode='WRITE', database='neo4j'
DEBUG:neo4j:[#0000]  _: <POOL> routing aged?, database=neo4j
DEBUG:neo4j:[#0000]  _: <ROUTING> purge check: last_updated_time=5485.6109364, ttl=10, perf_time=5485.8913366 => False
DEBUG:neo4j:[#0000]  _: <ROUTING> checking table freshness (readonly=False): table expired=False, has_server_for_mode=True, table routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))} => True
DEBUG:neo4j:[#0000]  _: <POOL> using existing routing table RoutingTable(database='neo4j' routers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, readers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, writers={IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))}, last_updated_time=5485.6109364, ttl=10)
DEBUG:neo4j:[#0000]  _: <POOL> acquire address, database='neo4j' address=IPv4Address(('7cbcc4fd.databases.neo4j.io', 7687))
DEBUG:neo4j:[#9C04]  _: <POOL> picked existing connection bolt-46
DEBUG:neo4j:[#9C04]  _: <POOL> checked re_auth auth=None updated=False force=False
DEBUG:neo4j:[#9C04]  _: <POOL> handing out existing connection
DEBUG:neo4j:[#9C04]  C: TELEMETRY 2  # (<TelemetryAPI.AUTO_COMMIT: 2>)
DEBUG:neo4j:[#9C04]  C: RUN '\n            MERGE (n1:`Entity` {id:$subj})\n            MERGE (n2:`Entity` {id:$obj})\n            MERGE (n1)-[:`STARTED_WORKING_ON`]->(n2)\n        ' {'subj': 'Robert and I', 'obj': 'new version of Arc'} {'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  C: PULL {'n': 1000}
DEBUG:neo4j:[#9C04]  S: SUCCESS {}
DEBUG:neo4j:[#9C04]  S: SUCCESS {'t_first': 97, 'fields': []}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: READY > STREAMING
DEBUG:neo4j:[#9C04]  S: SUCCESS {'bookmark': 'FB:kcwQmEqCmeDoTVWr1Pon094DXckAp5A=', 'stats': {'contains-updates': True, 'labels-added': 2, 'relationships-created': 1, 'nodes-created': 2, 'properties-set': 2}, 'type': 'w', 't_last': 0, 'db': 'neo4j'}
DEBUG:neo4j:[#9C04]  _: <CONNECTION> server state: STREAMING > READY
DEBUG:neo4j:[#9C04]  _: <POOL> released bolt-46
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:34:47 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m49.449s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'4f5f76f4b9c7ec0bd7bfa92f2f015f63'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303661afca00511-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 0.784228 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:34:48 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m48.392s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'697744ca986aea43b53bddab52501437'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036621a8360511-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 1.604944 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:34:50 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m46.484s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'903647ae48db0ed0c963b39af48cc180'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303662dcb840511-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 3.999652 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:34:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m42.188s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'fe1cd5e1a60e84568b9b8549b4dd4b35'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830366486b850511-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.454979 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d67d90>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d67df0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:35:02 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m34.238s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'86a0969486c68df54aec6b52401f3dd5'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303667a0bbc04bc-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.635977 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d5f880>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0efba30>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:35:10 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m26.121s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'bc5ab5298c1b1ae421f08b0ce44827a6'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830366acdf07e63e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.796537 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dbe830>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dbe710>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:35:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m18.828s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'8807e6bb710a8647d07e437054024268'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830366da6f180461-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.462960 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dbcbb0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dbd630>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:35:25 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m10.898s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'7f980bc65eea8dd8900dc10b12d2e783'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303670c0e4004e3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.071515 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dcdf90>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dcd900>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:35:32 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m4.312s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'990166eec186fb722187c8dde75d0cc6'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830367356b0c04f0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.230875 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dcf8e0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dcf8b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:35:39 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m57.249s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'76b9fb0dca27084f7d27aa4d31ace077'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830367614a6204ce-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.222107 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dd4e50>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dcf910>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:35:46 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m50.365s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'4f381b783a518474fe08ada1b13a7646'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303678c5b9704c2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.509781 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dd63b0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dd56f0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:35:53 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m43.135s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'4cdd716cdac185235bf8cba4a05359f0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830367b96b300fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.932053 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dd7850>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dd6e60>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:36:02 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m34.059s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'436c539d3513675056997b4145c627c8'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830367f15f140988-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.153039 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0de0df0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0de0a90>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:36:10 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m26.3s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'c163bfb69d35e7aac997a13f1fcdc422'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036822ac550455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.630487 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0de23b0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0de2350>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:36:18 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m18.172s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'107970a22b9ee2e62e955f97c8225917'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830368558c0804ff-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.183148 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0de3850>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0de38b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:36:26 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m10.482s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'8886defd4ecb656297b3d067983a93d7'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830368859f5309a0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.224775 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0df0ac0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0df0e50>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:36:32 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m3.674s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'382e52b66dd52ef1705308f8f04face2'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830368b00f420ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.334460 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0df2320>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0df22f0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:36:40 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m55.839s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'c97f8de2eb20d96808f57f0e9afa8577'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830368e128990974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.925008 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0df3820>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0df38b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:36:49 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m47.39s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'0912c230eaf9edfc1f124fc06d431801'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036915cccd0ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.198812 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0df8d90>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0df8a30>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:36:56 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m39.68s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'ce9aa4f5515495b6e0826d3a528e1f6a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303694618300ec8-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.324702 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dfa350>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dfa320>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:37:03 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m32.871s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'70cdba4bde4d1071d53e52e8ec6301f3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036970a8375df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.068908 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dfb7f0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dfb850>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:37:11 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m25.251s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'1a81081272407ab75ec0eb44e1589814'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830369a019c121f7-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.575934 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e04d60>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e04a00>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:37:18 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m18.174s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'83adb017b07602116dd2c8f1c106a16c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830369cc88d2e65a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.988218 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e062c0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e06290>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:37:25 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m10.659s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'62584b53c6076e546dfdcdabfeb6e309'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830369fb7b268b6f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.899720 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e077c0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e07820>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:37:33 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m3.097s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'830904dd556c8d91dd8ab239d761c626'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036a2aa98704f1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.478794 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e14dc0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e079d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:37:41 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m55.108s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'a0b263097e70afcfbd97e2b7bf44769e'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036a5c5af5e69a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.028026 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e15a20>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e07a90>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:37:48 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m47.595s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'c3f70a34cea7e839a9803e11faa5ba75'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036a8b9e63045b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.585670 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e17790>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e17820>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:37:56 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m40.505s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'd86c75a277d50274f7a411508bce79c0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036ab7f98c6e5e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.194548 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e20d90>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e17880>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:38:02 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m33.643s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'a0b3811f794f5269b217e957b23cb2ac'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036ae2ba0c8b2f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.490410 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e22110>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e17fa0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:38:10 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m25.699s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'50c60e35f39bc0ef74362ff9ba7f89e4'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036b147e466e4b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.120960 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e23760>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0e237c0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:38:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m19.122s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'2d909e4e27cc19f5543e084b4870a89e'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036b3dcf001fc1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.288457 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c34d00>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c34970>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:38:24 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m12.213s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'bc8e0fd9fd31f5a34dca6f21a33edf61'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036b68bb100439-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.057177 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c36260>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c35840>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:38:31 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m5.439s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'fb983b3bd922fd8072222265bde67902'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036b92a8d12410-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.342321 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c37790>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c36d70>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:38:39 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m57.464s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'238df3577a17e9742db79691d174e3dc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036bc50cde0467-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.720613 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c36dd0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c37a90>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:38:47 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m49.223s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'451530ed31d84dcd272b982f3c357102'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036bf8581b097a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.343227 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c3e260>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c3e200>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:38:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m42.344s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'2f384429820ddd604d9fca12d0b9315f'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036c2379558b45-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.310349 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c3f700>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c3f760>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:39:02 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m34.25s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'ec9fedaaf988a59bd405b1ce560189bb'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036c5608840998-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.078421 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c3f8b0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c4c940>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:39:09 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m26.65s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'4c73e941829e267e7bd4fabb429944b9'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036c8579bb09a1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.851198 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c4cee0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c4d720>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:39:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m19.329s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'98a7521ea7b921751d90f0b89d4b806d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036cb359dee6c2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.573584 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c4f6d0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c4d900>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:39:25 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m10.977s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'e87dd19acc134168aacfce28aa671f3e'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036ce77ce3210b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.711132 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c4e590>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c4ee90>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:39:32 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m3.785s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'09dc65e38f9f6a8466a346b32409d6b4'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036d147841516a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.703952 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c5a1a0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c5a170>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:39:39 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m56.567s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'8debead9701a78d5bf2a29017d538aa9'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036d416f00e666-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.728535 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c5b730>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c5b6d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:39:47 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m49.354s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'c4e79312d86c3324c1829fb684648428'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036d6e9fb8e6ca-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.404355 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c70c70>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c70b20>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:39:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m42.459s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'1a3d7ffb26af4d27471d54113d6bae8c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036d99cdee0514-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.947165 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c721a0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c721d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:40:01 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m35.03s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'b3e24fad3352517f80d17da72a0e33b3'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036dc82a8d044f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.008601 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c73670>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c72e00>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:40:08 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m28.198s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'e567ba033155b4472d9c039298f4ebf0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036df0ad22e6b2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.185173 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c73f40>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c73940>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:40:15 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m21.526s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'bb3023157c783ffd52b0a5e84fc32b65'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036e1c9ab10428-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.076313 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c7a140>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c7a110>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:40:21 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m14.978s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'e6b52db531bb248601118d0ea9a9058d'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036e45788f050d-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.808817 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c7b640>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c7b6a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:40:30 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m6.477s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'6f1b0406f26da1d365446b4007d0b5d2'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036e7a98a70511-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.392448 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c7bf10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c7bf40>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:40:37 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h53m59.503s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'5dff198e80b2b7e09b67b4d7b9495b1c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036ea63fd504bc-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.873640 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c85720>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c7ac80>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:40:45 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h53m50.629s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'cfcef4123f70da7179d4c5260849b6f1'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036edc7cc4e63e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.287468 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c87610>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c876a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:40:52 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h53m43.859s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'f2f550a1938e526b5e7663608329c0ab'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036f07fb360461-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.910056 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c94be0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c94880>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:41:01 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h53m35.289s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'51498c878fd787b62e7c209816ad0739'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036f3d798704e3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.515837 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c960e0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c96170>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:41:08 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h53m28.31s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'2a8e45ea44369e53b8fdb9584a2fdc25'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036f6929ae0ef4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.268238 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c97610>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c97670>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:41:16 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h53m20.517s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'17ba9accd0a6843c6279f898a0243f33'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036f99ebc104f0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.748678 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c97fa0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0c97f40>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:41:23 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h53m13.287s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'acd125719e3bdd0c93f9e6020c8783bc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036fc71f49e65a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.310982 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ca6140>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ca6110>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:41:30 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h53m6.482s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'fc52b9c724091d48306f645d3eade4cd'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83036ff19c3504c3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.976884 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ca6c50>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ca6980>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:41:38 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h52m58.014s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'ecf2be951692b1bfe77a4540a5317b2e'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037026895004ce-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.886314 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ca7f10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cb0880>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:41:46 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h52m49.603s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'f1e4d04b8aa62c7b8e9efe981455db9f'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303705b0c2e04c2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.029007 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cb2110>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cb20e0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:41:53 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m55.038s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'15341ffb799253cc61d375adc7cea21a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830370840b710fc2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.153141 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cb2c50>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cb35b0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:42:00 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m48.289s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'8249c9832f9e18d9c06dd98fad67f0dc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830370ae4c7b0988-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.943769 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cb8bb0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cb3eb0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:42:07 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m40.819s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'db8e4db968c32326dafb7aadecc1a9be'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830370dccec50455-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.007991 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cb9cf0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cba080>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:42:14 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m34.212s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'b7292562dc803d200eea2cdfe069223a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037106480304ff-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.929913 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cbb580>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cbb5e0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:42:21 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m26.796s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'4c32af91c443374bb5da94dc13482015'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830371349e3909a0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.187026 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cbbeb0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cc8b20>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:42:28 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m20.13s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'3bdf3a0d97ae892d4f6b36e827fb71ad'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303715e5b590ee0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.671393 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cca0b0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cca050>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:42:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m11.965s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'287e24dfb16e51f5de2d546e1b9d4e04'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830371915cb40974-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.250449 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dbc340>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dbc280>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:42:43 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h59m5.082s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'65aea2c32d4d31d271cad268b5189f82'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830371bc583c0ed4-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.941428 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2b3a0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f28fa0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:42:51 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m57.438s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'5821d25faf0bbebd3218558cc52953fe'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830371ec2f210ec8-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.739809 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f28760>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2b8e0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:42:59 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m49.207s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'797cbc57c6a3bb2e6235d58012b28ed7'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303721f8a165df0-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.076940 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2a950>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f2b310>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:43:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m42.632s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'3cd263d55a02620cd92fcf92c8706516'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037248981021f7-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.627101 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f0bbe0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0f0b070>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:43:14 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m34.476s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'4faaff0bdc9bd0cfb1da54349e5f73ce'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303727b9ad0e65a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.651896 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0efa620>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0efbf40>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:43:22 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m26.282s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'22d722762d550d6738e80b2365f69fab'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830372aecc5f8b6f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.297582 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef8190>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef81c0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:43:30 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m18.514s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'458d890e4be439009e0bb1da7b3638a0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=jVME0H_CYevuLHYhPZkDqQtVP15srRRl_UmscFwv8Fw-1701686610-0-Ac/nC/BPJsSgvUSjnYIqC0bHK/wSO1Hd16Lsf0i/imOIgN7OY1+S21RikYnZCwQjIc62UB1nWsgGuUcQ3wo4Fek=; path=/; expires=Mon, 04-Dec-23 11:13:30 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830372df7cf304f1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.322986 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef8af0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef82e0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:43:36 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m11.657s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'd31a833b4c74d6aea9a9e7d79fe96e5a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037309fcb3e69a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.839482 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dae080>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0dade40>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:43:44 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h58m4.316s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'd12f73a05d80fc37f0ac55857de712f4'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037338199c045b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.618148 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef7070>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ef7010>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:43:52 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m56.218s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'2f5b8df31ded1992ff6b60128f3bbd00'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303736ada196e5e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.135138 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cd0dc0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cd0a60>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:43:58 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m49.561s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'61b82813a3fe10a20ceb083bf85a9a86'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830373944c828b2f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.903127 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cd22c0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cd2290>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:44:06 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m42.196s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'7cb08410e661ecbc3a39c4446c86c048'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830373c268416e4b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.709410 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cd3820>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cd2f80>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:44:14 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m34.343s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'b6e59e4043bcf9cef60bccc3c0156133'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830373f34b211fc1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.800996 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cd2fe0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ce4d60>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:44:22 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m25.962s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'5a54cf9bf733861e165a609323c8ed78'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037427da490439-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.440807 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ce62f0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ce6290>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:44:30 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m18.015s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'7cca15487fa3bb1a332d718392b20d83'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037459794a2410-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.800352 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ce7790>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0ce77f0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:44:38 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m9.655s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'2111bcb65952f0761c22fb3a3deaee63'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303748dbbef0467-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.493886 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cf0d60>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cf09a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:44:46 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h57m1.625s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'74602a4324d9b054d6c19c9a23f1dd65'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830374bfcac3097a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.934975 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cf22c0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cf15d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:44:54 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m54.009s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'151e31647ab3dad0ebf8730c5b88f6a6'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830374ef89048b45-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.114047 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cf3760>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cf37c0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:45:03 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m45.139s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'fe139ac8f0f72b68f84a29861d87a6f0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037523cfe80998-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.482573 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cf2d40>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cfcd60>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:45:11 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m37.17s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'b80340459607481537c17cb2923e20d0'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037558dec009a1-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.055154 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cfe230>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cfe200>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:45:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m30.585s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'0b5f5ca98958747e824fb98ae7a36052'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037581d92ee6c2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.609985 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cfea10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cfead0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:45:25 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m23.161s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'2bc70273c95b8c8a344b196498d36825'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830375b06d76210b-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.379691 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d08cd0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0cffb80>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:45:33 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m15.062s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'53df2fb80448912a9919fa072f19525a'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830375e2faa3516a-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.534520 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d0a260>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d0a230>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:45:41 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h56m6.954s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'37801f3b6c10c616bdb45ed22a4d2612'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830376159b4ae666-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.862494 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d0b760>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d0a320>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:45:50 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m58.539s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'ae45cc15818d3b359bcb0d88dad2081c'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303764a4b6de6ca-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.868091 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d0bf10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d18d00>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:45:58 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m50.159s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'91e58d3fa013a48434f7764947483e20'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303767e998b0514-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.411931 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d1a230>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d1a1d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:46:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m43.215s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'91fded802a86ba70dd1b716ae69176fc'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830376aa0927044f-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.486739 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d1b5b0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d1b730>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:46:12 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m36.163s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'48ef500528c218602f8dd844cf041095'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830376d5fc7ce6b2-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.866180 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d28c40>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d28c70>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:46:19 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m28.67s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'86f3f6350fc7bb522f6ae695d9adf3e9'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'83037704faff0428-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.920869 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d2a1d0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d2a1a0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:46:28 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m20.261s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'50d3116e5b959128360d1ee3141cf536'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830377396b70050d-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.873979 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d2b6a0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0d2b700>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:46:35 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m12.9s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'0ce268e35cf3e753c6dfb9c2bb2c34ec'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830377677b360511-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.306950 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0b3cc10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0b3c7f0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:46:43 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h55m4.94s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'8aae5632c2a6c163e2b993da41186d8b'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830377991fa204bc-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.092026 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0b3e170>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0b3e140>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:46:50 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m58.361s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'c0708ea8c2b2e052027690d32c7c2881'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830377c25bd6e63e-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 6.393305 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0b3f6d0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0b3ead0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:46:57 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'493'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m51.471s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'1b100919dea54a68b5b1115f8cb83a13'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'830377ed3f190461-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
INFO:openai._base_client:Retrying request to /chat/completions in 7.517804 seconds
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': <MessageRole.USER: 'user'>, 'content': 'Some text is provided below. Given the text, extract up to 2 knowledge triplets in the form of (subject, predicate, object). Avoid stopwords.\n---------------------\nExample:Text: Alice is Bob\'s mother.Triplets:\n(Alice, is mother of, Bob)\nText: Philz is a coffee shop founded in Berkeley in 1982.\nTriplets:\n(Philz, is, coffee shop)\n(Philz, founded in, Berkeley)\n(Philz, founded in, 1982)\n---------------------\nText: file_path: data/paul_graham_essay.txt\n\n[17]\n\nAs well as HN, I wrote all of YC\'s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\'t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.\n\nYC was different from other kinds of work I\'ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\'t have picked a better way to do it.\n\nThere were parts of the job I didn\'t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\'t like. I was haunted by something Kevin Hale once said about companies: "No one works harder than the boss." He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\'d better work very hard.\n\nOne day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. "You know," he said, "you should make sure Y Combinator isn\'t the last cool thing you do."\n\nAt the time I didn\'t understand what he meant, but gradually it dawned on me that he was saying I should quit.\nTriplets:\n'}], 'model': 'gpt-3.5-turbo', 'stream': False, 'temperature': 0.0}}
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=60.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0b442e0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7f1cb0f8e6c0> server_hostname='api.openai.com' timeout=60.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7f1cb0b3fe80>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Mon, 04 Dec 2023 10:47:05 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'499'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'200'), (b'x-ratelimit-limit-tokens', b'40000'), (b'x-ratelimit-limit-tokens_usage_based', b'40000'), (b'x-ratelimit-remaining-requests', b'0'), (b'x-ratelimit-remaining-tokens', b'39343'), (b'x-ratelimit-remaining-tokens_usage_based', b'39343'), (b'x-ratelimit-reset-requests', b'23h54m43.455s'), (b'x-ratelimit-reset-tokens', b'985ms'), (b'x-ratelimit-reset-tokens_usage_based', b'985ms'), (b'x-request-id', b'db7a3a1fa9f0bde34f8ea24df61f5d44'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8303781f6a4604e3-HKG'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Request: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests"
